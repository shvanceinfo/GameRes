// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: NetMessage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "NetMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace NetPackage {

namespace {

const ::google::protobuf::Descriptor* CNetHead_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CNetHead_reflection_ = NULL;
const ::google::protobuf::Descriptor* CRequestLogin_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CRequestLogin_reflection_ = NULL;
const ::google::protobuf::Descriptor* CRequestLoginRet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CRequestLoginRet_reflection_ = NULL;
const ::google::protobuf::Descriptor* CRequestPing_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CRequestPing_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGSNotifyRoleBaseInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGSNotifyRoleBaseInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCAskSelectRole_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCAskSelectRole_reflection_ = NULL;
const ::google::protobuf::Descriptor* CNetErrorMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CNetErrorMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGSNotifyChangeScene_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGSNotifyChangeScene_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGSNotifyRoleAppear_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGSNotifyRoleAppear_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGSObjectDisappear_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGSObjectDisappear_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCAskLogout_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCAskLogout_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGSObjectMove_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGSObjectMove_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCAskMove_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCAskMove_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGSNotifyRoleProfileChange_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGSNotifyRoleProfileChange_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCReportPassGate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCReportPassGate_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCAskTreasureBoxDropGoods_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCAskTreasureBoxDropGoods_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCAskEnterScene_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCAskEnterScene_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGSNotifyRoleMapScheduleList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGSNotifyRoleMapScheduleList_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGSNotifyRoleFightProperty_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGSNotifyRoleFightProperty_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGSNotifyAssetChange_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGSNotifyAssetChange_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGSNotifyLevelChange_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGSNotifyLevelChange_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGSNotifyExpChange_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGSNotifyExpChange_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGSNotifyCurProperty_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGSNotifyCurProperty_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGSNotifyDisplayGateIncome_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGSNotifyDisplayGateIncome_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCAskRelive_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCAskRelive_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCReportExp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCReportExp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCReportUseSkill_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCReportUseSkill_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGSNotifySkillReleased_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGSNotifySkillReleased_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCReportOBjectAppear_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCReportOBjectAppear_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGSNotifyObjectAppear_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGSNotifyObjectAppear_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCReportOBjectDisappear_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCReportOBjectDisappear_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGSNotifyObjectDisappear_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGSNotifyObjectDisappear_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCReportObjectAction_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCReportObjectAction_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGSNotifyObjectAction_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGSNotifyObjectAction_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCReportObjectHurm_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCReportObjectHurm_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGSNotifyObjectHurm_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGSNotifyObjectHurm_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCAskEnterTowerInstance_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCAskEnterTowerInstance_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCReportTowerInstanceScore_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCReportTowerInstanceScore_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCAskTowerInstanceRank_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCAskTowerInstanceRank_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCAskTowerInstanceAward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCAskTowerInstanceAward_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCAskEMailList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCAskEMailList_reflection_ = NULL;
const ::google::protobuf::Descriptor* GCAskReadEMail_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GCAskReadEMail_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCAskGetEMailPrize_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCAskGetEMailPrize_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCAskRemoveEMail_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCAskRemoveEMail_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGSNotifyRankList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGSNotifyRankList_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGSNotifyEMailList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGSNotifyEMailList_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCSendCreateRole_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCSendCreateRole_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCSendCreateRoleRet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCSendCreateRoleRet_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCAskRankList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCAskRankList_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCAsChargeIOS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCAsChargeIOS_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCNotifyChargeIOS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCNotifyChargeIOS_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCReportProcuce_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCReportProcuce_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCAskChapterAward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCAskChapterAward_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCAskMedalInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCAskMedalInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCAskMedalLevelUp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCAskMedalLevelUp_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCAskAddFriend_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCAskAddFriend_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CGCAskAddFriend_FriendSendType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CGCVipFriend_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCVipFriend_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CGCVipFriend_FriendSendType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CGCAskFriendRecord_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCAskFriendRecord_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCAskSelectPlayer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCAskSelectPlayer_reflection_ = NULL;
const ::google::protobuf::Descriptor* CGCAskGuideComplate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CGCAskGuideComplate_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CeC2GType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* CeG2CType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_NetMessage_2eproto() {
  protobuf_AddDesc_NetMessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "NetMessage.proto");
  GOOGLE_CHECK(file != NULL);
  CNetHead_descriptor_ = file->message_type(0);
  static const int CNetHead_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CNetHead, _length_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CNetHead, _assistantcmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CNetHead, _body_),
  };
  CNetHead_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CNetHead_descriptor_,
      CNetHead::default_instance_,
      CNetHead_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CNetHead, _has_bits_[0]),
      -1,
      -1,
      sizeof(CNetHead),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CNetHead, _internal_metadata_),
      -1);
  CRequestLogin_descriptor_ = file->message_type(1);
  static const int CRequestLogin_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CRequestLogin, _username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CRequestLogin, _userpassword_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CRequestLogin, _userguid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CRequestLogin, _devicetoken_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CRequestLogin, _reconnect_),
  };
  CRequestLogin_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CRequestLogin_descriptor_,
      CRequestLogin::default_instance_,
      CRequestLogin_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CRequestLogin, _has_bits_[0]),
      -1,
      -1,
      sizeof(CRequestLogin),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CRequestLogin, _internal_metadata_),
      -1);
  CRequestLoginRet_descriptor_ = file->message_type(2);
  static const int CRequestLoginRet_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CRequestLoginRet, _username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CRequestLoginRet, _userguid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CRequestLoginRet, _flag_),
  };
  CRequestLoginRet_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CRequestLoginRet_descriptor_,
      CRequestLoginRet::default_instance_,
      CRequestLoginRet_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CRequestLoginRet, _has_bits_[0]),
      -1,
      -1,
      sizeof(CRequestLoginRet),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CRequestLoginRet, _internal_metadata_),
      -1);
  CRequestPing_descriptor_ = file->message_type(3);
  static const int CRequestPing_offsets_[1] = {
  };
  CRequestPing_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CRequestPing_descriptor_,
      CRequestPing::default_instance_,
      CRequestPing_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CRequestPing, _has_bits_[0]),
      -1,
      -1,
      sizeof(CRequestPing),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CRequestPing, _internal_metadata_),
      -1);
  CGSNotifyRoleBaseInfo_descriptor_ = file->message_type(4);
  static const int CGSNotifyRoleBaseInfo_offsets_[22] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleBaseInfo, m_un32objid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleBaseInfo, m_n32rolenickname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleBaseInfo, m_n32careerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleBaseInfo, m_bgender_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleBaseInfo, m_un32coattypeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleBaseInfo, m_un32legguardid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleBaseInfo, m_un32shoeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleBaseInfo, m_un32necklaceid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleBaseInfo, m_un32ringid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleBaseInfo, m_un32weaponid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleBaseInfo, m_un32level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleBaseInfo, m_un32exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleBaseInfo, m_un32curhp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleBaseInfo, m_un32curmp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleBaseInfo, m_un32curhpvessel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleBaseInfo, m_un32curmpvessel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleBaseInfo, m_un32maxhp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleBaseInfo, m_un32maxmp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleBaseInfo, m_un32maxhpvessel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleBaseInfo, m_un32maxmpvessel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleBaseInfo, m_un32max_packages_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleBaseInfo, wingid_),
  };
  CGSNotifyRoleBaseInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGSNotifyRoleBaseInfo_descriptor_,
      CGSNotifyRoleBaseInfo::default_instance_,
      CGSNotifyRoleBaseInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleBaseInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGSNotifyRoleBaseInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleBaseInfo, _internal_metadata_),
      -1);
  CGCAskSelectRole_descriptor_ = file->message_type(5);
  static const int CGCAskSelectRole_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskSelectRole, _rolename_),
  };
  CGCAskSelectRole_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCAskSelectRole_descriptor_,
      CGCAskSelectRole::default_instance_,
      CGCAskSelectRole_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskSelectRole, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCAskSelectRole),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskSelectRole, _internal_metadata_),
      -1);
  CNetErrorMessage_descriptor_ = file->message_type(6);
  static const int CNetErrorMessage_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CNetErrorMessage, protocolid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CNetErrorMessage, strlength_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CNetErrorMessage, errorcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CNetErrorMessage, errormessage_),
  };
  CNetErrorMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CNetErrorMessage_descriptor_,
      CNetErrorMessage::default_instance_,
      CNetErrorMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CNetErrorMessage, _has_bits_[0]),
      -1,
      -1,
      sizeof(CNetErrorMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CNetErrorMessage, _internal_metadata_),
      -1);
  CGSNotifyChangeScene_descriptor_ = file->message_type(7);
  static const int CGSNotifyChangeScene_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyChangeScene, m_un32mapid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyChangeScene, m_un32sceneid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyChangeScene, m_un32clientno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyChangeScene, m_fposx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyChangeScene, m_fposy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyChangeScene, m_fposz_),
  };
  CGSNotifyChangeScene_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGSNotifyChangeScene_descriptor_,
      CGSNotifyChangeScene::default_instance_,
      CGSNotifyChangeScene_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyChangeScene, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGSNotifyChangeScene),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyChangeScene, _internal_metadata_),
      -1);
  CGSNotifyRoleAppear_descriptor_ = file->message_type(8);
  static const int CGSNotifyRoleAppear_offsets_[19] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleAppear, m_un32objid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleAppear, m_n32rolenickname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleAppear, m_n32careerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleAppear, m_bgender_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleAppear, m_un32weapontypeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleAppear, m_un32coattypeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleAppear, m_un32level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleAppear, m_fcurposx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleAppear, m_fcurposy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleAppear, m_fcurposz_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleAppear, m_ftarposx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleAppear, m_ftarposy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleAppear, m_ftarposz_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleAppear, m_fmovespeed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleAppear, m_un32curtitleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleAppear, m_un32curhp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleAppear, m_u32wingid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleAppear, m_u32medalid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleAppear, m_u32petid_),
  };
  CGSNotifyRoleAppear_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGSNotifyRoleAppear_descriptor_,
      CGSNotifyRoleAppear::default_instance_,
      CGSNotifyRoleAppear_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleAppear, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGSNotifyRoleAppear),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleAppear, _internal_metadata_),
      -1);
  CGSObjectDisappear_descriptor_ = file->message_type(9);
  static const int CGSObjectDisappear_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSObjectDisappear, objnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSObjectDisappear, m_un32objid_),
  };
  CGSObjectDisappear_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGSObjectDisappear_descriptor_,
      CGSObjectDisappear::default_instance_,
      CGSObjectDisappear_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSObjectDisappear, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGSObjectDisappear),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSObjectDisappear, _internal_metadata_),
      -1);
  CGCAskLogout_descriptor_ = file->message_type(10);
  static const int CGCAskLogout_offsets_[1] = {
  };
  CGCAskLogout_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCAskLogout_descriptor_,
      CGCAskLogout::default_instance_,
      CGCAskLogout_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskLogout, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCAskLogout),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskLogout, _internal_metadata_),
      -1);
  CGSObjectMove_descriptor_ = file->message_type(11);
  static const int CGSObjectMove_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSObjectMove, m_un32objid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSObjectMove, m_fcurposx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSObjectMove, m_fcurposy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSObjectMove, m_fcurposz_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSObjectMove, m_ftarposx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSObjectMove, m_ftarposy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSObjectMove, m_ftarposz_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSObjectMove, m_fmovespeed_),
  };
  CGSObjectMove_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGSObjectMove_descriptor_,
      CGSObjectMove::default_instance_,
      CGSObjectMove_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSObjectMove, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGSObjectMove),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSObjectMove, _internal_metadata_),
      -1);
  CGCAskMove_descriptor_ = file->message_type(12);
  static const int CGCAskMove_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskMove, m_un32objid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskMove, m_fcurposx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskMove, m_fcurposy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskMove, m_fcurposz_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskMove, node_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskMove, m_ftarposx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskMove, m_ftarposy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskMove, m_ftarposz_),
  };
  CGCAskMove_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCAskMove_descriptor_,
      CGCAskMove::default_instance_,
      CGCAskMove_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskMove, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCAskMove),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskMove, _internal_metadata_),
      -1);
  CGSNotifyRoleProfileChange_descriptor_ = file->message_type(13);
  static const int CGSNotifyRoleProfileChange_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleProfileChange, m_un32objid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleProfileChange, m_un32weapontypeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleProfileChange, m_un32coattypeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleProfileChange, m_un32level_),
  };
  CGSNotifyRoleProfileChange_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGSNotifyRoleProfileChange_descriptor_,
      CGSNotifyRoleProfileChange::default_instance_,
      CGSNotifyRoleProfileChange_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleProfileChange, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGSNotifyRoleProfileChange),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleProfileChange, _internal_metadata_),
      -1);
  CGCReportPassGate_descriptor_ = file->message_type(14);
  static const int CGCReportPassGate_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportPassGate, m_un32mapid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportPassGate, m_un32sceneid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportPassGate, m_un32hpvessel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportPassGate, m_un32mpvessel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportPassGate, m_un32gotexpnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportPassGate, m_un32gotsilvernum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportPassGate, m_un32usesecond_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportPassGate, m_bpickalltempgoods_),
  };
  CGCReportPassGate_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCReportPassGate_descriptor_,
      CGCReportPassGate::default_instance_,
      CGCReportPassGate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportPassGate, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCReportPassGate),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportPassGate, _internal_metadata_),
      -1);
  CGCAskTreasureBoxDropGoods_descriptor_ = file->message_type(15);
  static const int CGCAskTreasureBoxDropGoods_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskTreasureBoxDropGoods, m_un32boxid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskTreasureBoxDropGoods, m_isshowaward_),
  };
  CGCAskTreasureBoxDropGoods_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCAskTreasureBoxDropGoods_descriptor_,
      CGCAskTreasureBoxDropGoods::default_instance_,
      CGCAskTreasureBoxDropGoods_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskTreasureBoxDropGoods, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCAskTreasureBoxDropGoods),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskTreasureBoxDropGoods, _internal_metadata_),
      -1);
  CGCAskEnterScene_descriptor_ = file->message_type(16);
  static const int CGCAskEnterScene_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskEnterScene, m_n32mapid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskEnterScene, m_n32sceneid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskEnterScene, m_benterbyui_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskEnterScene, m_un32hpvessel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskEnterScene, m_un32mpvessel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskEnterScene, m_un32gotexp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskEnterScene, m_un32gotsilver_),
  };
  CGCAskEnterScene_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCAskEnterScene_descriptor_,
      CGCAskEnterScene::default_instance_,
      CGCAskEnterScene_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskEnterScene, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCAskEnterScene),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskEnterScene, _internal_metadata_),
      -1);
  CGSNotifyRoleMapScheduleList_descriptor_ = file->message_type(17);
  static const int CGSNotifyRoleMapScheduleList_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleMapScheduleList, linenum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleMapScheduleList, mapid_),
  };
  CGSNotifyRoleMapScheduleList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGSNotifyRoleMapScheduleList_descriptor_,
      CGSNotifyRoleMapScheduleList::default_instance_,
      CGSNotifyRoleMapScheduleList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleMapScheduleList, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGSNotifyRoleMapScheduleList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleMapScheduleList, _internal_metadata_),
      -1);
  CGSNotifyRoleFightProperty_descriptor_ = file->message_type(18);
  static const int CGSNotifyRoleFightProperty_offsets_[1] = {
  };
  CGSNotifyRoleFightProperty_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGSNotifyRoleFightProperty_descriptor_,
      CGSNotifyRoleFightProperty::default_instance_,
      CGSNotifyRoleFightProperty_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleFightProperty, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGSNotifyRoleFightProperty),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRoleFightProperty, _internal_metadata_),
      -1);
  CGSNotifyAssetChange_descriptor_ = file->message_type(19);
  static const int CGSNotifyAssetChange_offsets_[1] = {
  };
  CGSNotifyAssetChange_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGSNotifyAssetChange_descriptor_,
      CGSNotifyAssetChange::default_instance_,
      CGSNotifyAssetChange_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyAssetChange, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGSNotifyAssetChange),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyAssetChange, _internal_metadata_),
      -1);
  CGSNotifyLevelChange_descriptor_ = file->message_type(20);
  static const int CGSNotifyLevelChange_offsets_[1] = {
  };
  CGSNotifyLevelChange_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGSNotifyLevelChange_descriptor_,
      CGSNotifyLevelChange::default_instance_,
      CGSNotifyLevelChange_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyLevelChange, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGSNotifyLevelChange),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyLevelChange, _internal_metadata_),
      -1);
  CGSNotifyExpChange_descriptor_ = file->message_type(21);
  static const int CGSNotifyExpChange_offsets_[1] = {
  };
  CGSNotifyExpChange_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGSNotifyExpChange_descriptor_,
      CGSNotifyExpChange::default_instance_,
      CGSNotifyExpChange_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyExpChange, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGSNotifyExpChange),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyExpChange, _internal_metadata_),
      -1);
  CGSNotifyCurProperty_descriptor_ = file->message_type(22);
  static const int CGSNotifyCurProperty_offsets_[1] = {
  };
  CGSNotifyCurProperty_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGSNotifyCurProperty_descriptor_,
      CGSNotifyCurProperty::default_instance_,
      CGSNotifyCurProperty_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyCurProperty, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGSNotifyCurProperty),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyCurProperty, _internal_metadata_),
      -1);
  CGSNotifyDisplayGateIncome_descriptor_ = file->message_type(23);
  static const int CGSNotifyDisplayGateIncome_offsets_[1] = {
  };
  CGSNotifyDisplayGateIncome_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGSNotifyDisplayGateIncome_descriptor_,
      CGSNotifyDisplayGateIncome::default_instance_,
      CGSNotifyDisplayGateIncome_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyDisplayGateIncome, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGSNotifyDisplayGateIncome),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyDisplayGateIncome, _internal_metadata_),
      -1);
  CGCAskRelive_descriptor_ = file->message_type(24);
  static const int CGCAskRelive_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskRelive, _relivetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskRelive, _assettype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskRelive, m_un32assetnum_),
  };
  CGCAskRelive_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCAskRelive_descriptor_,
      CGCAskRelive::default_instance_,
      CGCAskRelive_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskRelive, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCAskRelive),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskRelive, _internal_metadata_),
      -1);
  CGCReportExp_descriptor_ = file->message_type(25);
  static const int CGCReportExp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportExp, m_un32gotexp_),
  };
  CGCReportExp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCReportExp_descriptor_,
      CGCReportExp::default_instance_,
      CGCReportExp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportExp, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCReportExp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportExp, _internal_metadata_),
      -1);
  CGCReportUseSkill_descriptor_ = file->message_type(26);
  static const int CGCReportUseSkill_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportUseSkill, m_un32objid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportUseSkill, m_un32skillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportUseSkill, m_fposx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportUseSkill, m_fposy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportUseSkill, m_fposz_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportUseSkill, m_fdirx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportUseSkill, m_fdiry_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportUseSkill, m_fdirz_),
  };
  CGCReportUseSkill_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCReportUseSkill_descriptor_,
      CGCReportUseSkill::default_instance_,
      CGCReportUseSkill_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportUseSkill, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCReportUseSkill),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportUseSkill, _internal_metadata_),
      -1);
  CGSNotifySkillReleased_descriptor_ = file->message_type(27);
  static const int CGSNotifySkillReleased_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifySkillReleased, m_un32objectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifySkillReleased, m_un32skillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifySkillReleased, m_fposx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifySkillReleased, m_fposy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifySkillReleased, m_fposz_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifySkillReleased, m_fdirx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifySkillReleased, m_fdiry_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifySkillReleased, m_fdirz_),
  };
  CGSNotifySkillReleased_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGSNotifySkillReleased_descriptor_,
      CGSNotifySkillReleased::default_instance_,
      CGSNotifySkillReleased_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifySkillReleased, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGSNotifySkillReleased),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifySkillReleased, _internal_metadata_),
      -1);
  CGCReportOBjectAppear_descriptor_ = file->message_type(28);
  static const int CGCReportOBjectAppear_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportOBjectAppear, m_un32objid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportOBjectAppear, m_un32tempid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportOBjectAppear, m_fposx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportOBjectAppear, m_fposy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportOBjectAppear, m_fposz_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportOBjectAppear, m_fdirx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportOBjectAppear, m_fdiry_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportOBjectAppear, m_fdirz_),
  };
  CGCReportOBjectAppear_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCReportOBjectAppear_descriptor_,
      CGCReportOBjectAppear::default_instance_,
      CGCReportOBjectAppear_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportOBjectAppear, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCReportOBjectAppear),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportOBjectAppear, _internal_metadata_),
      -1);
  CGSNotifyObjectAppear_descriptor_ = file->message_type(29);
  static const int CGSNotifyObjectAppear_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyObjectAppear, m_un32objid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyObjectAppear, m_un32tempid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyObjectAppear, m_fposx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyObjectAppear, m_fposy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyObjectAppear, m_fposz_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyObjectAppear, m_fdirx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyObjectAppear, m_fdiry_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyObjectAppear, m_fdirz_),
  };
  CGSNotifyObjectAppear_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGSNotifyObjectAppear_descriptor_,
      CGSNotifyObjectAppear::default_instance_,
      CGSNotifyObjectAppear_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyObjectAppear, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGSNotifyObjectAppear),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyObjectAppear, _internal_metadata_),
      -1);
  CGCReportOBjectDisappear_descriptor_ = file->message_type(30);
  static const int CGCReportOBjectDisappear_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportOBjectDisappear, m_un32objid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportOBjectDisappear, m_n32reason_),
  };
  CGCReportOBjectDisappear_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCReportOBjectDisappear_descriptor_,
      CGCReportOBjectDisappear::default_instance_,
      CGCReportOBjectDisappear_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportOBjectDisappear, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCReportOBjectDisappear),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportOBjectDisappear, _internal_metadata_),
      -1);
  CGSNotifyObjectDisappear_descriptor_ = file->message_type(31);
  static const int CGSNotifyObjectDisappear_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyObjectDisappear, m_un32objid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyObjectDisappear, m_n32reason_),
  };
  CGSNotifyObjectDisappear_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGSNotifyObjectDisappear_descriptor_,
      CGSNotifyObjectDisappear::default_instance_,
      CGSNotifyObjectDisappear_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyObjectDisappear, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGSNotifyObjectDisappear),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyObjectDisappear, _internal_metadata_),
      -1);
  CGCReportObjectAction_descriptor_ = file->message_type(32);
  static const int CGCReportObjectAction_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportObjectAction, m_un32objid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportObjectAction, m_n32actioncate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportObjectAction, m_fdirx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportObjectAction, m_fdiry_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportObjectAction, m_fdirz_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportObjectAction, m_fposx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportObjectAction, m_fposy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportObjectAction, m_fposz_),
  };
  CGCReportObjectAction_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCReportObjectAction_descriptor_,
      CGCReportObjectAction::default_instance_,
      CGCReportObjectAction_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportObjectAction, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCReportObjectAction),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportObjectAction, _internal_metadata_),
      -1);
  CGSNotifyObjectAction_descriptor_ = file->message_type(33);
  static const int CGSNotifyObjectAction_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyObjectAction, m_un32objid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyObjectAction, m_n32actioncate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyObjectAction, m_fdirx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyObjectAction, m_fdiry_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyObjectAction, m_fdirz_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyObjectAction, m_fposx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyObjectAction, m_fposy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyObjectAction, m_fposz_),
  };
  CGSNotifyObjectAction_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGSNotifyObjectAction_descriptor_,
      CGSNotifyObjectAction::default_instance_,
      CGSNotifyObjectAction_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyObjectAction, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGSNotifyObjectAction),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyObjectAction, _internal_metadata_),
      -1);
  CGCReportObjectHurm_descriptor_ = file->message_type(34);
  static const int CGCReportObjectHurm_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportObjectHurm, m_bhost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportObjectHurm, m_un32objid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportObjectHurm, m_n32hpvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportObjectHurm, m_n32curhp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportObjectHurm, m_n32effect_),
  };
  CGCReportObjectHurm_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCReportObjectHurm_descriptor_,
      CGCReportObjectHurm::default_instance_,
      CGCReportObjectHurm_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportObjectHurm, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCReportObjectHurm),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportObjectHurm, _internal_metadata_),
      -1);
  CGSNotifyObjectHurm_descriptor_ = file->message_type(35);
  static const int CGSNotifyObjectHurm_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyObjectHurm, m_bhost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyObjectHurm, m_un32objid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyObjectHurm, m_n32hpvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyObjectHurm, m_n32hp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyObjectHurm, m_n32effect_),
  };
  CGSNotifyObjectHurm_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGSNotifyObjectHurm_descriptor_,
      CGSNotifyObjectHurm::default_instance_,
      CGSNotifyObjectHurm_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyObjectHurm, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGSNotifyObjectHurm),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyObjectHurm, _internal_metadata_),
      -1);
  CGCAskEnterTowerInstance_descriptor_ = file->message_type(36);
  static const int CGCAskEnterTowerInstance_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskEnterTowerInstance, m_un32towerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskEnterTowerInstance, m_bcurwave_),
  };
  CGCAskEnterTowerInstance_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCAskEnterTowerInstance_descriptor_,
      CGCAskEnterTowerInstance::default_instance_,
      CGCAskEnterTowerInstance_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskEnterTowerInstance, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCAskEnterTowerInstance),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskEnterTowerInstance, _internal_metadata_),
      -1);
  CGCReportTowerInstanceScore_descriptor_ = file->message_type(37);
  static const int CGCReportTowerInstanceScore_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportTowerInstanceScore, m_un32towerid_),
  };
  CGCReportTowerInstanceScore_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCReportTowerInstanceScore_descriptor_,
      CGCReportTowerInstanceScore::default_instance_,
      CGCReportTowerInstanceScore_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportTowerInstanceScore, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCReportTowerInstanceScore),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportTowerInstanceScore, _internal_metadata_),
      -1);
  CGCAskTowerInstanceRank_descriptor_ = file->message_type(38);
  static const int CGCAskTowerInstanceRank_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskTowerInstanceRank, m_un16type_),
  };
  CGCAskTowerInstanceRank_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCAskTowerInstanceRank_descriptor_,
      CGCAskTowerInstanceRank::default_instance_,
      CGCAskTowerInstanceRank_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskTowerInstanceRank, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCAskTowerInstanceRank),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskTowerInstanceRank, _internal_metadata_),
      -1);
  CGCAskTowerInstanceAward_descriptor_ = file->message_type(39);
  static const int CGCAskTowerInstanceAward_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskTowerInstanceAward, m_u32towerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskTowerInstanceAward, m_u16towertype_),
  };
  CGCAskTowerInstanceAward_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCAskTowerInstanceAward_descriptor_,
      CGCAskTowerInstanceAward::default_instance_,
      CGCAskTowerInstanceAward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskTowerInstanceAward, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCAskTowerInstanceAward),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskTowerInstanceAward, _internal_metadata_),
      -1);
  CGCAskEMailList_descriptor_ = file->message_type(40);
  static const int CGCAskEMailList_offsets_[1] = {
  };
  CGCAskEMailList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCAskEMailList_descriptor_,
      CGCAskEMailList::default_instance_,
      CGCAskEMailList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskEMailList, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCAskEMailList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskEMailList, _internal_metadata_),
      -1);
  GCAskReadEMail_descriptor_ = file->message_type(41);
  static const int GCAskReadEMail_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCAskReadEMail, m_un32emailid_),
  };
  GCAskReadEMail_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GCAskReadEMail_descriptor_,
      GCAskReadEMail::default_instance_,
      GCAskReadEMail_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCAskReadEMail, _has_bits_[0]),
      -1,
      -1,
      sizeof(GCAskReadEMail),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GCAskReadEMail, _internal_metadata_),
      -1);
  CGCAskGetEMailPrize_descriptor_ = file->message_type(42);
  static const int CGCAskGetEMailPrize_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskGetEMailPrize, m_un32emailid_),
  };
  CGCAskGetEMailPrize_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCAskGetEMailPrize_descriptor_,
      CGCAskGetEMailPrize::default_instance_,
      CGCAskGetEMailPrize_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskGetEMailPrize, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCAskGetEMailPrize),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskGetEMailPrize, _internal_metadata_),
      -1);
  CGCAskRemoveEMail_descriptor_ = file->message_type(43);
  static const int CGCAskRemoveEMail_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskRemoveEMail, m_un32emailid_),
  };
  CGCAskRemoveEMail_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCAskRemoveEMail_descriptor_,
      CGCAskRemoveEMail::default_instance_,
      CGCAskRemoveEMail_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskRemoveEMail, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCAskRemoveEMail),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskRemoveEMail, _internal_metadata_),
      -1);
  CGSNotifyRankList_descriptor_ = file->message_type(44);
  static const int CGSNotifyRankList_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRankList, m_n8rankcate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRankList, m_n32selfrank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRankList, m_n32selfrankvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRankList, m_n32ranknum_),
  };
  CGSNotifyRankList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGSNotifyRankList_descriptor_,
      CGSNotifyRankList::default_instance_,
      CGSNotifyRankList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRankList, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGSNotifyRankList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyRankList, _internal_metadata_),
      -1);
  CGSNotifyEMailList_descriptor_ = file->message_type(45);
  static const int CGSNotifyEMailList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyEMailList, m_un32emailnum_),
  };
  CGSNotifyEMailList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGSNotifyEMailList_descriptor_,
      CGSNotifyEMailList::default_instance_,
      CGSNotifyEMailList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyEMailList, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGSNotifyEMailList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGSNotifyEMailList, _internal_metadata_),
      -1);
  CGCSendCreateRole_descriptor_ = file->message_type(46);
  static const int CGCSendCreateRole_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCSendCreateRole, _u32vocationid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCSendCreateRole, _bytegender_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCSendCreateRole, _nickname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCSendCreateRole, _byteverify_),
  };
  CGCSendCreateRole_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCSendCreateRole_descriptor_,
      CGCSendCreateRole::default_instance_,
      CGCSendCreateRole_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCSendCreateRole, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCSendCreateRole),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCSendCreateRole, _internal_metadata_),
      -1);
  CGCSendCreateRoleRet_descriptor_ = file->message_type(47);
  static const int CGCSendCreateRoleRet_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCSendCreateRoleRet, _result_),
  };
  CGCSendCreateRoleRet_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCSendCreateRoleRet_descriptor_,
      CGCSendCreateRoleRet::default_instance_,
      CGCSendCreateRoleRet_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCSendCreateRoleRet, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCSendCreateRoleRet),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCSendCreateRoleRet, _internal_metadata_),
      -1);
  CGCAskRankList_descriptor_ = file->message_type(48);
  static const int CGCAskRankList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskRankList, m_n8rankcate_),
  };
  CGCAskRankList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCAskRankList_descriptor_,
      CGCAskRankList::default_instance_,
      CGCAskRankList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskRankList, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCAskRankList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskRankList, _internal_metadata_),
      -1);
  CGCAsChargeIOS_descriptor_ = file->message_type(49);
  static const int CGCAsChargeIOS_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAsChargeIOS, m_bisdebug_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAsChargeIOS, m_strlen_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAsChargeIOS, m_szapplereceipt_),
  };
  CGCAsChargeIOS_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCAsChargeIOS_descriptor_,
      CGCAsChargeIOS::default_instance_,
      CGCAsChargeIOS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAsChargeIOS, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCAsChargeIOS),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAsChargeIOS, _internal_metadata_),
      -1);
  CGCNotifyChargeIOS_descriptor_ = file->message_type(50);
  static const int CGCNotifyChargeIOS_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCNotifyChargeIOS, m_nresult_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCNotifyChargeIOS, m_strlen_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCNotifyChargeIOS, m_szapplereceipt_),
  };
  CGCNotifyChargeIOS_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCNotifyChargeIOS_descriptor_,
      CGCNotifyChargeIOS::default_instance_,
      CGCNotifyChargeIOS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCNotifyChargeIOS, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCNotifyChargeIOS),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCNotifyChargeIOS, _internal_metadata_),
      -1);
  CGCReportProcuce_descriptor_ = file->message_type(51);
  static const int CGCReportProcuce_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportProcuce, _bookid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportProcuce, _busediamond_),
  };
  CGCReportProcuce_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCReportProcuce_descriptor_,
      CGCReportProcuce::default_instance_,
      CGCReportProcuce_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportProcuce, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCReportProcuce),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCReportProcuce, _internal_metadata_),
      -1);
  CGCAskChapterAward_descriptor_ = file->message_type(52);
  static const int CGCAskChapterAward_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskChapterAward, _chapternum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskChapterAward, _hardchapter_),
  };
  CGCAskChapterAward_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCAskChapterAward_descriptor_,
      CGCAskChapterAward::default_instance_,
      CGCAskChapterAward_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskChapterAward, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCAskChapterAward),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskChapterAward, _internal_metadata_),
      -1);
  CGCAskMedalInfo_descriptor_ = file->message_type(53);
  static const int CGCAskMedalInfo_offsets_[1] = {
  };
  CGCAskMedalInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCAskMedalInfo_descriptor_,
      CGCAskMedalInfo::default_instance_,
      CGCAskMedalInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskMedalInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCAskMedalInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskMedalInfo, _internal_metadata_),
      -1);
  CGCAskMedalLevelUp_descriptor_ = file->message_type(54);
  static const int CGCAskMedalLevelUp_offsets_[1] = {
  };
  CGCAskMedalLevelUp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCAskMedalLevelUp_descriptor_,
      CGCAskMedalLevelUp::default_instance_,
      CGCAskMedalLevelUp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskMedalLevelUp, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCAskMedalLevelUp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskMedalLevelUp, _internal_metadata_),
      -1);
  CGCAskAddFriend_descriptor_ = file->message_type(55);
  static const int CGCAskAddFriend_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskAddFriend, _friendopt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskAddFriend, _rolename_),
  };
  CGCAskAddFriend_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCAskAddFriend_descriptor_,
      CGCAskAddFriend::default_instance_,
      CGCAskAddFriend_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskAddFriend, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCAskAddFriend),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskAddFriend, _internal_metadata_),
      -1);
  CGCAskAddFriend_FriendSendType_descriptor_ = CGCAskAddFriend_descriptor_->enum_type(0);
  CGCVipFriend_descriptor_ = file->message_type(56);
  static const int CGCVipFriend_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCVipFriend, _friendopt_),
  };
  CGCVipFriend_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCVipFriend_descriptor_,
      CGCVipFriend::default_instance_,
      CGCVipFriend_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCVipFriend, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCVipFriend),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCVipFriend, _internal_metadata_),
      -1);
  CGCVipFriend_FriendSendType_descriptor_ = CGCVipFriend_descriptor_->enum_type(0);
  CGCAskFriendRecord_descriptor_ = file->message_type(57);
  static const int CGCAskFriendRecord_offsets_[1] = {
  };
  CGCAskFriendRecord_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCAskFriendRecord_descriptor_,
      CGCAskFriendRecord::default_instance_,
      CGCAskFriendRecord_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskFriendRecord, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCAskFriendRecord),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskFriendRecord, _internal_metadata_),
      -1);
  CGCAskSelectPlayer_descriptor_ = file->message_type(58);
  static const int CGCAskSelectPlayer_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskSelectPlayer, _byte_),
  };
  CGCAskSelectPlayer_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCAskSelectPlayer_descriptor_,
      CGCAskSelectPlayer::default_instance_,
      CGCAskSelectPlayer_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskSelectPlayer, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCAskSelectPlayer),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskSelectPlayer, _internal_metadata_),
      -1);
  CGCAskGuideComplate_descriptor_ = file->message_type(59);
  static const int CGCAskGuideComplate_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskGuideComplate, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskGuideComplate, u8finish_),
  };
  CGCAskGuideComplate_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CGCAskGuideComplate_descriptor_,
      CGCAskGuideComplate::default_instance_,
      CGCAskGuideComplate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskGuideComplate, _has_bits_[0]),
      -1,
      -1,
      sizeof(CGCAskGuideComplate),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCAskGuideComplate, _internal_metadata_),
      -1);
  CeC2GType_descriptor_ = file->enum_type(0);
  CeG2CType_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_NetMessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CNetHead_descriptor_, &CNetHead::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CRequestLogin_descriptor_, &CRequestLogin::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CRequestLoginRet_descriptor_, &CRequestLoginRet::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CRequestPing_descriptor_, &CRequestPing::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGSNotifyRoleBaseInfo_descriptor_, &CGSNotifyRoleBaseInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCAskSelectRole_descriptor_, &CGCAskSelectRole::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CNetErrorMessage_descriptor_, &CNetErrorMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGSNotifyChangeScene_descriptor_, &CGSNotifyChangeScene::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGSNotifyRoleAppear_descriptor_, &CGSNotifyRoleAppear::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGSObjectDisappear_descriptor_, &CGSObjectDisappear::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCAskLogout_descriptor_, &CGCAskLogout::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGSObjectMove_descriptor_, &CGSObjectMove::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCAskMove_descriptor_, &CGCAskMove::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGSNotifyRoleProfileChange_descriptor_, &CGSNotifyRoleProfileChange::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCReportPassGate_descriptor_, &CGCReportPassGate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCAskTreasureBoxDropGoods_descriptor_, &CGCAskTreasureBoxDropGoods::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCAskEnterScene_descriptor_, &CGCAskEnterScene::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGSNotifyRoleMapScheduleList_descriptor_, &CGSNotifyRoleMapScheduleList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGSNotifyRoleFightProperty_descriptor_, &CGSNotifyRoleFightProperty::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGSNotifyAssetChange_descriptor_, &CGSNotifyAssetChange::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGSNotifyLevelChange_descriptor_, &CGSNotifyLevelChange::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGSNotifyExpChange_descriptor_, &CGSNotifyExpChange::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGSNotifyCurProperty_descriptor_, &CGSNotifyCurProperty::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGSNotifyDisplayGateIncome_descriptor_, &CGSNotifyDisplayGateIncome::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCAskRelive_descriptor_, &CGCAskRelive::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCReportExp_descriptor_, &CGCReportExp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCReportUseSkill_descriptor_, &CGCReportUseSkill::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGSNotifySkillReleased_descriptor_, &CGSNotifySkillReleased::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCReportOBjectAppear_descriptor_, &CGCReportOBjectAppear::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGSNotifyObjectAppear_descriptor_, &CGSNotifyObjectAppear::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCReportOBjectDisappear_descriptor_, &CGCReportOBjectDisappear::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGSNotifyObjectDisappear_descriptor_, &CGSNotifyObjectDisappear::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCReportObjectAction_descriptor_, &CGCReportObjectAction::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGSNotifyObjectAction_descriptor_, &CGSNotifyObjectAction::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCReportObjectHurm_descriptor_, &CGCReportObjectHurm::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGSNotifyObjectHurm_descriptor_, &CGSNotifyObjectHurm::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCAskEnterTowerInstance_descriptor_, &CGCAskEnterTowerInstance::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCReportTowerInstanceScore_descriptor_, &CGCReportTowerInstanceScore::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCAskTowerInstanceRank_descriptor_, &CGCAskTowerInstanceRank::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCAskTowerInstanceAward_descriptor_, &CGCAskTowerInstanceAward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCAskEMailList_descriptor_, &CGCAskEMailList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GCAskReadEMail_descriptor_, &GCAskReadEMail::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCAskGetEMailPrize_descriptor_, &CGCAskGetEMailPrize::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCAskRemoveEMail_descriptor_, &CGCAskRemoveEMail::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGSNotifyRankList_descriptor_, &CGSNotifyRankList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGSNotifyEMailList_descriptor_, &CGSNotifyEMailList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCSendCreateRole_descriptor_, &CGCSendCreateRole::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCSendCreateRoleRet_descriptor_, &CGCSendCreateRoleRet::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCAskRankList_descriptor_, &CGCAskRankList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCAsChargeIOS_descriptor_, &CGCAsChargeIOS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCNotifyChargeIOS_descriptor_, &CGCNotifyChargeIOS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCReportProcuce_descriptor_, &CGCReportProcuce::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCAskChapterAward_descriptor_, &CGCAskChapterAward::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCAskMedalInfo_descriptor_, &CGCAskMedalInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCAskMedalLevelUp_descriptor_, &CGCAskMedalLevelUp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCAskAddFriend_descriptor_, &CGCAskAddFriend::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCVipFriend_descriptor_, &CGCVipFriend::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCAskFriendRecord_descriptor_, &CGCAskFriendRecord::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCAskSelectPlayer_descriptor_, &CGCAskSelectPlayer::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CGCAskGuideComplate_descriptor_, &CGCAskGuideComplate::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_NetMessage_2eproto() {
  delete CNetHead::default_instance_;
  delete CNetHead_reflection_;
  delete CRequestLogin::default_instance_;
  delete CRequestLogin_reflection_;
  delete CRequestLoginRet::default_instance_;
  delete CRequestLoginRet_reflection_;
  delete CRequestPing::default_instance_;
  delete CRequestPing_reflection_;
  delete CGSNotifyRoleBaseInfo::default_instance_;
  delete CGSNotifyRoleBaseInfo_reflection_;
  delete CGCAskSelectRole::default_instance_;
  delete CGCAskSelectRole_reflection_;
  delete CNetErrorMessage::default_instance_;
  delete CNetErrorMessage_reflection_;
  delete CGSNotifyChangeScene::default_instance_;
  delete CGSNotifyChangeScene_reflection_;
  delete CGSNotifyRoleAppear::default_instance_;
  delete CGSNotifyRoleAppear_reflection_;
  delete CGSObjectDisappear::default_instance_;
  delete CGSObjectDisappear_reflection_;
  delete CGCAskLogout::default_instance_;
  delete CGCAskLogout_reflection_;
  delete CGSObjectMove::default_instance_;
  delete CGSObjectMove_reflection_;
  delete CGCAskMove::default_instance_;
  delete CGCAskMove_reflection_;
  delete CGSNotifyRoleProfileChange::default_instance_;
  delete CGSNotifyRoleProfileChange_reflection_;
  delete CGCReportPassGate::default_instance_;
  delete CGCReportPassGate_reflection_;
  delete CGCAskTreasureBoxDropGoods::default_instance_;
  delete CGCAskTreasureBoxDropGoods_reflection_;
  delete CGCAskEnterScene::default_instance_;
  delete CGCAskEnterScene_reflection_;
  delete CGSNotifyRoleMapScheduleList::default_instance_;
  delete CGSNotifyRoleMapScheduleList_reflection_;
  delete CGSNotifyRoleFightProperty::default_instance_;
  delete CGSNotifyRoleFightProperty_reflection_;
  delete CGSNotifyAssetChange::default_instance_;
  delete CGSNotifyAssetChange_reflection_;
  delete CGSNotifyLevelChange::default_instance_;
  delete CGSNotifyLevelChange_reflection_;
  delete CGSNotifyExpChange::default_instance_;
  delete CGSNotifyExpChange_reflection_;
  delete CGSNotifyCurProperty::default_instance_;
  delete CGSNotifyCurProperty_reflection_;
  delete CGSNotifyDisplayGateIncome::default_instance_;
  delete CGSNotifyDisplayGateIncome_reflection_;
  delete CGCAskRelive::default_instance_;
  delete CGCAskRelive_reflection_;
  delete CGCReportExp::default_instance_;
  delete CGCReportExp_reflection_;
  delete CGCReportUseSkill::default_instance_;
  delete CGCReportUseSkill_reflection_;
  delete CGSNotifySkillReleased::default_instance_;
  delete CGSNotifySkillReleased_reflection_;
  delete CGCReportOBjectAppear::default_instance_;
  delete CGCReportOBjectAppear_reflection_;
  delete CGSNotifyObjectAppear::default_instance_;
  delete CGSNotifyObjectAppear_reflection_;
  delete CGCReportOBjectDisappear::default_instance_;
  delete CGCReportOBjectDisappear_reflection_;
  delete CGSNotifyObjectDisappear::default_instance_;
  delete CGSNotifyObjectDisappear_reflection_;
  delete CGCReportObjectAction::default_instance_;
  delete CGCReportObjectAction_reflection_;
  delete CGSNotifyObjectAction::default_instance_;
  delete CGSNotifyObjectAction_reflection_;
  delete CGCReportObjectHurm::default_instance_;
  delete CGCReportObjectHurm_reflection_;
  delete CGSNotifyObjectHurm::default_instance_;
  delete CGSNotifyObjectHurm_reflection_;
  delete CGCAskEnterTowerInstance::default_instance_;
  delete CGCAskEnterTowerInstance_reflection_;
  delete CGCReportTowerInstanceScore::default_instance_;
  delete CGCReportTowerInstanceScore_reflection_;
  delete CGCAskTowerInstanceRank::default_instance_;
  delete CGCAskTowerInstanceRank_reflection_;
  delete CGCAskTowerInstanceAward::default_instance_;
  delete CGCAskTowerInstanceAward_reflection_;
  delete CGCAskEMailList::default_instance_;
  delete CGCAskEMailList_reflection_;
  delete GCAskReadEMail::default_instance_;
  delete GCAskReadEMail_reflection_;
  delete CGCAskGetEMailPrize::default_instance_;
  delete CGCAskGetEMailPrize_reflection_;
  delete CGCAskRemoveEMail::default_instance_;
  delete CGCAskRemoveEMail_reflection_;
  delete CGSNotifyRankList::default_instance_;
  delete CGSNotifyRankList_reflection_;
  delete CGSNotifyEMailList::default_instance_;
  delete CGSNotifyEMailList_reflection_;
  delete CGCSendCreateRole::default_instance_;
  delete CGCSendCreateRole_reflection_;
  delete CGCSendCreateRoleRet::default_instance_;
  delete CGCSendCreateRoleRet_reflection_;
  delete CGCAskRankList::default_instance_;
  delete CGCAskRankList_reflection_;
  delete CGCAsChargeIOS::default_instance_;
  delete CGCAsChargeIOS_reflection_;
  delete CGCNotifyChargeIOS::default_instance_;
  delete CGCNotifyChargeIOS_reflection_;
  delete CGCReportProcuce::default_instance_;
  delete CGCReportProcuce_reflection_;
  delete CGCAskChapterAward::default_instance_;
  delete CGCAskChapterAward_reflection_;
  delete CGCAskMedalInfo::default_instance_;
  delete CGCAskMedalInfo_reflection_;
  delete CGCAskMedalLevelUp::default_instance_;
  delete CGCAskMedalLevelUp_reflection_;
  delete CGCAskAddFriend::default_instance_;
  delete CGCAskAddFriend_reflection_;
  delete CGCVipFriend::default_instance_;
  delete CGCVipFriend_reflection_;
  delete CGCAskFriendRecord::default_instance_;
  delete CGCAskFriendRecord_reflection_;
  delete CGCAskSelectPlayer::default_instance_;
  delete CGCAskSelectPlayer_reflection_;
  delete CGCAskGuideComplate::default_instance_;
  delete CGCAskGuideComplate_reflection_;
}

void protobuf_AddDesc_NetMessage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020NetMessage.proto\022\nNetPackage\"A\n\010CNetHe"
    "ad\022\017\n\007_length\030\001 \001(\r\022\025\n\r_assistantCmd\030\002 \001"
    "(\r\022\r\n\005_body\030\003 \001(\t\"v\n\rCRequestLogin\022\021\n\t_u"
    "serName\030\001 \001(\t\022\025\n\r_userPassword\030\002 \001(\t\022\021\n\t"
    "_userGUID\030\003 \001(\t\022\024\n\014_deviceToken\030\004 \001(\t\022\022\n"
    "\n_reConnect\030\005 \001(\010\"G\n\020CRequestLoginRet\022\021\n"
    "\t_userName\030\001 \001(\t\022\021\n\t_userGUID\030\002 \001(\t\022\r\n\005_"
    "flag\030\003 \001(\005\"\016\n\014CRequestPing\"\227\004\n\025CGSNotify"
    "RoleBaseInfo\022\023\n\013m_un32ObjID\030\001 \001(\r\022\031\n\021m_n"
    "32RoleNickName\030\002 \001(\t\022\025\n\rm_n32CareerID\030\003 "
    "\001(\005\022\021\n\tm_bGender\030\004 \001(\010\022\030\n\020m_un32CoatType"
    "ID\030\005 \001(\r\022\030\n\020m_un32LegGuardId\030\006 \001(\r\022\024\n\014m_"
    "un32ShoeId\030\007 \001(\r\022\030\n\020m_un32NecklaceId\030\010 \001"
    "(\r\022\024\n\014m_un32RingId\030\t \001(\r\022\026\n\016m_un32Weapon"
    "Id\030\n \001(\r\022\023\n\013m_un32Level\030\013 \001(\r\022\021\n\tm_un32E"
    "xp\030\014 \001(\r\022\023\n\013m_un32CurHP\030\r \001(\r\022\023\n\013m_un32C"
    "urMP\030\016 \001(\r\022\031\n\021m_un32CurHPVessel\030\017 \001(\r\022\031\n"
    "\021m_un32CurMPVessel\030\020 \001(\r\022\023\n\013m_un32MaxHP\030"
    "\021 \001(\r\022\023\n\013m_un32MaxMP\030\022 \001(\r\022\031\n\021m_un32MaxH"
    "PVessel\030\023 \001(\r\022\031\n\021m_un32MaxMPVessel\030\024 \001(\r"
    "\022\032\n\022m_un32Max_packages\030\025 \001(\r\022\016\n\006wingID\030\026"
    " \001(\r\"%\n\020CGCAskSelectRole\022\021\n\t_roleName\030\001 "
    "\001(\t\"b\n\020CNetErrorMessage\022\022\n\nprotocolId\030\001 "
    "\001(\r\022\021\n\tstrLength\030\002 \001(\r\022\021\n\terrorCode\030\003 \001("
    "\005\022\024\n\014errorMessage\030\004 \001(\t\"\215\001\n\024CGSNotifyCha"
    "ngeScene\022\023\n\013m_un32MapID\030\001 \001(\r\022\025\n\rm_un32S"
    "ceneID\030\002 \001(\r\022\026\n\016m_un32ClientNO\030\003 \001(\r\022\017\n\007"
    "m_fPosX\030\004 \001(\002\022\017\n\007m_fPosY\030\005 \001(\002\022\017\n\007m_fPos"
    "Z\030\006 \001(\002\"\266\003\n\023CGSNotifyRoleAppear\022\023\n\013m_un3"
    "2ObjID\030\001 \001(\r\022\031\n\021m_n32RoleNickName\030\002 \001(\t\022"
    "\025\n\rm_n32CareerID\030\003 \001(\005\022\021\n\tm_bGender\030\004 \001("
    "\010\022\032\n\022m_un32WeaponTypeID\030\005 \001(\r\022\030\n\020m_un32C"
    "oatTypeID\030\006 \001(\r\022\023\n\013m_un32Level\030\007 \001(\r\022\022\n\n"
    "m_fCurPosX\030\010 \001(\002\022\022\n\nm_fCurPosY\030\t \001(\002\022\022\n\n"
    "m_fCurPosZ\030\n \001(\002\022\022\n\nm_fTarPosX\030\013 \001(\002\022\022\n\n"
    "m_fTarPosY\030\014 \001(\002\022\022\n\nm_fTarPosZ\030\r \001(\002\022\024\n\014"
    "m_fMoveSpeed\030\016 \001(\002\022\030\n\020m_un32CurTitleID\030\017"
    " \001(\r\022\023\n\013m_un32CurHp\030\020 \001(\r\022\023\n\013m_u32WingID"
    "\030\021 \001(\r\022\024\n\014m_u32MedalID\030\022 \001(\r\022\022\n\nm_u32Pet"
    "ID\030\023 \001(\r\"=\n\022CGSObjectDisappear\022\016\n\006ObjNum"
    "\030\001 \001(\r\022\027\n\013m_un32ObjID\030\002 \003(\rB\002\020\001\"\016\n\014CGCAs"
    "kLogout\"\262\001\n\rCGSObjectMove\022\023\n\013m_un32ObjID"
    "\030\001 \001(\r\022\022\n\nm_fCurPosX\030\002 \001(\002\022\022\n\nm_fCurPosY"
    "\030\003 \001(\002\022\022\n\nm_fCurPosZ\030\004 \001(\002\022\022\n\nm_fTarPosX"
    "\030\005 \001(\002\022\022\n\nm_fTarPosY\030\006 \001(\002\022\022\n\nm_fTarPosZ"
    "\030\007 \001(\002\022\024\n\014m_fMoveSpeed\030\010 \001(\002\"\253\001\n\nCGCAskM"
    "ove\022\023\n\013m_un32ObjID\030\001 \001(\r\022\022\n\nm_fCurPosX\030\002"
    " \001(\002\022\022\n\nm_fCurPosY\030\003 \001(\002\022\022\n\nm_fCurPosZ\030\004"
    " \001(\002\022\020\n\010node_num\030\005 \001(\r\022\022\n\nm_fTarPosX\030\006 \001"
    "(\002\022\022\n\nm_fTarPosY\030\007 \001(\002\022\022\n\nm_fTarPosZ\030\010 \001"
    "(\002\"|\n\032CGSNotifyRoleProfileChange\022\023\n\013m_un"
    "32ObjID\030\001 \001(\r\022\032\n\022m_un32WeaponTypeID\030\002 \001("
    "\r\022\030\n\020m_un32CoatTypeID\030\003 \001(\r\022\023\n\013m_un32Lev"
    "el\030\004 \001(\r\"\332\001\n\021CGCReportPassGate\022\023\n\013m_un32"
    "MapID\030\001 \001(\r\022\025\n\rm_un32SceneID\030\002 \001(\r\022\026\n\016m_"
    "un32HPVessel\030\003 \001(\r\022\026\n\016m_un32MPVessel\030\004 \001"
    "(\r\022\027\n\017m_un32GotExpNum\030\005 \001(\r\022\032\n\022m_un32Got"
    "SilverNum\030\006 \001(\r\022\027\n\017m_un32UseSecond\030\007 \001(\r"
    "\022\033\n\023m_bPickAllTempGoods\030\010 \001(\010\"H\n\032CGCAskT"
    "reasureBoxDropGoods\022\023\n\013m_un32BoxID\030\001 \001(\r"
    "\022\025\n\rm_isShowAward\030\002 \001(\010\"\261\001\n\020CGCAskEnterS"
    "cene\022\022\n\nm_n32MapID\030\001 \001(\005\022\024\n\014m_n32SceneID"
    "\030\002 \001(\005\022\024\n\014m_bEnterByUI\030\003 \001(\010\022\026\n\016m_un32HP"
    "Vessel\030\004 \001(\r\022\026\n\016m_un32MPVessel\030\005 \001(\r\022\024\n\014"
    "m_un32GotExp\030\006 \001(\r\022\027\n\017m_un32GotSilver\030\007 "
    "\001(\r\">\n\034CGSNotifyRoleMapScheduleList\022\017\n\007l"
    "ineNum\030\001 \001(\r\022\r\n\005mapID\030\002 \001(\r\"\034\n\032CGSNotify"
    "RoleFightProperty\"\026\n\024CGSNotifyAssetChang"
    "e\"\026\n\024CGSNotifyLevelChange\"\024\n\022CGSNotifyEx"
    "pChange\"\026\n\024CGSNotifyCurProperty\"\034\n\032CGSNo"
    "tifyDisplayGateIncome\"O\n\014CGCAskRelive\022\023\n"
    "\013_reliveType\030\001 \001(\010\022\022\n\n_assetType\030\002 \001(\010\022\026"
    "\n\016m_un32AssetNum\030\003 \001(\r\"$\n\014CGCReportExp\022\024"
    "\n\014m_un32GotExp\030\001 \001(\r\"\245\001\n\021CGCReportUseSki"
    "ll\022\023\n\013m_un32ObjID\030\001 \001(\r\022\025\n\rm_un32SkillID"
    "\030\002 \001(\r\022\017\n\007m_fPosX\030\003 \001(\002\022\017\n\007m_fPosY\030\004 \001(\002"
    "\022\017\n\007m_fPosZ\030\005 \001(\002\022\017\n\007m_fDirX\030\006 \001(\002\022\017\n\007m_"
    "fDirY\030\007 \001(\002\022\017\n\007m_fDirZ\030\010 \001(\002\"\255\001\n\026CGSNoti"
    "fySkillReleased\022\026\n\016m_un32ObjectID\030\001 \001(\r\022"
    "\025\n\rm_un32SkillID\030\002 \001(\r\022\017\n\007m_fPosX\030\003 \001(\002\022"
    "\017\n\007m_fPosY\030\004 \001(\002\022\017\n\007m_fPosZ\030\005 \001(\002\022\017\n\007m_f"
    "DirX\030\006 \001(\002\022\017\n\007m_fDirY\030\007 \001(\002\022\017\n\007m_fDirZ\030\010"
    " \001(\002\"\250\001\n\025CGCReportOBjectAppear\022\023\n\013m_un32"
    "ObjID\030\001 \001(\r\022\024\n\014m_un32TempID\030\002 \001(\r\022\017\n\007m_f"
    "PosX\030\003 \001(\002\022\017\n\007m_fPosY\030\004 \001(\002\022\017\n\007m_fPosZ\030\005"
    " \001(\002\022\017\n\007m_fDirX\030\006 \001(\002\022\017\n\007m_fDirY\030\007 \001(\002\022\017"
    "\n\007m_fDirZ\030\010 \001(\002\"\250\001\n\025CGSNotifyObjectAppea"
    "r\022\023\n\013m_un32ObjID\030\001 \001(\r\022\024\n\014m_un32TempID\030\002"
    " \001(\r\022\017\n\007m_fPosX\030\003 \001(\002\022\017\n\007m_fPosY\030\004 \001(\002\022\017"
    "\n\007m_fPosZ\030\005 \001(\002\022\017\n\007m_fDirX\030\006 \001(\002\022\017\n\007m_fD"
    "irY\030\007 \001(\002\022\017\n\007m_fDirZ\030\010 \001(\002\"D\n\030CGCReportO"
    "BjectDisappear\022\023\n\013m_un32ObjID\030\001 \001(\r\022\023\n\013m"
    "_n32Reason\030\002 \001(\005\"D\n\030CGSNotifyObjectDisap"
    "pear\022\023\n\013m_un32ObjID\030\001 \001(\r\022\023\n\013m_n32Reason"
    "\030\002 \001(\005\"\253\001\n\025CGCReportObjectAction\022\023\n\013m_un"
    "32ObjID\030\001 \001(\r\022\027\n\017m_n32ActionCate\030\002 \001(\005\022\017"
    "\n\007m_fDirX\030\003 \001(\002\022\017\n\007m_fDirY\030\004 \001(\002\022\017\n\007m_fD"
    "irZ\030\005 \001(\002\022\017\n\007m_fPosX\030\006 \001(\002\022\017\n\007m_fPosY\030\007 "
    "\001(\002\022\017\n\007m_fPosZ\030\010 \001(\002\"\253\001\n\025CGSNotifyObject"
    "Action\022\023\n\013m_un32ObjID\030\001 \001(\r\022\027\n\017m_n32Acti"
    "onCate\030\002 \001(\005\022\017\n\007m_fDirX\030\003 \001(\002\022\017\n\007m_fDirY"
    "\030\004 \001(\002\022\017\n\007m_fDirZ\030\005 \001(\002\022\017\n\007m_fPosX\030\006 \001(\002"
    "\022\017\n\007m_fPosY\030\007 \001(\002\022\017\n\007m_fPosZ\030\010 \001(\002\"z\n\023CG"
    "CReportObjectHurm\022\017\n\007m_bHost\030\001 \001(\010\022\023\n\013m_"
    "un32ObjID\030\002 \001(\r\022\024\n\014m_n32HPValue\030\003 \001(\005\022\022\n"
    "\nm_n32CurHP\030\004 \001(\005\022\023\n\013m_n32Effect\030\005 \001(\005\"w"
    "\n\023CGSNotifyObjectHurm\022\017\n\007m_bHost\030\001 \001(\010\022\023"
    "\n\013m_un32ObjID\030\002 \001(\r\022\024\n\014m_n32HPValue\030\003 \001("
    "\005\022\017\n\007m_n32HP\030\004 \001(\005\022\023\n\013m_n32Effect\030\005 \001(\005\""
    "E\n\030CGCAskEnterTowerInstance\022\025\n\rm_un32Tow"
    "erId\030\001 \001(\r\022\022\n\nm_bCurWave\030\002 \001(\010\"4\n\033CGCRep"
    "ortTowerInstanceScore\022\025\n\rm_un32TowerId\030\001"
    " \001(\r\"-\n\027CGCAskTowerInstanceRank\022\022\n\nm_un1"
    "6Type\030\001 \001(\005\"H\n\030CGCAskTowerInstanceAward\022"
    "\024\n\014m_u32TowerID\030\001 \001(\r\022\026\n\016m_u16TowerType\030"
    "\002 \001(\r\"\021\n\017CGCAskEMailList\"\'\n\016GCAskReadEMa"
    "il\022\025\n\rm_un32EMailID\030\001 \001(\r\",\n\023CGCAskGetEM"
    "ailPrize\022\025\n\rm_un32EMailID\030\001 \001(\r\"*\n\021CGCAs"
    "kRemoveEMail\022\025\n\rm_un32EMailID\030\001 \001(\r\"r\n\021C"
    "GSNotifyRankList\022\024\n\014m_n8RankCate\030\001 \001(\005\022\025"
    "\n\rm_n32SelfRank\030\002 \001(\005\022\032\n\022m_n32SelfRankVa"
    "lue\030\003 \001(\005\022\024\n\014m_n32RankNum\030\004 \001(\005\",\n\022CGSNo"
    "tifyEMailList\022\026\n\016m_un32EMailNum\030\001 \001(\r\"h\n"
    "\021CGCSendCreateRole\022\026\n\016_u32VocationID\030\001 \001"
    "(\r\022\023\n\013_byteGender\030\002 \001(\010\022\021\n\t_nickName\030\003 \001"
    "(\t\022\023\n\013_byteVerify\030\004 \001(\010\"\'\n\024CGCSendCreate"
    "RoleRet\022\017\n\007_result\030\001 \001(\005\"&\n\016CGCAskRankLi"
    "st\022\024\n\014m_n8RankCate\030\001 \001(\r\"P\n\016CGCAsChargeI"
    "OS\022\022\n\nm_bIsDebug\030\001 \001(\010\022\020\n\010m_strLen\030\002 \001(\r"
    "\022\030\n\020m_szAppleReceipt\030\003 \001(\t\"S\n\022CGCNotifyC"
    "hargeIOS\022\021\n\tm_nResult\030\001 \001(\005\022\020\n\010m_strLen\030"
    "\002 \001(\r\022\030\n\020m_szAppleReceipt\030\003 \001(\t\"9\n\020CGCRe"
    "portProcuce\022\017\n\007_bookID\030\001 \001(\r\022\024\n\014_bUseDia"
    "mond\030\002 \001(\010\"\?\n\022CGCAskChapterAward\022\023\n\013_cha"
    "pterNum\030\001 \001(\005\022\024\n\014_hardChapter\030\002 \001(\010\"\021\n\017C"
    "GCAskMedalInfo\"\024\n\022CGCAskMedalLevelUp\"\325\001\n"
    "\017CGCAskAddFriend\022>\n\n_FriendOpt\030\001 \001(\0162*.N"
    "etPackage.CGCAskAddFriend.FriendSendType"
    "\022\021\n\t_roleName\030\002 \001(\t\"o\n\016FriendSendType\022\n\n"
    "\006UNKONW\020\000\022\r\n\tAddFriend\020\001\022\007\n\003Not\020\002\022\006\n\002Ok\020"
    "\003\022\020\n\014DeleteFriend\020\004\022\r\n\tSendAward\020\005\022\020\n\014Re"
    "ceiveAward\020\006\"\274\001\n\014CGCVipFriend\022;\n\n_Friend"
    "Opt\030\001 \001(\0162\'.NetPackage.CGCVipFriend.Frie"
    "ndSendType\"o\n\016FriendSendType\022\n\n\006UNKONW\020\000"
    "\022\r\n\tAddFriend\020\001\022\007\n\003Not\020\002\022\006\n\002Ok\020\003\022\020\n\014Dele"
    "teFriend\020\004\022\r\n\tSendAward\020\005\022\020\n\014ReceiveAwar"
    "d\020\006\"\024\n\022CGCAskFriendRecord\"#\n\022CGCAskSelec"
    "tPlayer\022\r\n\005_byte\030\001 \001(\t\"8\n\023CGCAskGuideCom"
    "plate\022\017\n\007GroupId\030\001 \001(\r\022\020\n\010u8Finish\030\002 \001(\010"
    "*\367\027\n\tCeC2GType\022\016\n\nC2G_UNKOWN\020\000\022\014\n\010C2G_Pi"
    "ng\020\001\022\r\n\tC2G_Login\020\002\022\022\n\016C2G_CreateRole\020\003\022"
    "\022\n\016C2G_SelectRole\020\004\022\022\n\016C2G_EnterScene\020\005\022"
    "\017\n\013C2G_AskMove\020\006\022\016\n\nC2G_Logout\020\007\022\020\n\014C2G_"
    "BuyGoods\020\010\022\020\n\014C2G_UseGoods\020\t\022\020\n\014C2G_Pass"
    "Gate\020\n\022\022\n\016C2G_EquipGoods\020\013\022\021\n\rC2G_SaleGo"
    "ods\020\014\022\024\n\020C2G_BoxDropGoods\020\r\022\024\n\020C2G_AskMo"
    "veGoods\020\016\022\031\n\025C2G_AskIntensifyEquip\020\017\022\030\n\024"
    "C2G_AskTransmitEquip\020\020\022\021\n\rC2G_AskRelive\020"
    "\021\022\032\n\026C2G_AskActiveSkillCard\020\022\022!\n\035C2G_Ask"
    "RefreshActiveSkillCard\020\023\022\030\n\024C2G_AskBuySk"
    "illPoint\020\024\022\021\n\rC2G_ReportExp\020\025\022\026\n\022C2G_Rep"
    "ortUseSkill\020\026\022\032\n\026C2G_ReportOBjectAppear\020"
    "\027\022\035\n\031C2G_ReportOBjectDisappear\020\030\022\032\n\026C2G_"
    "ReportObjectAction\020\031\022\030\n\024C2G_ReportObject"
    "Hurm\020\032\022\025\n\021C2G_AskCombineGem\020\033\022\024\n\020C2G_Ask"
    "WashEquip\020\035\022\023\n\017C2G_AskInlayGem\020\036\022\027\n\023C2G_"
    "AskChapterAward\020\037\022\027\n\023C2G_AskUpgradeEquip"
    "\020 \022\031\n\025C2G_AskDecomposeEquip\020!\022\031\n\025C2G_Ask"
    "GMSendAnnounce\020\"\022\017\n\013C2G_AskChat\020#\022\023\n\017C2G"
    "_AskRankList\020$\022\024\n\020C2G_AskEMailList\020%\022\024\n\020"
    "C2G_AskReadEMail\020&\022\030\n\024C2G_AskGetEMailPri"
    "ze\020\'\022\026\n\022C2G_AskRemoveEMail\020(\022\032\n\026C2G_AskA"
    "chievementList\020)\022\033\n\027C2G_AskAchievementPr"
    "ize\020*\022\023\n\017C2G_AskUseTitle\020+\022!\n\035C2G_Report"
    "AchievementSchedule\020,\022\035\n\031C2G_AskEnterTow"
    "erInstance\020-\022 \n\034C2G_ReportTowerInstanceS"
    "core\020.\022\034\n\030C2G_AskTowerInstanceRank\020/\022\035\n\031"
    "C2G_AskTowerInstanceAward\0200\022\026\n\022C2G_AskBu"
    "yHPVessel\0201\022\026\n\022C2G_AskBuyMPVessel\0202\022\023\n\017C"
    "2G_AskShopTemp\0203\022\026\n\022C2G_AskBuyShopItem\0204"
    "\022\024\n\020C2G_AskChargeIOS\0205\022\023\n\017C2G_AskAddGood"
    "s\0206\022\026\n\022C2G_ReportHPVessel\0207\022\026\n\022C2G_Repor"
    "tMPVessel\0208\022\025\n\021C2G_AskGMPassGate\0209\022\030\n\024C2"
    "G_AskGMChangeLevel\020:\022\027\n\023C2G_AskSystemNot"
    "ice\020;\022\021\n\rC2G_ReportBug\020<\022\026\n\022C2G_AskEnter"
    "Goblin\020=\022\026\n\022C2G_AskGoblinTimes\020>\022\035\n\031C2G_"
    "AskGoblinMultiBenefit\020\?\022\031\n\025C2G_AskBuyGob"
    "linTimes\020@\022\025\n\021C2G_ReportProduce\020A\022\022\n\016C2G"
    "_AcceptTask\020B\022\022\n\016C2G_SubmitTask\020C\022\024\n\020C2G"
    "_GMAcceptTask\020D\022\032\n\026C2G_GMSendAnnouncemen"
    "t\020E\022\020\n\014C2G_AskWepon\020F\022\033\n\027C2G_AskEquipWea"
    "ponSkill\020G\022\023\n\017C2G_AskVipAward\020H\022\023\n\017C2G_A"
    "skBuyPower\020I\022\026\n\022C2G_ReportScenario\020J\022\022\n\016"
    "C2G_ReportHurt\020K\022\025\n\021C2G_AskCheckSkill\020L\022"
    "\026\n\022C2G_AskCultureWing\020M\022\030\n\024C2G_AskEvolut"
    "ionWing\020N\022\024\n\020C2G_AskArenaInfo\020O\022\023\n\017C2G_A"
    "skHeroList\020P\022\024\n\020C2G_AskChallenge\020Q\022\035\n\031C2"
    "G_ReportChallengeResult\020R\022\032\n\026C2G_AskBuyC"
    "hallengeNum\020S\022\030\n\024C2G_AskHonorShopInfo\020T\022"
    "\027\n\023C2G_AskBuyHonorItem\020U\022\023\n\017C2G_AskWingI"
    "nfo\020V\022\033\n\027C2G_AskClearChallengeCD\020W\022\026\n\022C2"
    "G_AskSyncPVPInfo\020X\022\030\n\024C2G_AskUnsyncPVPIn"
    "fo\020Y\022\030\n\024C2G_AskJoinPVPBattle\020Z\022\035\n\031C2G_As"
    "kEncouragePVPBattle\020[\022\037\n\033C2G_AskReceiveH"
    "eroRankAward\020\\\022\025\n\021C2G_AskBeginSweep\020]\022\024\n"
    "\020C2G_AskStopSweep\020^\022\032\n\026C2G_AskAccelerate"
    "Sweep\020_\022\022\n\016C2G_AskUseItem\020`\022\025\n\021C2G_AskCr"
    "eateTeam\020a\022\024\n\020C2G_PreviewMulti\020b\022\022\n\016C2G_"
    "AskAddTeam\020c\022\024\n\020C2G_QuickAddTeam\020d\022\032\n\026C2"
    "G_AskBeginFightMulti\020e\022\027\n\023C2G_SendFormTe"
    "amMsg\020f\022\024\n\020C2G_AskLeaveTeam\020g\022\034\n\030C2G_Rep"
    "ortMultiPlayerDie\020h\022\027\n\023C2G_AskJoinActivi"
    "ty\020i\022\025\n\021C2G_AskMedalLevel\020j\022\027\n\023C2G_AskMe"
    "dalLevelUp\020k\022\024\n\020C2G_AskAddFriend\020l\022\021\n\rC2"
    "G_VipFriend\020m\022\027\n\023C2G_AskFriendRecord\020n\022\035"
    "\n\031C2G_AskUseItemInWorldBoss\020o\022\027\n\023C2G_Ask"
    "SelectPlayer\020p\022\034\n\030C2G_ReportAttackedTarg"
    "et\020q\022\022\n\016C2G_AskPetData\020r\022\025\n\021C2G_AskPetLe"
    "velUp\020s\022\021\n\rC2G_AskZhuiJi\020t\022\031\n\025C2G_AskCur"
    "ZhuiJiCount\020u\022\034\n\030C2G_AskReceiveArenaAwar"
    "d\020v\022\021\n\rC2G_SelectPet\020|\022\026\n\022C2G_AskChannel"
    "List\020}\022\031\n\025C2G_AskChannelChangel\020~\022\030\n\024C2G"
    "_AskGuideComplate\020\177\022\031\n\024C2G_ChallengePand"
    "ora\020\201\001\022\030\n\023C2G_ResetPandoraNum\020\202\001\022\034\n\027C2G_"
    "ChallengeAllPandora\020\203\001\022\024\n\017C2G_OpenPandor"
    "a\020\204\001\022\024\n\017C2G_AskEquipPet\020\205\001*\360\021\n\tCeG2CType"
    "\022\016\n\nG2C_UNKOWN\020\000\022\020\n\014G2C_LoginRet\020\001\022\020\n\014G2"
    "C_RoleList\020\002\022\025\n\021G2C_RoleCreateRet\020\003\022\025\n\021G"
    "2C_SelectRoleRet\020\004\022\026\n\022G2C_EnterSeceneRet"
    "\020\005\022\017\n\013G2C_BagInfo\020\006\022\025\n\021G2C_EquipmentInfo"
    "\020\007\022\021\n\rG2C_GemChange\020\010\022\031\n\025G2C_RoleFightPr"
    "operty\020\t\022\023\n\017G2C_AssetChange\020\n\022\027\n\023G2C_Rol"
    "eLevelChange\020\013\022\025\n\021G2C_RoleExpChange\020\014\022\027\n"
    "\023G2C_RoleCurProperty\020\r\022\027\n\023G2C_RoleChange"
    "Scene\020\016\022\023\n\017G2C_ErrorMssage\020\017\022\022\n\016G2C_Role"
    "Appear\020\020\022\027\n\023G2C_ObjectDisappear\020\021\022\022\n\016G2C"
    "_ObjectMove\020\022\022\030\n\024G2C_ObjectStopAction\020\023\022"
    "\026\n\022G2C_RoleInfoChange\020\024\022!\n\035G2C_NotifyRol"
    "eMapScheduleList\020\025\022\037\n\033G2C_NotifyDisplayG"
    "ateIncome\020\026\022\036\n\032G2C_NotifySkillPointChang"
    "e\020\027\022\032\n\026G2C_NotifyCurSkillInfo\020\030\022$\n G2C_N"
    "otifyCanActiveSkillCardList\020\031\022\033\n\027G2C_Not"
    "ifySkillReleased\020\032\022\032\n\026G2C_NotifyObjectAp"
    "pear\020\033\022\035\n\031G2C_NotifyObjectDisappear\020\034\022\032\n"
    "\026G2C_NotifyTimedCounter\020\035\022\032\n\026G2C_NotifyO"
    "bjectAction\020\036\022\030\n\024G2C_NotifyObjectHurm\020\037\022"
    "\026\n\022G2C_NotifyChatInfo\020 \022\026\n\022G2C_NotifyRan"
    "kList\020!\022\027\n\023G2C_NotifyEMailList\020\"\022\026\n\022G2C_"
    "NotifyPetEquip\020#\022\037\n\033G2C_NotifyAchievemen"
    "tChange\020$\022\031\n\025G2C_NotifyTitleChange\020%\022\030\n\024"
    "G2C_NotifyItemChange\020&\022\026\n\022G2C_NotifyShop"
    "Temp\020\'\022\027\n\023G2C_NotifyChargeIOS\020(\022\026\n\022G2C_R"
    "esponseNotice\020)\022\037\n\033G2C_NotifyGoblinRemai"
    "nTimes\020*\022\026\n\022G2C_NotifyTaskInfo\020+\022\035\n\031G2C_"
    "NotifySkillBookChange\020,\022\034\n\030G2c_NotifyEqu"
    "ipSkillData\020-\022\027\n\023G2C_NotifyPowerInfo\020.\022!"
    "\n\035G2C_NotifyWeaponSkillSchedule\020/\022\026\n\022G2C"
    "_NotifyWingInfo\0200\022\027\n\023G2C_NotifyArenaInfo"
    "\0201\022\032\n\026G2C_NotifyHeroBankInfo\0202\022\034\n\030G2C_No"
    "tifyChallengerInfo\0203\022\035\n\031G2C_NotifyChalle"
    "ngeResult\0204\022\027\n\023G2C_NotifyHonorShop\0205\022\030\n\024"
    "G2C_NotifyChallenger\0206\022\023\n\017GSNotifyPVPRan"
    "k\0207\022\022\n\016GSNotifyPVPLog\0208\022\036\n\032GSNotifyAddPV"
    "PParticipator\0209\022!\n\035GSNotifyRemovePVPPart"
    "icipator\020:\022\027\n\023GSNotifySweepResult\020;\022\025\n\021G"
    "SNotifyMultiInfo\020<\022\024\n\020GSNotifyTeamInfo\020="
    "\022\032\n\026GSNotifyStartCountDown\020>\022\'\n#GSNotify"
    "StartCountDownPlayerOffLine\020\?\022\027\n\023GSNotif"
    "yMultiResult\020@\022\030\n\024GSNotifyPlayerRelive\020A"
    "\022\025\n\021GCNotifyTowerInfo\020B\022\027\n\023GCNotifyHisto"
    "ryRank\020C\022\023\n\017GCNotifyCurRank\020D\022\036\n\032GCNotyf"
    "yWorldBossAwardList\020E\022\025\n\021GCNotyfyMedalIn"
    "fo\020F\022\031\n\025GSNotifyWorldBossOpen\020G\022\031\n\025GSNot"
    "ifyActivityClose\020H\022\034\n\030GSNotifyAddFriendM"
    "essage\020I\022\026\n\022GSNotifyFriendList\020J\022\031\n\025GSNo"
    "tifyAddFriendList\020K\022\037\n\033GSNotifyWorldBoss"
    "DamageList\020L\022\037\n\033GSNotifyWorldBossTemplat"
    "eID\020M\022\030\n\024GSNotifySelectResult\020N\022\"\n\036GSNot"
    "ifyWorldBossUseItemResult\020O\022\023\n\017GSNotifyP"
    "etData\020P\022\027\n\023GSNotifyZhuiJiCount\020Q\022\031\n\025GSN"
    "otifyFuncOpenParam\020U\022\026\n\022GSNotifyChannelC"
    "ur\020W\022\027\n\023GSNotifyChannelList\020X\022\025\n\021GSNotif"
    "yGuideList\020Y\022\027\n\023GSNotifyPandoraInfo\020Z", 11317);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "NetMessage.proto", &protobuf_RegisterTypes);
  CNetHead::default_instance_ = new CNetHead();
  CRequestLogin::default_instance_ = new CRequestLogin();
  CRequestLoginRet::default_instance_ = new CRequestLoginRet();
  CRequestPing::default_instance_ = new CRequestPing();
  CGSNotifyRoleBaseInfo::default_instance_ = new CGSNotifyRoleBaseInfo();
  CGCAskSelectRole::default_instance_ = new CGCAskSelectRole();
  CNetErrorMessage::default_instance_ = new CNetErrorMessage();
  CGSNotifyChangeScene::default_instance_ = new CGSNotifyChangeScene();
  CGSNotifyRoleAppear::default_instance_ = new CGSNotifyRoleAppear();
  CGSObjectDisappear::default_instance_ = new CGSObjectDisappear();
  CGCAskLogout::default_instance_ = new CGCAskLogout();
  CGSObjectMove::default_instance_ = new CGSObjectMove();
  CGCAskMove::default_instance_ = new CGCAskMove();
  CGSNotifyRoleProfileChange::default_instance_ = new CGSNotifyRoleProfileChange();
  CGCReportPassGate::default_instance_ = new CGCReportPassGate();
  CGCAskTreasureBoxDropGoods::default_instance_ = new CGCAskTreasureBoxDropGoods();
  CGCAskEnterScene::default_instance_ = new CGCAskEnterScene();
  CGSNotifyRoleMapScheduleList::default_instance_ = new CGSNotifyRoleMapScheduleList();
  CGSNotifyRoleFightProperty::default_instance_ = new CGSNotifyRoleFightProperty();
  CGSNotifyAssetChange::default_instance_ = new CGSNotifyAssetChange();
  CGSNotifyLevelChange::default_instance_ = new CGSNotifyLevelChange();
  CGSNotifyExpChange::default_instance_ = new CGSNotifyExpChange();
  CGSNotifyCurProperty::default_instance_ = new CGSNotifyCurProperty();
  CGSNotifyDisplayGateIncome::default_instance_ = new CGSNotifyDisplayGateIncome();
  CGCAskRelive::default_instance_ = new CGCAskRelive();
  CGCReportExp::default_instance_ = new CGCReportExp();
  CGCReportUseSkill::default_instance_ = new CGCReportUseSkill();
  CGSNotifySkillReleased::default_instance_ = new CGSNotifySkillReleased();
  CGCReportOBjectAppear::default_instance_ = new CGCReportOBjectAppear();
  CGSNotifyObjectAppear::default_instance_ = new CGSNotifyObjectAppear();
  CGCReportOBjectDisappear::default_instance_ = new CGCReportOBjectDisappear();
  CGSNotifyObjectDisappear::default_instance_ = new CGSNotifyObjectDisappear();
  CGCReportObjectAction::default_instance_ = new CGCReportObjectAction();
  CGSNotifyObjectAction::default_instance_ = new CGSNotifyObjectAction();
  CGCReportObjectHurm::default_instance_ = new CGCReportObjectHurm();
  CGSNotifyObjectHurm::default_instance_ = new CGSNotifyObjectHurm();
  CGCAskEnterTowerInstance::default_instance_ = new CGCAskEnterTowerInstance();
  CGCReportTowerInstanceScore::default_instance_ = new CGCReportTowerInstanceScore();
  CGCAskTowerInstanceRank::default_instance_ = new CGCAskTowerInstanceRank();
  CGCAskTowerInstanceAward::default_instance_ = new CGCAskTowerInstanceAward();
  CGCAskEMailList::default_instance_ = new CGCAskEMailList();
  GCAskReadEMail::default_instance_ = new GCAskReadEMail();
  CGCAskGetEMailPrize::default_instance_ = new CGCAskGetEMailPrize();
  CGCAskRemoveEMail::default_instance_ = new CGCAskRemoveEMail();
  CGSNotifyRankList::default_instance_ = new CGSNotifyRankList();
  CGSNotifyEMailList::default_instance_ = new CGSNotifyEMailList();
  CGCSendCreateRole::default_instance_ = new CGCSendCreateRole();
  CGCSendCreateRoleRet::default_instance_ = new CGCSendCreateRoleRet();
  CGCAskRankList::default_instance_ = new CGCAskRankList();
  CGCAsChargeIOS::default_instance_ = new CGCAsChargeIOS();
  CGCNotifyChargeIOS::default_instance_ = new CGCNotifyChargeIOS();
  CGCReportProcuce::default_instance_ = new CGCReportProcuce();
  CGCAskChapterAward::default_instance_ = new CGCAskChapterAward();
  CGCAskMedalInfo::default_instance_ = new CGCAskMedalInfo();
  CGCAskMedalLevelUp::default_instance_ = new CGCAskMedalLevelUp();
  CGCAskAddFriend::default_instance_ = new CGCAskAddFriend();
  CGCVipFriend::default_instance_ = new CGCVipFriend();
  CGCAskFriendRecord::default_instance_ = new CGCAskFriendRecord();
  CGCAskSelectPlayer::default_instance_ = new CGCAskSelectPlayer();
  CGCAskGuideComplate::default_instance_ = new CGCAskGuideComplate();
  CNetHead::default_instance_->InitAsDefaultInstance();
  CRequestLogin::default_instance_->InitAsDefaultInstance();
  CRequestLoginRet::default_instance_->InitAsDefaultInstance();
  CRequestPing::default_instance_->InitAsDefaultInstance();
  CGSNotifyRoleBaseInfo::default_instance_->InitAsDefaultInstance();
  CGCAskSelectRole::default_instance_->InitAsDefaultInstance();
  CNetErrorMessage::default_instance_->InitAsDefaultInstance();
  CGSNotifyChangeScene::default_instance_->InitAsDefaultInstance();
  CGSNotifyRoleAppear::default_instance_->InitAsDefaultInstance();
  CGSObjectDisappear::default_instance_->InitAsDefaultInstance();
  CGCAskLogout::default_instance_->InitAsDefaultInstance();
  CGSObjectMove::default_instance_->InitAsDefaultInstance();
  CGCAskMove::default_instance_->InitAsDefaultInstance();
  CGSNotifyRoleProfileChange::default_instance_->InitAsDefaultInstance();
  CGCReportPassGate::default_instance_->InitAsDefaultInstance();
  CGCAskTreasureBoxDropGoods::default_instance_->InitAsDefaultInstance();
  CGCAskEnterScene::default_instance_->InitAsDefaultInstance();
  CGSNotifyRoleMapScheduleList::default_instance_->InitAsDefaultInstance();
  CGSNotifyRoleFightProperty::default_instance_->InitAsDefaultInstance();
  CGSNotifyAssetChange::default_instance_->InitAsDefaultInstance();
  CGSNotifyLevelChange::default_instance_->InitAsDefaultInstance();
  CGSNotifyExpChange::default_instance_->InitAsDefaultInstance();
  CGSNotifyCurProperty::default_instance_->InitAsDefaultInstance();
  CGSNotifyDisplayGateIncome::default_instance_->InitAsDefaultInstance();
  CGCAskRelive::default_instance_->InitAsDefaultInstance();
  CGCReportExp::default_instance_->InitAsDefaultInstance();
  CGCReportUseSkill::default_instance_->InitAsDefaultInstance();
  CGSNotifySkillReleased::default_instance_->InitAsDefaultInstance();
  CGCReportOBjectAppear::default_instance_->InitAsDefaultInstance();
  CGSNotifyObjectAppear::default_instance_->InitAsDefaultInstance();
  CGCReportOBjectDisappear::default_instance_->InitAsDefaultInstance();
  CGSNotifyObjectDisappear::default_instance_->InitAsDefaultInstance();
  CGCReportObjectAction::default_instance_->InitAsDefaultInstance();
  CGSNotifyObjectAction::default_instance_->InitAsDefaultInstance();
  CGCReportObjectHurm::default_instance_->InitAsDefaultInstance();
  CGSNotifyObjectHurm::default_instance_->InitAsDefaultInstance();
  CGCAskEnterTowerInstance::default_instance_->InitAsDefaultInstance();
  CGCReportTowerInstanceScore::default_instance_->InitAsDefaultInstance();
  CGCAskTowerInstanceRank::default_instance_->InitAsDefaultInstance();
  CGCAskTowerInstanceAward::default_instance_->InitAsDefaultInstance();
  CGCAskEMailList::default_instance_->InitAsDefaultInstance();
  GCAskReadEMail::default_instance_->InitAsDefaultInstance();
  CGCAskGetEMailPrize::default_instance_->InitAsDefaultInstance();
  CGCAskRemoveEMail::default_instance_->InitAsDefaultInstance();
  CGSNotifyRankList::default_instance_->InitAsDefaultInstance();
  CGSNotifyEMailList::default_instance_->InitAsDefaultInstance();
  CGCSendCreateRole::default_instance_->InitAsDefaultInstance();
  CGCSendCreateRoleRet::default_instance_->InitAsDefaultInstance();
  CGCAskRankList::default_instance_->InitAsDefaultInstance();
  CGCAsChargeIOS::default_instance_->InitAsDefaultInstance();
  CGCNotifyChargeIOS::default_instance_->InitAsDefaultInstance();
  CGCReportProcuce::default_instance_->InitAsDefaultInstance();
  CGCAskChapterAward::default_instance_->InitAsDefaultInstance();
  CGCAskMedalInfo::default_instance_->InitAsDefaultInstance();
  CGCAskMedalLevelUp::default_instance_->InitAsDefaultInstance();
  CGCAskAddFriend::default_instance_->InitAsDefaultInstance();
  CGCVipFriend::default_instance_->InitAsDefaultInstance();
  CGCAskFriendRecord::default_instance_->InitAsDefaultInstance();
  CGCAskSelectPlayer::default_instance_->InitAsDefaultInstance();
  CGCAskGuideComplate::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_NetMessage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_NetMessage_2eproto {
  StaticDescriptorInitializer_NetMessage_2eproto() {
    protobuf_AddDesc_NetMessage_2eproto();
  }
} static_descriptor_initializer_NetMessage_2eproto_;
const ::google::protobuf::EnumDescriptor* CeC2GType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CeC2GType_descriptor_;
}
bool CeC2GType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 91:
    case 92:
    case 93:
    case 94:
    case 95:
    case 96:
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 124:
    case 125:
    case 126:
    case 127:
    case 129:
    case 130:
    case 131:
    case 132:
    case 133:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CeG2CType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CeG2CType_descriptor_;
}
bool CeG2CType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 85:
    case 87:
    case 88:
    case 89:
    case 90:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CNetHead::kLengthFieldNumber;
const int CNetHead::kAssistantCmdFieldNumber;
const int CNetHead::kBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CNetHead::CNetHead()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CNetHead)
}

void CNetHead::InitAsDefaultInstance() {
}

CNetHead::CNetHead(const CNetHead& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CNetHead)
}

void CNetHead::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _length_ = 0u;
  _assistantcmd_ = 0u;
  _body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CNetHead::~CNetHead() {
  // @@protoc_insertion_point(destructor:NetPackage.CNetHead)
  SharedDtor();
}

void CNetHead::SharedDtor() {
  _body_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CNetHead::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CNetHead::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CNetHead_descriptor_;
}

const CNetHead& CNetHead::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CNetHead* CNetHead::default_instance_ = NULL;

CNetHead* CNetHead::New(::google::protobuf::Arena* arena) const {
  CNetHead* n = new CNetHead;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CNetHead::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CNetHead*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(_length_, _assistantcmd_);
    if (has__body()) {
      _body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CNetHead::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CNetHead)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 _length = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_length_)));
          set_has__length();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse__assistantCmd;
        break;
      }

      // optional uint32 _assistantCmd = 2;
      case 2: {
        if (tag == 16) {
         parse__assistantCmd:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_assistantcmd_)));
          set_has__assistantcmd();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse__body;
        break;
      }

      // optional string _body = 3;
      case 3: {
        if (tag == 26) {
         parse__body:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__body()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_body().data(), this->_body().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NetPackage.CNetHead._body");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CNetHead)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CNetHead)
  return false;
#undef DO_
}

void CNetHead::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CNetHead)
  // optional uint32 _length = 1;
  if (has__length()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->_length(), output);
  }

  // optional uint32 _assistantCmd = 2;
  if (has__assistantcmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->_assistantcmd(), output);
  }

  // optional string _body = 3;
  if (has__body()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_body().data(), this->_body().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NetPackage.CNetHead._body");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->_body(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CNetHead)
}

::google::protobuf::uint8* CNetHead::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CNetHead)
  // optional uint32 _length = 1;
  if (has__length()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->_length(), target);
  }

  // optional uint32 _assistantCmd = 2;
  if (has__assistantcmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->_assistantcmd(), target);
  }

  // optional string _body = 3;
  if (has__body()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_body().data(), this->_body().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NetPackage.CNetHead._body");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->_body(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CNetHead)
  return target;
}

int CNetHead::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 _length = 1;
    if (has__length()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_length());
    }

    // optional uint32 _assistantCmd = 2;
    if (has__assistantcmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_assistantcmd());
    }

    // optional string _body = 3;
    if (has__body()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_body());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CNetHead::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CNetHead* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CNetHead>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CNetHead::MergeFrom(const CNetHead& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has__length()) {
      set__length(from._length());
    }
    if (from.has__assistantcmd()) {
      set__assistantcmd(from._assistantcmd());
    }
    if (from.has__body()) {
      set_has__body();
      _body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._body_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CNetHead::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CNetHead::CopyFrom(const CNetHead& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CNetHead::IsInitialized() const {

  return true;
}

void CNetHead::Swap(CNetHead* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CNetHead::InternalSwap(CNetHead* other) {
  std::swap(_length_, other->_length_);
  std::swap(_assistantcmd_, other->_assistantcmd_);
  _body_.Swap(&other->_body_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CNetHead::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CNetHead_descriptor_;
  metadata.reflection = CNetHead_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CNetHead

// optional uint32 _length = 1;
bool CNetHead::has__length() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CNetHead::set_has__length() {
  _has_bits_[0] |= 0x00000001u;
}
void CNetHead::clear_has__length() {
  _has_bits_[0] &= ~0x00000001u;
}
void CNetHead::clear__length() {
  _length_ = 0u;
  clear_has__length();
}
 ::google::protobuf::uint32 CNetHead::_length() const {
  // @@protoc_insertion_point(field_get:NetPackage.CNetHead._length)
  return _length_;
}
 void CNetHead::set__length(::google::protobuf::uint32 value) {
  set_has__length();
  _length_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CNetHead._length)
}

// optional uint32 _assistantCmd = 2;
bool CNetHead::has__assistantcmd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CNetHead::set_has__assistantcmd() {
  _has_bits_[0] |= 0x00000002u;
}
void CNetHead::clear_has__assistantcmd() {
  _has_bits_[0] &= ~0x00000002u;
}
void CNetHead::clear__assistantcmd() {
  _assistantcmd_ = 0u;
  clear_has__assistantcmd();
}
 ::google::protobuf::uint32 CNetHead::_assistantcmd() const {
  // @@protoc_insertion_point(field_get:NetPackage.CNetHead._assistantCmd)
  return _assistantcmd_;
}
 void CNetHead::set__assistantcmd(::google::protobuf::uint32 value) {
  set_has__assistantcmd();
  _assistantcmd_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CNetHead._assistantCmd)
}

// optional string _body = 3;
bool CNetHead::has__body() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CNetHead::set_has__body() {
  _has_bits_[0] |= 0x00000004u;
}
void CNetHead::clear_has__body() {
  _has_bits_[0] &= ~0x00000004u;
}
void CNetHead::clear__body() {
  _body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__body();
}
 const ::std::string& CNetHead::_body() const {
  // @@protoc_insertion_point(field_get:NetPackage.CNetHead._body)
  return _body_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CNetHead::set__body(const ::std::string& value) {
  set_has__body();
  _body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetPackage.CNetHead._body)
}
 void CNetHead::set__body(const char* value) {
  set_has__body();
  _body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetPackage.CNetHead._body)
}
 void CNetHead::set__body(const char* value, size_t size) {
  set_has__body();
  _body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetPackage.CNetHead._body)
}
 ::std::string* CNetHead::mutable__body() {
  set_has__body();
  // @@protoc_insertion_point(field_mutable:NetPackage.CNetHead._body)
  return _body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CNetHead::release__body() {
  clear_has__body();
  return _body_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CNetHead::set_allocated__body(::std::string* _body) {
  if (_body != NULL) {
    set_has__body();
  } else {
    clear_has__body();
  }
  _body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _body);
  // @@protoc_insertion_point(field_set_allocated:NetPackage.CNetHead._body)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CRequestLogin::kUserNameFieldNumber;
const int CRequestLogin::kUserPasswordFieldNumber;
const int CRequestLogin::kUserGUIDFieldNumber;
const int CRequestLogin::kDeviceTokenFieldNumber;
const int CRequestLogin::kReConnectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CRequestLogin::CRequestLogin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CRequestLogin)
}

void CRequestLogin::InitAsDefaultInstance() {
}

CRequestLogin::CRequestLogin(const CRequestLogin& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CRequestLogin)
}

void CRequestLogin::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _userpassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _userguid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _devicetoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _reconnect_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CRequestLogin::~CRequestLogin() {
  // @@protoc_insertion_point(destructor:NetPackage.CRequestLogin)
  SharedDtor();
}

void CRequestLogin::SharedDtor() {
  _username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _userpassword_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _userguid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _devicetoken_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CRequestLogin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CRequestLogin::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CRequestLogin_descriptor_;
}

const CRequestLogin& CRequestLogin::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CRequestLogin* CRequestLogin::default_instance_ = NULL;

CRequestLogin* CRequestLogin::New(::google::protobuf::Arena* arena) const {
  CRequestLogin* n = new CRequestLogin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CRequestLogin::Clear() {
  if (_has_bits_[0 / 32] & 31u) {
    if (has__username()) {
      _username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has__userpassword()) {
      _userpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has__userguid()) {
      _userguid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has__devicetoken()) {
      _devicetoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    _reconnect_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CRequestLogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CRequestLogin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string _userName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_username().data(), this->_username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NetPackage.CRequestLogin._userName");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse__userPassword;
        break;
      }

      // optional string _userPassword = 2;
      case 2: {
        if (tag == 18) {
         parse__userPassword:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__userpassword()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_userpassword().data(), this->_userpassword().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NetPackage.CRequestLogin._userPassword");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse__userGUID;
        break;
      }

      // optional string _userGUID = 3;
      case 3: {
        if (tag == 26) {
         parse__userGUID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__userguid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_userguid().data(), this->_userguid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NetPackage.CRequestLogin._userGUID");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse__deviceToken;
        break;
      }

      // optional string _deviceToken = 4;
      case 4: {
        if (tag == 34) {
         parse__deviceToken:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__devicetoken()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_devicetoken().data(), this->_devicetoken().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NetPackage.CRequestLogin._deviceToken");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse__reConnect;
        break;
      }

      // optional bool _reConnect = 5;
      case 5: {
        if (tag == 40) {
         parse__reConnect:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &_reconnect_)));
          set_has__reconnect();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CRequestLogin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CRequestLogin)
  return false;
#undef DO_
}

void CRequestLogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CRequestLogin)
  // optional string _userName = 1;
  if (has__username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_username().data(), this->_username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NetPackage.CRequestLogin._userName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->_username(), output);
  }

  // optional string _userPassword = 2;
  if (has__userpassword()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_userpassword().data(), this->_userpassword().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NetPackage.CRequestLogin._userPassword");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->_userpassword(), output);
  }

  // optional string _userGUID = 3;
  if (has__userguid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_userguid().data(), this->_userguid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NetPackage.CRequestLogin._userGUID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->_userguid(), output);
  }

  // optional string _deviceToken = 4;
  if (has__devicetoken()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_devicetoken().data(), this->_devicetoken().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NetPackage.CRequestLogin._deviceToken");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->_devicetoken(), output);
  }

  // optional bool _reConnect = 5;
  if (has__reconnect()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->_reconnect(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CRequestLogin)
}

::google::protobuf::uint8* CRequestLogin::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CRequestLogin)
  // optional string _userName = 1;
  if (has__username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_username().data(), this->_username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NetPackage.CRequestLogin._userName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->_username(), target);
  }

  // optional string _userPassword = 2;
  if (has__userpassword()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_userpassword().data(), this->_userpassword().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NetPackage.CRequestLogin._userPassword");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->_userpassword(), target);
  }

  // optional string _userGUID = 3;
  if (has__userguid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_userguid().data(), this->_userguid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NetPackage.CRequestLogin._userGUID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->_userguid(), target);
  }

  // optional string _deviceToken = 4;
  if (has__devicetoken()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_devicetoken().data(), this->_devicetoken().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NetPackage.CRequestLogin._deviceToken");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->_devicetoken(), target);
  }

  // optional bool _reConnect = 5;
  if (has__reconnect()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->_reconnect(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CRequestLogin)
  return target;
}

int CRequestLogin::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31u) {
    // optional string _userName = 1;
    if (has__username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_username());
    }

    // optional string _userPassword = 2;
    if (has__userpassword()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_userpassword());
    }

    // optional string _userGUID = 3;
    if (has__userguid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_userguid());
    }

    // optional string _deviceToken = 4;
    if (has__devicetoken()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_devicetoken());
    }

    // optional bool _reConnect = 5;
    if (has__reconnect()) {
      total_size += 1 + 1;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CRequestLogin::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CRequestLogin* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CRequestLogin>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CRequestLogin::MergeFrom(const CRequestLogin& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has__username()) {
      set_has__username();
      _username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._username_);
    }
    if (from.has__userpassword()) {
      set_has__userpassword();
      _userpassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._userpassword_);
    }
    if (from.has__userguid()) {
      set_has__userguid();
      _userguid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._userguid_);
    }
    if (from.has__devicetoken()) {
      set_has__devicetoken();
      _devicetoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._devicetoken_);
    }
    if (from.has__reconnect()) {
      set__reconnect(from._reconnect());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CRequestLogin::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CRequestLogin::CopyFrom(const CRequestLogin& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CRequestLogin::IsInitialized() const {

  return true;
}

void CRequestLogin::Swap(CRequestLogin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CRequestLogin::InternalSwap(CRequestLogin* other) {
  _username_.Swap(&other->_username_);
  _userpassword_.Swap(&other->_userpassword_);
  _userguid_.Swap(&other->_userguid_);
  _devicetoken_.Swap(&other->_devicetoken_);
  std::swap(_reconnect_, other->_reconnect_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CRequestLogin::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CRequestLogin_descriptor_;
  metadata.reflection = CRequestLogin_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CRequestLogin

// optional string _userName = 1;
bool CRequestLogin::has__username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CRequestLogin::set_has__username() {
  _has_bits_[0] |= 0x00000001u;
}
void CRequestLogin::clear_has__username() {
  _has_bits_[0] &= ~0x00000001u;
}
void CRequestLogin::clear__username() {
  _username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__username();
}
 const ::std::string& CRequestLogin::_username() const {
  // @@protoc_insertion_point(field_get:NetPackage.CRequestLogin._userName)
  return _username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CRequestLogin::set__username(const ::std::string& value) {
  set_has__username();
  _username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetPackage.CRequestLogin._userName)
}
 void CRequestLogin::set__username(const char* value) {
  set_has__username();
  _username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetPackage.CRequestLogin._userName)
}
 void CRequestLogin::set__username(const char* value, size_t size) {
  set_has__username();
  _username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetPackage.CRequestLogin._userName)
}
 ::std::string* CRequestLogin::mutable__username() {
  set_has__username();
  // @@protoc_insertion_point(field_mutable:NetPackage.CRequestLogin._userName)
  return _username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CRequestLogin::release__username() {
  clear_has__username();
  return _username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CRequestLogin::set_allocated__username(::std::string* _username) {
  if (_username != NULL) {
    set_has__username();
  } else {
    clear_has__username();
  }
  _username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _username);
  // @@protoc_insertion_point(field_set_allocated:NetPackage.CRequestLogin._userName)
}

// optional string _userPassword = 2;
bool CRequestLogin::has__userpassword() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CRequestLogin::set_has__userpassword() {
  _has_bits_[0] |= 0x00000002u;
}
void CRequestLogin::clear_has__userpassword() {
  _has_bits_[0] &= ~0x00000002u;
}
void CRequestLogin::clear__userpassword() {
  _userpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__userpassword();
}
 const ::std::string& CRequestLogin::_userpassword() const {
  // @@protoc_insertion_point(field_get:NetPackage.CRequestLogin._userPassword)
  return _userpassword_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CRequestLogin::set__userpassword(const ::std::string& value) {
  set_has__userpassword();
  _userpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetPackage.CRequestLogin._userPassword)
}
 void CRequestLogin::set__userpassword(const char* value) {
  set_has__userpassword();
  _userpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetPackage.CRequestLogin._userPassword)
}
 void CRequestLogin::set__userpassword(const char* value, size_t size) {
  set_has__userpassword();
  _userpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetPackage.CRequestLogin._userPassword)
}
 ::std::string* CRequestLogin::mutable__userpassword() {
  set_has__userpassword();
  // @@protoc_insertion_point(field_mutable:NetPackage.CRequestLogin._userPassword)
  return _userpassword_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CRequestLogin::release__userpassword() {
  clear_has__userpassword();
  return _userpassword_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CRequestLogin::set_allocated__userpassword(::std::string* _userpassword) {
  if (_userpassword != NULL) {
    set_has__userpassword();
  } else {
    clear_has__userpassword();
  }
  _userpassword_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _userpassword);
  // @@protoc_insertion_point(field_set_allocated:NetPackage.CRequestLogin._userPassword)
}

// optional string _userGUID = 3;
bool CRequestLogin::has__userguid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CRequestLogin::set_has__userguid() {
  _has_bits_[0] |= 0x00000004u;
}
void CRequestLogin::clear_has__userguid() {
  _has_bits_[0] &= ~0x00000004u;
}
void CRequestLogin::clear__userguid() {
  _userguid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__userguid();
}
 const ::std::string& CRequestLogin::_userguid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CRequestLogin._userGUID)
  return _userguid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CRequestLogin::set__userguid(const ::std::string& value) {
  set_has__userguid();
  _userguid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetPackage.CRequestLogin._userGUID)
}
 void CRequestLogin::set__userguid(const char* value) {
  set_has__userguid();
  _userguid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetPackage.CRequestLogin._userGUID)
}
 void CRequestLogin::set__userguid(const char* value, size_t size) {
  set_has__userguid();
  _userguid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetPackage.CRequestLogin._userGUID)
}
 ::std::string* CRequestLogin::mutable__userguid() {
  set_has__userguid();
  // @@protoc_insertion_point(field_mutable:NetPackage.CRequestLogin._userGUID)
  return _userguid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CRequestLogin::release__userguid() {
  clear_has__userguid();
  return _userguid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CRequestLogin::set_allocated__userguid(::std::string* _userguid) {
  if (_userguid != NULL) {
    set_has__userguid();
  } else {
    clear_has__userguid();
  }
  _userguid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _userguid);
  // @@protoc_insertion_point(field_set_allocated:NetPackage.CRequestLogin._userGUID)
}

// optional string _deviceToken = 4;
bool CRequestLogin::has__devicetoken() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CRequestLogin::set_has__devicetoken() {
  _has_bits_[0] |= 0x00000008u;
}
void CRequestLogin::clear_has__devicetoken() {
  _has_bits_[0] &= ~0x00000008u;
}
void CRequestLogin::clear__devicetoken() {
  _devicetoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__devicetoken();
}
 const ::std::string& CRequestLogin::_devicetoken() const {
  // @@protoc_insertion_point(field_get:NetPackage.CRequestLogin._deviceToken)
  return _devicetoken_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CRequestLogin::set__devicetoken(const ::std::string& value) {
  set_has__devicetoken();
  _devicetoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetPackage.CRequestLogin._deviceToken)
}
 void CRequestLogin::set__devicetoken(const char* value) {
  set_has__devicetoken();
  _devicetoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetPackage.CRequestLogin._deviceToken)
}
 void CRequestLogin::set__devicetoken(const char* value, size_t size) {
  set_has__devicetoken();
  _devicetoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetPackage.CRequestLogin._deviceToken)
}
 ::std::string* CRequestLogin::mutable__devicetoken() {
  set_has__devicetoken();
  // @@protoc_insertion_point(field_mutable:NetPackage.CRequestLogin._deviceToken)
  return _devicetoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CRequestLogin::release__devicetoken() {
  clear_has__devicetoken();
  return _devicetoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CRequestLogin::set_allocated__devicetoken(::std::string* _devicetoken) {
  if (_devicetoken != NULL) {
    set_has__devicetoken();
  } else {
    clear_has__devicetoken();
  }
  _devicetoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _devicetoken);
  // @@protoc_insertion_point(field_set_allocated:NetPackage.CRequestLogin._deviceToken)
}

// optional bool _reConnect = 5;
bool CRequestLogin::has__reconnect() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CRequestLogin::set_has__reconnect() {
  _has_bits_[0] |= 0x00000010u;
}
void CRequestLogin::clear_has__reconnect() {
  _has_bits_[0] &= ~0x00000010u;
}
void CRequestLogin::clear__reconnect() {
  _reconnect_ = false;
  clear_has__reconnect();
}
 bool CRequestLogin::_reconnect() const {
  // @@protoc_insertion_point(field_get:NetPackage.CRequestLogin._reConnect)
  return _reconnect_;
}
 void CRequestLogin::set__reconnect(bool value) {
  set_has__reconnect();
  _reconnect_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CRequestLogin._reConnect)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CRequestLoginRet::kUserNameFieldNumber;
const int CRequestLoginRet::kUserGUIDFieldNumber;
const int CRequestLoginRet::kFlagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CRequestLoginRet::CRequestLoginRet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CRequestLoginRet)
}

void CRequestLoginRet::InitAsDefaultInstance() {
}

CRequestLoginRet::CRequestLoginRet(const CRequestLoginRet& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CRequestLoginRet)
}

void CRequestLoginRet::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _userguid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _flag_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CRequestLoginRet::~CRequestLoginRet() {
  // @@protoc_insertion_point(destructor:NetPackage.CRequestLoginRet)
  SharedDtor();
}

void CRequestLoginRet::SharedDtor() {
  _username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _userguid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CRequestLoginRet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CRequestLoginRet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CRequestLoginRet_descriptor_;
}

const CRequestLoginRet& CRequestLoginRet::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CRequestLoginRet* CRequestLoginRet::default_instance_ = NULL;

CRequestLoginRet* CRequestLoginRet::New(::google::protobuf::Arena* arena) const {
  CRequestLoginRet* n = new CRequestLoginRet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CRequestLoginRet::Clear() {
  if (_has_bits_[0 / 32] & 7u) {
    if (has__username()) {
      _username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has__userguid()) {
      _userguid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    _flag_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CRequestLoginRet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CRequestLoginRet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string _userName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_username().data(), this->_username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NetPackage.CRequestLoginRet._userName");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse__userGUID;
        break;
      }

      // optional string _userGUID = 2;
      case 2: {
        if (tag == 18) {
         parse__userGUID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__userguid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_userguid().data(), this->_userguid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NetPackage.CRequestLoginRet._userGUID");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse__flag;
        break;
      }

      // optional int32 _flag = 3;
      case 3: {
        if (tag == 24) {
         parse__flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_flag_)));
          set_has__flag();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CRequestLoginRet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CRequestLoginRet)
  return false;
#undef DO_
}

void CRequestLoginRet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CRequestLoginRet)
  // optional string _userName = 1;
  if (has__username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_username().data(), this->_username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NetPackage.CRequestLoginRet._userName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->_username(), output);
  }

  // optional string _userGUID = 2;
  if (has__userguid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_userguid().data(), this->_userguid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NetPackage.CRequestLoginRet._userGUID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->_userguid(), output);
  }

  // optional int32 _flag = 3;
  if (has__flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->_flag(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CRequestLoginRet)
}

::google::protobuf::uint8* CRequestLoginRet::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CRequestLoginRet)
  // optional string _userName = 1;
  if (has__username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_username().data(), this->_username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NetPackage.CRequestLoginRet._userName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->_username(), target);
  }

  // optional string _userGUID = 2;
  if (has__userguid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_userguid().data(), this->_userguid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NetPackage.CRequestLoginRet._userGUID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->_userguid(), target);
  }

  // optional int32 _flag = 3;
  if (has__flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->_flag(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CRequestLoginRet)
  return target;
}

int CRequestLoginRet::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional string _userName = 1;
    if (has__username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_username());
    }

    // optional string _userGUID = 2;
    if (has__userguid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_userguid());
    }

    // optional int32 _flag = 3;
    if (has__flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->_flag());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CRequestLoginRet::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CRequestLoginRet* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CRequestLoginRet>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CRequestLoginRet::MergeFrom(const CRequestLoginRet& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has__username()) {
      set_has__username();
      _username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._username_);
    }
    if (from.has__userguid()) {
      set_has__userguid();
      _userguid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._userguid_);
    }
    if (from.has__flag()) {
      set__flag(from._flag());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CRequestLoginRet::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CRequestLoginRet::CopyFrom(const CRequestLoginRet& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CRequestLoginRet::IsInitialized() const {

  return true;
}

void CRequestLoginRet::Swap(CRequestLoginRet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CRequestLoginRet::InternalSwap(CRequestLoginRet* other) {
  _username_.Swap(&other->_username_);
  _userguid_.Swap(&other->_userguid_);
  std::swap(_flag_, other->_flag_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CRequestLoginRet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CRequestLoginRet_descriptor_;
  metadata.reflection = CRequestLoginRet_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CRequestLoginRet

// optional string _userName = 1;
bool CRequestLoginRet::has__username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CRequestLoginRet::set_has__username() {
  _has_bits_[0] |= 0x00000001u;
}
void CRequestLoginRet::clear_has__username() {
  _has_bits_[0] &= ~0x00000001u;
}
void CRequestLoginRet::clear__username() {
  _username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__username();
}
 const ::std::string& CRequestLoginRet::_username() const {
  // @@protoc_insertion_point(field_get:NetPackage.CRequestLoginRet._userName)
  return _username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CRequestLoginRet::set__username(const ::std::string& value) {
  set_has__username();
  _username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetPackage.CRequestLoginRet._userName)
}
 void CRequestLoginRet::set__username(const char* value) {
  set_has__username();
  _username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetPackage.CRequestLoginRet._userName)
}
 void CRequestLoginRet::set__username(const char* value, size_t size) {
  set_has__username();
  _username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetPackage.CRequestLoginRet._userName)
}
 ::std::string* CRequestLoginRet::mutable__username() {
  set_has__username();
  // @@protoc_insertion_point(field_mutable:NetPackage.CRequestLoginRet._userName)
  return _username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CRequestLoginRet::release__username() {
  clear_has__username();
  return _username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CRequestLoginRet::set_allocated__username(::std::string* _username) {
  if (_username != NULL) {
    set_has__username();
  } else {
    clear_has__username();
  }
  _username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _username);
  // @@protoc_insertion_point(field_set_allocated:NetPackage.CRequestLoginRet._userName)
}

// optional string _userGUID = 2;
bool CRequestLoginRet::has__userguid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CRequestLoginRet::set_has__userguid() {
  _has_bits_[0] |= 0x00000002u;
}
void CRequestLoginRet::clear_has__userguid() {
  _has_bits_[0] &= ~0x00000002u;
}
void CRequestLoginRet::clear__userguid() {
  _userguid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__userguid();
}
 const ::std::string& CRequestLoginRet::_userguid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CRequestLoginRet._userGUID)
  return _userguid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CRequestLoginRet::set__userguid(const ::std::string& value) {
  set_has__userguid();
  _userguid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetPackage.CRequestLoginRet._userGUID)
}
 void CRequestLoginRet::set__userguid(const char* value) {
  set_has__userguid();
  _userguid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetPackage.CRequestLoginRet._userGUID)
}
 void CRequestLoginRet::set__userguid(const char* value, size_t size) {
  set_has__userguid();
  _userguid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetPackage.CRequestLoginRet._userGUID)
}
 ::std::string* CRequestLoginRet::mutable__userguid() {
  set_has__userguid();
  // @@protoc_insertion_point(field_mutable:NetPackage.CRequestLoginRet._userGUID)
  return _userguid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CRequestLoginRet::release__userguid() {
  clear_has__userguid();
  return _userguid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CRequestLoginRet::set_allocated__userguid(::std::string* _userguid) {
  if (_userguid != NULL) {
    set_has__userguid();
  } else {
    clear_has__userguid();
  }
  _userguid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _userguid);
  // @@protoc_insertion_point(field_set_allocated:NetPackage.CRequestLoginRet._userGUID)
}

// optional int32 _flag = 3;
bool CRequestLoginRet::has__flag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CRequestLoginRet::set_has__flag() {
  _has_bits_[0] |= 0x00000004u;
}
void CRequestLoginRet::clear_has__flag() {
  _has_bits_[0] &= ~0x00000004u;
}
void CRequestLoginRet::clear__flag() {
  _flag_ = 0;
  clear_has__flag();
}
 ::google::protobuf::int32 CRequestLoginRet::_flag() const {
  // @@protoc_insertion_point(field_get:NetPackage.CRequestLoginRet._flag)
  return _flag_;
}
 void CRequestLoginRet::set__flag(::google::protobuf::int32 value) {
  set_has__flag();
  _flag_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CRequestLoginRet._flag)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CRequestPing::CRequestPing()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CRequestPing)
}

void CRequestPing::InitAsDefaultInstance() {
}

CRequestPing::CRequestPing(const CRequestPing& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CRequestPing)
}

void CRequestPing::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CRequestPing::~CRequestPing() {
  // @@protoc_insertion_point(destructor:NetPackage.CRequestPing)
  SharedDtor();
}

void CRequestPing::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CRequestPing::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CRequestPing::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CRequestPing_descriptor_;
}

const CRequestPing& CRequestPing::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CRequestPing* CRequestPing::default_instance_ = NULL;

CRequestPing* CRequestPing::New(::google::protobuf::Arena* arena) const {
  CRequestPing* n = new CRequestPing;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CRequestPing::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CRequestPing::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CRequestPing)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CRequestPing)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CRequestPing)
  return false;
#undef DO_
}

void CRequestPing::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CRequestPing)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CRequestPing)
}

::google::protobuf::uint8* CRequestPing::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CRequestPing)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CRequestPing)
  return target;
}

int CRequestPing::ByteSize() const {
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CRequestPing::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CRequestPing* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CRequestPing>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CRequestPing::MergeFrom(const CRequestPing& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CRequestPing::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CRequestPing::CopyFrom(const CRequestPing& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CRequestPing::IsInitialized() const {

  return true;
}

void CRequestPing::Swap(CRequestPing* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CRequestPing::InternalSwap(CRequestPing* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CRequestPing::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CRequestPing_descriptor_;
  metadata.reflection = CRequestPing_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CRequestPing

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGSNotifyRoleBaseInfo::kMUn32ObjIDFieldNumber;
const int CGSNotifyRoleBaseInfo::kMN32RoleNickNameFieldNumber;
const int CGSNotifyRoleBaseInfo::kMN32CareerIDFieldNumber;
const int CGSNotifyRoleBaseInfo::kMBGenderFieldNumber;
const int CGSNotifyRoleBaseInfo::kMUn32CoatTypeIDFieldNumber;
const int CGSNotifyRoleBaseInfo::kMUn32LegGuardIdFieldNumber;
const int CGSNotifyRoleBaseInfo::kMUn32ShoeIdFieldNumber;
const int CGSNotifyRoleBaseInfo::kMUn32NecklaceIdFieldNumber;
const int CGSNotifyRoleBaseInfo::kMUn32RingIdFieldNumber;
const int CGSNotifyRoleBaseInfo::kMUn32WeaponIdFieldNumber;
const int CGSNotifyRoleBaseInfo::kMUn32LevelFieldNumber;
const int CGSNotifyRoleBaseInfo::kMUn32ExpFieldNumber;
const int CGSNotifyRoleBaseInfo::kMUn32CurHPFieldNumber;
const int CGSNotifyRoleBaseInfo::kMUn32CurMPFieldNumber;
const int CGSNotifyRoleBaseInfo::kMUn32CurHPVesselFieldNumber;
const int CGSNotifyRoleBaseInfo::kMUn32CurMPVesselFieldNumber;
const int CGSNotifyRoleBaseInfo::kMUn32MaxHPFieldNumber;
const int CGSNotifyRoleBaseInfo::kMUn32MaxMPFieldNumber;
const int CGSNotifyRoleBaseInfo::kMUn32MaxHPVesselFieldNumber;
const int CGSNotifyRoleBaseInfo::kMUn32MaxMPVesselFieldNumber;
const int CGSNotifyRoleBaseInfo::kMUn32MaxPackagesFieldNumber;
const int CGSNotifyRoleBaseInfo::kWingIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGSNotifyRoleBaseInfo::CGSNotifyRoleBaseInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGSNotifyRoleBaseInfo)
}

void CGSNotifyRoleBaseInfo::InitAsDefaultInstance() {
}

CGSNotifyRoleBaseInfo::CGSNotifyRoleBaseInfo(const CGSNotifyRoleBaseInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGSNotifyRoleBaseInfo)
}

void CGSNotifyRoleBaseInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  m_un32objid_ = 0u;
  m_n32rolenickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  m_n32careerid_ = 0;
  m_bgender_ = false;
  m_un32coattypeid_ = 0u;
  m_un32legguardid_ = 0u;
  m_un32shoeid_ = 0u;
  m_un32necklaceid_ = 0u;
  m_un32ringid_ = 0u;
  m_un32weaponid_ = 0u;
  m_un32level_ = 0u;
  m_un32exp_ = 0u;
  m_un32curhp_ = 0u;
  m_un32curmp_ = 0u;
  m_un32curhpvessel_ = 0u;
  m_un32curmpvessel_ = 0u;
  m_un32maxhp_ = 0u;
  m_un32maxmp_ = 0u;
  m_un32maxhpvessel_ = 0u;
  m_un32maxmpvessel_ = 0u;
  m_un32max_packages_ = 0u;
  wingid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGSNotifyRoleBaseInfo::~CGSNotifyRoleBaseInfo() {
  // @@protoc_insertion_point(destructor:NetPackage.CGSNotifyRoleBaseInfo)
  SharedDtor();
}

void CGSNotifyRoleBaseInfo::SharedDtor() {
  m_n32rolenickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CGSNotifyRoleBaseInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGSNotifyRoleBaseInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGSNotifyRoleBaseInfo_descriptor_;
}

const CGSNotifyRoleBaseInfo& CGSNotifyRoleBaseInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGSNotifyRoleBaseInfo* CGSNotifyRoleBaseInfo::default_instance_ = NULL;

CGSNotifyRoleBaseInfo* CGSNotifyRoleBaseInfo::New(::google::protobuf::Arena* arena) const {
  CGSNotifyRoleBaseInfo* n = new CGSNotifyRoleBaseInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGSNotifyRoleBaseInfo::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CGSNotifyRoleBaseInfo*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(m_un32objid_, m_un32necklaceid_);
    if (has_m_n32rolenickname()) {
      m_n32rolenickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 65280u) {
    ZR_(m_un32ringid_, m_un32curmpvessel_);
  }
  if (_has_bits_[16 / 32] & 4128768u) {
    ZR_(m_un32maxhp_, wingid_);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGSNotifyRoleBaseInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGSNotifyRoleBaseInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 m_un32ObjID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32objid_)));
          set_has_m_un32objid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_m_n32RoleNickName;
        break;
      }

      // optional string m_n32RoleNickName = 2;
      case 2: {
        if (tag == 18) {
         parse_m_n32RoleNickName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_n32rolenickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->m_n32rolenickname().data(), this->m_n32rolenickname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NetPackage.CGSNotifyRoleBaseInfo.m_n32RoleNickName");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_m_n32CareerID;
        break;
      }

      // optional int32 m_n32CareerID = 3;
      case 3: {
        if (tag == 24) {
         parse_m_n32CareerID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_n32careerid_)));
          set_has_m_n32careerid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_m_bGender;
        break;
      }

      // optional bool m_bGender = 4;
      case 4: {
        if (tag == 32) {
         parse_m_bGender:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &m_bgender_)));
          set_has_m_bgender();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_m_un32CoatTypeID;
        break;
      }

      // optional uint32 m_un32CoatTypeID = 5;
      case 5: {
        if (tag == 40) {
         parse_m_un32CoatTypeID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32coattypeid_)));
          set_has_m_un32coattypeid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_m_un32LegGuardId;
        break;
      }

      // optional uint32 m_un32LegGuardId = 6;
      case 6: {
        if (tag == 48) {
         parse_m_un32LegGuardId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32legguardid_)));
          set_has_m_un32legguardid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_m_un32ShoeId;
        break;
      }

      // optional uint32 m_un32ShoeId = 7;
      case 7: {
        if (tag == 56) {
         parse_m_un32ShoeId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32shoeid_)));
          set_has_m_un32shoeid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_m_un32NecklaceId;
        break;
      }

      // optional uint32 m_un32NecklaceId = 8;
      case 8: {
        if (tag == 64) {
         parse_m_un32NecklaceId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32necklaceid_)));
          set_has_m_un32necklaceid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_m_un32RingId;
        break;
      }

      // optional uint32 m_un32RingId = 9;
      case 9: {
        if (tag == 72) {
         parse_m_un32RingId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32ringid_)));
          set_has_m_un32ringid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_m_un32WeaponId;
        break;
      }

      // optional uint32 m_un32WeaponId = 10;
      case 10: {
        if (tag == 80) {
         parse_m_un32WeaponId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32weaponid_)));
          set_has_m_un32weaponid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_m_un32Level;
        break;
      }

      // optional uint32 m_un32Level = 11;
      case 11: {
        if (tag == 88) {
         parse_m_un32Level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32level_)));
          set_has_m_un32level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_m_un32Exp;
        break;
      }

      // optional uint32 m_un32Exp = 12;
      case 12: {
        if (tag == 96) {
         parse_m_un32Exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32exp_)));
          set_has_m_un32exp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_m_un32CurHP;
        break;
      }

      // optional uint32 m_un32CurHP = 13;
      case 13: {
        if (tag == 104) {
         parse_m_un32CurHP:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32curhp_)));
          set_has_m_un32curhp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_m_un32CurMP;
        break;
      }

      // optional uint32 m_un32CurMP = 14;
      case 14: {
        if (tag == 112) {
         parse_m_un32CurMP:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32curmp_)));
          set_has_m_un32curmp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_m_un32CurHPVessel;
        break;
      }

      // optional uint32 m_un32CurHPVessel = 15;
      case 15: {
        if (tag == 120) {
         parse_m_un32CurHPVessel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32curhpvessel_)));
          set_has_m_un32curhpvessel();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_m_un32CurMPVessel;
        break;
      }

      // optional uint32 m_un32CurMPVessel = 16;
      case 16: {
        if (tag == 128) {
         parse_m_un32CurMPVessel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32curmpvessel_)));
          set_has_m_un32curmpvessel();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_m_un32MaxHP;
        break;
      }

      // optional uint32 m_un32MaxHP = 17;
      case 17: {
        if (tag == 136) {
         parse_m_un32MaxHP:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32maxhp_)));
          set_has_m_un32maxhp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_m_un32MaxMP;
        break;
      }

      // optional uint32 m_un32MaxMP = 18;
      case 18: {
        if (tag == 144) {
         parse_m_un32MaxMP:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32maxmp_)));
          set_has_m_un32maxmp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_m_un32MaxHPVessel;
        break;
      }

      // optional uint32 m_un32MaxHPVessel = 19;
      case 19: {
        if (tag == 152) {
         parse_m_un32MaxHPVessel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32maxhpvessel_)));
          set_has_m_un32maxhpvessel();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_m_un32MaxMPVessel;
        break;
      }

      // optional uint32 m_un32MaxMPVessel = 20;
      case 20: {
        if (tag == 160) {
         parse_m_un32MaxMPVessel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32maxmpvessel_)));
          set_has_m_un32maxmpvessel();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(168)) goto parse_m_un32Max_packages;
        break;
      }

      // optional uint32 m_un32Max_packages = 21;
      case 21: {
        if (tag == 168) {
         parse_m_un32Max_packages:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32max_packages_)));
          set_has_m_un32max_packages();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_wingID;
        break;
      }

      // optional uint32 wingID = 22;
      case 22: {
        if (tag == 176) {
         parse_wingID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wingid_)));
          set_has_wingid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGSNotifyRoleBaseInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGSNotifyRoleBaseInfo)
  return false;
#undef DO_
}

void CGSNotifyRoleBaseInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGSNotifyRoleBaseInfo)
  // optional uint32 m_un32ObjID = 1;
  if (has_m_un32objid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->m_un32objid(), output);
  }

  // optional string m_n32RoleNickName = 2;
  if (has_m_n32rolenickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->m_n32rolenickname().data(), this->m_n32rolenickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NetPackage.CGSNotifyRoleBaseInfo.m_n32RoleNickName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->m_n32rolenickname(), output);
  }

  // optional int32 m_n32CareerID = 3;
  if (has_m_n32careerid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_n32careerid(), output);
  }

  // optional bool m_bGender = 4;
  if (has_m_bgender()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->m_bgender(), output);
  }

  // optional uint32 m_un32CoatTypeID = 5;
  if (has_m_un32coattypeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->m_un32coattypeid(), output);
  }

  // optional uint32 m_un32LegGuardId = 6;
  if (has_m_un32legguardid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->m_un32legguardid(), output);
  }

  // optional uint32 m_un32ShoeId = 7;
  if (has_m_un32shoeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->m_un32shoeid(), output);
  }

  // optional uint32 m_un32NecklaceId = 8;
  if (has_m_un32necklaceid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->m_un32necklaceid(), output);
  }

  // optional uint32 m_un32RingId = 9;
  if (has_m_un32ringid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->m_un32ringid(), output);
  }

  // optional uint32 m_un32WeaponId = 10;
  if (has_m_un32weaponid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->m_un32weaponid(), output);
  }

  // optional uint32 m_un32Level = 11;
  if (has_m_un32level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->m_un32level(), output);
  }

  // optional uint32 m_un32Exp = 12;
  if (has_m_un32exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->m_un32exp(), output);
  }

  // optional uint32 m_un32CurHP = 13;
  if (has_m_un32curhp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->m_un32curhp(), output);
  }

  // optional uint32 m_un32CurMP = 14;
  if (has_m_un32curmp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->m_un32curmp(), output);
  }

  // optional uint32 m_un32CurHPVessel = 15;
  if (has_m_un32curhpvessel()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->m_un32curhpvessel(), output);
  }

  // optional uint32 m_un32CurMPVessel = 16;
  if (has_m_un32curmpvessel()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->m_un32curmpvessel(), output);
  }

  // optional uint32 m_un32MaxHP = 17;
  if (has_m_un32maxhp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->m_un32maxhp(), output);
  }

  // optional uint32 m_un32MaxMP = 18;
  if (has_m_un32maxmp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->m_un32maxmp(), output);
  }

  // optional uint32 m_un32MaxHPVessel = 19;
  if (has_m_un32maxhpvessel()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->m_un32maxhpvessel(), output);
  }

  // optional uint32 m_un32MaxMPVessel = 20;
  if (has_m_un32maxmpvessel()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(20, this->m_un32maxmpvessel(), output);
  }

  // optional uint32 m_un32Max_packages = 21;
  if (has_m_un32max_packages()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->m_un32max_packages(), output);
  }

  // optional uint32 wingID = 22;
  if (has_wingid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(22, this->wingid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGSNotifyRoleBaseInfo)
}

::google::protobuf::uint8* CGSNotifyRoleBaseInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGSNotifyRoleBaseInfo)
  // optional uint32 m_un32ObjID = 1;
  if (has_m_un32objid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->m_un32objid(), target);
  }

  // optional string m_n32RoleNickName = 2;
  if (has_m_n32rolenickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->m_n32rolenickname().data(), this->m_n32rolenickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NetPackage.CGSNotifyRoleBaseInfo.m_n32RoleNickName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->m_n32rolenickname(), target);
  }

  // optional int32 m_n32CareerID = 3;
  if (has_m_n32careerid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_n32careerid(), target);
  }

  // optional bool m_bGender = 4;
  if (has_m_bgender()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->m_bgender(), target);
  }

  // optional uint32 m_un32CoatTypeID = 5;
  if (has_m_un32coattypeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->m_un32coattypeid(), target);
  }

  // optional uint32 m_un32LegGuardId = 6;
  if (has_m_un32legguardid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->m_un32legguardid(), target);
  }

  // optional uint32 m_un32ShoeId = 7;
  if (has_m_un32shoeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->m_un32shoeid(), target);
  }

  // optional uint32 m_un32NecklaceId = 8;
  if (has_m_un32necklaceid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->m_un32necklaceid(), target);
  }

  // optional uint32 m_un32RingId = 9;
  if (has_m_un32ringid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->m_un32ringid(), target);
  }

  // optional uint32 m_un32WeaponId = 10;
  if (has_m_un32weaponid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->m_un32weaponid(), target);
  }

  // optional uint32 m_un32Level = 11;
  if (has_m_un32level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->m_un32level(), target);
  }

  // optional uint32 m_un32Exp = 12;
  if (has_m_un32exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->m_un32exp(), target);
  }

  // optional uint32 m_un32CurHP = 13;
  if (has_m_un32curhp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->m_un32curhp(), target);
  }

  // optional uint32 m_un32CurMP = 14;
  if (has_m_un32curmp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->m_un32curmp(), target);
  }

  // optional uint32 m_un32CurHPVessel = 15;
  if (has_m_un32curhpvessel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->m_un32curhpvessel(), target);
  }

  // optional uint32 m_un32CurMPVessel = 16;
  if (has_m_un32curmpvessel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->m_un32curmpvessel(), target);
  }

  // optional uint32 m_un32MaxHP = 17;
  if (has_m_un32maxhp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->m_un32maxhp(), target);
  }

  // optional uint32 m_un32MaxMP = 18;
  if (has_m_un32maxmp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->m_un32maxmp(), target);
  }

  // optional uint32 m_un32MaxHPVessel = 19;
  if (has_m_un32maxhpvessel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->m_un32maxhpvessel(), target);
  }

  // optional uint32 m_un32MaxMPVessel = 20;
  if (has_m_un32maxmpvessel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(20, this->m_un32maxmpvessel(), target);
  }

  // optional uint32 m_un32Max_packages = 21;
  if (has_m_un32max_packages()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(21, this->m_un32max_packages(), target);
  }

  // optional uint32 wingID = 22;
  if (has_wingid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(22, this->wingid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGSNotifyRoleBaseInfo)
  return target;
}

int CGSNotifyRoleBaseInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional uint32 m_un32ObjID = 1;
    if (has_m_un32objid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32objid());
    }

    // optional string m_n32RoleNickName = 2;
    if (has_m_n32rolenickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_n32rolenickname());
    }

    // optional int32 m_n32CareerID = 3;
    if (has_m_n32careerid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_n32careerid());
    }

    // optional bool m_bGender = 4;
    if (has_m_bgender()) {
      total_size += 1 + 1;
    }

    // optional uint32 m_un32CoatTypeID = 5;
    if (has_m_un32coattypeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32coattypeid());
    }

    // optional uint32 m_un32LegGuardId = 6;
    if (has_m_un32legguardid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32legguardid());
    }

    // optional uint32 m_un32ShoeId = 7;
    if (has_m_un32shoeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32shoeid());
    }

    // optional uint32 m_un32NecklaceId = 8;
    if (has_m_un32necklaceid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32necklaceid());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional uint32 m_un32RingId = 9;
    if (has_m_un32ringid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32ringid());
    }

    // optional uint32 m_un32WeaponId = 10;
    if (has_m_un32weaponid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32weaponid());
    }

    // optional uint32 m_un32Level = 11;
    if (has_m_un32level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32level());
    }

    // optional uint32 m_un32Exp = 12;
    if (has_m_un32exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32exp());
    }

    // optional uint32 m_un32CurHP = 13;
    if (has_m_un32curhp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32curhp());
    }

    // optional uint32 m_un32CurMP = 14;
    if (has_m_un32curmp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32curmp());
    }

    // optional uint32 m_un32CurHPVessel = 15;
    if (has_m_un32curhpvessel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32curhpvessel());
    }

    // optional uint32 m_un32CurMPVessel = 16;
    if (has_m_un32curmpvessel()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32curmpvessel());
    }

  }
  if (_has_bits_[16 / 32] & 4128768u) {
    // optional uint32 m_un32MaxHP = 17;
    if (has_m_un32maxhp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32maxhp());
    }

    // optional uint32 m_un32MaxMP = 18;
    if (has_m_un32maxmp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32maxmp());
    }

    // optional uint32 m_un32MaxHPVessel = 19;
    if (has_m_un32maxhpvessel()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32maxhpvessel());
    }

    // optional uint32 m_un32MaxMPVessel = 20;
    if (has_m_un32maxmpvessel()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32maxmpvessel());
    }

    // optional uint32 m_un32Max_packages = 21;
    if (has_m_un32max_packages()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32max_packages());
    }

    // optional uint32 wingID = 22;
    if (has_wingid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->wingid());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGSNotifyRoleBaseInfo::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGSNotifyRoleBaseInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGSNotifyRoleBaseInfo>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGSNotifyRoleBaseInfo::MergeFrom(const CGSNotifyRoleBaseInfo& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_un32objid()) {
      set_m_un32objid(from.m_un32objid());
    }
    if (from.has_m_n32rolenickname()) {
      set_has_m_n32rolenickname();
      m_n32rolenickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.m_n32rolenickname_);
    }
    if (from.has_m_n32careerid()) {
      set_m_n32careerid(from.m_n32careerid());
    }
    if (from.has_m_bgender()) {
      set_m_bgender(from.m_bgender());
    }
    if (from.has_m_un32coattypeid()) {
      set_m_un32coattypeid(from.m_un32coattypeid());
    }
    if (from.has_m_un32legguardid()) {
      set_m_un32legguardid(from.m_un32legguardid());
    }
    if (from.has_m_un32shoeid()) {
      set_m_un32shoeid(from.m_un32shoeid());
    }
    if (from.has_m_un32necklaceid()) {
      set_m_un32necklaceid(from.m_un32necklaceid());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_m_un32ringid()) {
      set_m_un32ringid(from.m_un32ringid());
    }
    if (from.has_m_un32weaponid()) {
      set_m_un32weaponid(from.m_un32weaponid());
    }
    if (from.has_m_un32level()) {
      set_m_un32level(from.m_un32level());
    }
    if (from.has_m_un32exp()) {
      set_m_un32exp(from.m_un32exp());
    }
    if (from.has_m_un32curhp()) {
      set_m_un32curhp(from.m_un32curhp());
    }
    if (from.has_m_un32curmp()) {
      set_m_un32curmp(from.m_un32curmp());
    }
    if (from.has_m_un32curhpvessel()) {
      set_m_un32curhpvessel(from.m_un32curhpvessel());
    }
    if (from.has_m_un32curmpvessel()) {
      set_m_un32curmpvessel(from.m_un32curmpvessel());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_m_un32maxhp()) {
      set_m_un32maxhp(from.m_un32maxhp());
    }
    if (from.has_m_un32maxmp()) {
      set_m_un32maxmp(from.m_un32maxmp());
    }
    if (from.has_m_un32maxhpvessel()) {
      set_m_un32maxhpvessel(from.m_un32maxhpvessel());
    }
    if (from.has_m_un32maxmpvessel()) {
      set_m_un32maxmpvessel(from.m_un32maxmpvessel());
    }
    if (from.has_m_un32max_packages()) {
      set_m_un32max_packages(from.m_un32max_packages());
    }
    if (from.has_wingid()) {
      set_wingid(from.wingid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGSNotifyRoleBaseInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGSNotifyRoleBaseInfo::CopyFrom(const CGSNotifyRoleBaseInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGSNotifyRoleBaseInfo::IsInitialized() const {

  return true;
}

void CGSNotifyRoleBaseInfo::Swap(CGSNotifyRoleBaseInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGSNotifyRoleBaseInfo::InternalSwap(CGSNotifyRoleBaseInfo* other) {
  std::swap(m_un32objid_, other->m_un32objid_);
  m_n32rolenickname_.Swap(&other->m_n32rolenickname_);
  std::swap(m_n32careerid_, other->m_n32careerid_);
  std::swap(m_bgender_, other->m_bgender_);
  std::swap(m_un32coattypeid_, other->m_un32coattypeid_);
  std::swap(m_un32legguardid_, other->m_un32legguardid_);
  std::swap(m_un32shoeid_, other->m_un32shoeid_);
  std::swap(m_un32necklaceid_, other->m_un32necklaceid_);
  std::swap(m_un32ringid_, other->m_un32ringid_);
  std::swap(m_un32weaponid_, other->m_un32weaponid_);
  std::swap(m_un32level_, other->m_un32level_);
  std::swap(m_un32exp_, other->m_un32exp_);
  std::swap(m_un32curhp_, other->m_un32curhp_);
  std::swap(m_un32curmp_, other->m_un32curmp_);
  std::swap(m_un32curhpvessel_, other->m_un32curhpvessel_);
  std::swap(m_un32curmpvessel_, other->m_un32curmpvessel_);
  std::swap(m_un32maxhp_, other->m_un32maxhp_);
  std::swap(m_un32maxmp_, other->m_un32maxmp_);
  std::swap(m_un32maxhpvessel_, other->m_un32maxhpvessel_);
  std::swap(m_un32maxmpvessel_, other->m_un32maxmpvessel_);
  std::swap(m_un32max_packages_, other->m_un32max_packages_);
  std::swap(wingid_, other->wingid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGSNotifyRoleBaseInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGSNotifyRoleBaseInfo_descriptor_;
  metadata.reflection = CGSNotifyRoleBaseInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGSNotifyRoleBaseInfo

// optional uint32 m_un32ObjID = 1;
bool CGSNotifyRoleBaseInfo::has_m_un32objid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGSNotifyRoleBaseInfo::set_has_m_un32objid() {
  _has_bits_[0] |= 0x00000001u;
}
void CGSNotifyRoleBaseInfo::clear_has_m_un32objid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGSNotifyRoleBaseInfo::clear_m_un32objid() {
  m_un32objid_ = 0u;
  clear_has_m_un32objid();
}
 ::google::protobuf::uint32 CGSNotifyRoleBaseInfo::m_un32objid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRoleBaseInfo.m_un32ObjID)
  return m_un32objid_;
}
 void CGSNotifyRoleBaseInfo::set_m_un32objid(::google::protobuf::uint32 value) {
  set_has_m_un32objid();
  m_un32objid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRoleBaseInfo.m_un32ObjID)
}

// optional string m_n32RoleNickName = 2;
bool CGSNotifyRoleBaseInfo::has_m_n32rolenickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CGSNotifyRoleBaseInfo::set_has_m_n32rolenickname() {
  _has_bits_[0] |= 0x00000002u;
}
void CGSNotifyRoleBaseInfo::clear_has_m_n32rolenickname() {
  _has_bits_[0] &= ~0x00000002u;
}
void CGSNotifyRoleBaseInfo::clear_m_n32rolenickname() {
  m_n32rolenickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_m_n32rolenickname();
}
 const ::std::string& CGSNotifyRoleBaseInfo::m_n32rolenickname() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRoleBaseInfo.m_n32RoleNickName)
  return m_n32rolenickname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CGSNotifyRoleBaseInfo::set_m_n32rolenickname(const ::std::string& value) {
  set_has_m_n32rolenickname();
  m_n32rolenickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRoleBaseInfo.m_n32RoleNickName)
}
 void CGSNotifyRoleBaseInfo::set_m_n32rolenickname(const char* value) {
  set_has_m_n32rolenickname();
  m_n32rolenickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetPackage.CGSNotifyRoleBaseInfo.m_n32RoleNickName)
}
 void CGSNotifyRoleBaseInfo::set_m_n32rolenickname(const char* value, size_t size) {
  set_has_m_n32rolenickname();
  m_n32rolenickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetPackage.CGSNotifyRoleBaseInfo.m_n32RoleNickName)
}
 ::std::string* CGSNotifyRoleBaseInfo::mutable_m_n32rolenickname() {
  set_has_m_n32rolenickname();
  // @@protoc_insertion_point(field_mutable:NetPackage.CGSNotifyRoleBaseInfo.m_n32RoleNickName)
  return m_n32rolenickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CGSNotifyRoleBaseInfo::release_m_n32rolenickname() {
  clear_has_m_n32rolenickname();
  return m_n32rolenickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CGSNotifyRoleBaseInfo::set_allocated_m_n32rolenickname(::std::string* m_n32rolenickname) {
  if (m_n32rolenickname != NULL) {
    set_has_m_n32rolenickname();
  } else {
    clear_has_m_n32rolenickname();
  }
  m_n32rolenickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), m_n32rolenickname);
  // @@protoc_insertion_point(field_set_allocated:NetPackage.CGSNotifyRoleBaseInfo.m_n32RoleNickName)
}

// optional int32 m_n32CareerID = 3;
bool CGSNotifyRoleBaseInfo::has_m_n32careerid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CGSNotifyRoleBaseInfo::set_has_m_n32careerid() {
  _has_bits_[0] |= 0x00000004u;
}
void CGSNotifyRoleBaseInfo::clear_has_m_n32careerid() {
  _has_bits_[0] &= ~0x00000004u;
}
void CGSNotifyRoleBaseInfo::clear_m_n32careerid() {
  m_n32careerid_ = 0;
  clear_has_m_n32careerid();
}
 ::google::protobuf::int32 CGSNotifyRoleBaseInfo::m_n32careerid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRoleBaseInfo.m_n32CareerID)
  return m_n32careerid_;
}
 void CGSNotifyRoleBaseInfo::set_m_n32careerid(::google::protobuf::int32 value) {
  set_has_m_n32careerid();
  m_n32careerid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRoleBaseInfo.m_n32CareerID)
}

// optional bool m_bGender = 4;
bool CGSNotifyRoleBaseInfo::has_m_bgender() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CGSNotifyRoleBaseInfo::set_has_m_bgender() {
  _has_bits_[0] |= 0x00000008u;
}
void CGSNotifyRoleBaseInfo::clear_has_m_bgender() {
  _has_bits_[0] &= ~0x00000008u;
}
void CGSNotifyRoleBaseInfo::clear_m_bgender() {
  m_bgender_ = false;
  clear_has_m_bgender();
}
 bool CGSNotifyRoleBaseInfo::m_bgender() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRoleBaseInfo.m_bGender)
  return m_bgender_;
}
 void CGSNotifyRoleBaseInfo::set_m_bgender(bool value) {
  set_has_m_bgender();
  m_bgender_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRoleBaseInfo.m_bGender)
}

// optional uint32 m_un32CoatTypeID = 5;
bool CGSNotifyRoleBaseInfo::has_m_un32coattypeid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CGSNotifyRoleBaseInfo::set_has_m_un32coattypeid() {
  _has_bits_[0] |= 0x00000010u;
}
void CGSNotifyRoleBaseInfo::clear_has_m_un32coattypeid() {
  _has_bits_[0] &= ~0x00000010u;
}
void CGSNotifyRoleBaseInfo::clear_m_un32coattypeid() {
  m_un32coattypeid_ = 0u;
  clear_has_m_un32coattypeid();
}
 ::google::protobuf::uint32 CGSNotifyRoleBaseInfo::m_un32coattypeid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRoleBaseInfo.m_un32CoatTypeID)
  return m_un32coattypeid_;
}
 void CGSNotifyRoleBaseInfo::set_m_un32coattypeid(::google::protobuf::uint32 value) {
  set_has_m_un32coattypeid();
  m_un32coattypeid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRoleBaseInfo.m_un32CoatTypeID)
}

// optional uint32 m_un32LegGuardId = 6;
bool CGSNotifyRoleBaseInfo::has_m_un32legguardid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CGSNotifyRoleBaseInfo::set_has_m_un32legguardid() {
  _has_bits_[0] |= 0x00000020u;
}
void CGSNotifyRoleBaseInfo::clear_has_m_un32legguardid() {
  _has_bits_[0] &= ~0x00000020u;
}
void CGSNotifyRoleBaseInfo::clear_m_un32legguardid() {
  m_un32legguardid_ = 0u;
  clear_has_m_un32legguardid();
}
 ::google::protobuf::uint32 CGSNotifyRoleBaseInfo::m_un32legguardid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRoleBaseInfo.m_un32LegGuardId)
  return m_un32legguardid_;
}
 void CGSNotifyRoleBaseInfo::set_m_un32legguardid(::google::protobuf::uint32 value) {
  set_has_m_un32legguardid();
  m_un32legguardid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRoleBaseInfo.m_un32LegGuardId)
}

// optional uint32 m_un32ShoeId = 7;
bool CGSNotifyRoleBaseInfo::has_m_un32shoeid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CGSNotifyRoleBaseInfo::set_has_m_un32shoeid() {
  _has_bits_[0] |= 0x00000040u;
}
void CGSNotifyRoleBaseInfo::clear_has_m_un32shoeid() {
  _has_bits_[0] &= ~0x00000040u;
}
void CGSNotifyRoleBaseInfo::clear_m_un32shoeid() {
  m_un32shoeid_ = 0u;
  clear_has_m_un32shoeid();
}
 ::google::protobuf::uint32 CGSNotifyRoleBaseInfo::m_un32shoeid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRoleBaseInfo.m_un32ShoeId)
  return m_un32shoeid_;
}
 void CGSNotifyRoleBaseInfo::set_m_un32shoeid(::google::protobuf::uint32 value) {
  set_has_m_un32shoeid();
  m_un32shoeid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRoleBaseInfo.m_un32ShoeId)
}

// optional uint32 m_un32NecklaceId = 8;
bool CGSNotifyRoleBaseInfo::has_m_un32necklaceid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CGSNotifyRoleBaseInfo::set_has_m_un32necklaceid() {
  _has_bits_[0] |= 0x00000080u;
}
void CGSNotifyRoleBaseInfo::clear_has_m_un32necklaceid() {
  _has_bits_[0] &= ~0x00000080u;
}
void CGSNotifyRoleBaseInfo::clear_m_un32necklaceid() {
  m_un32necklaceid_ = 0u;
  clear_has_m_un32necklaceid();
}
 ::google::protobuf::uint32 CGSNotifyRoleBaseInfo::m_un32necklaceid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRoleBaseInfo.m_un32NecklaceId)
  return m_un32necklaceid_;
}
 void CGSNotifyRoleBaseInfo::set_m_un32necklaceid(::google::protobuf::uint32 value) {
  set_has_m_un32necklaceid();
  m_un32necklaceid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRoleBaseInfo.m_un32NecklaceId)
}

// optional uint32 m_un32RingId = 9;
bool CGSNotifyRoleBaseInfo::has_m_un32ringid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void CGSNotifyRoleBaseInfo::set_has_m_un32ringid() {
  _has_bits_[0] |= 0x00000100u;
}
void CGSNotifyRoleBaseInfo::clear_has_m_un32ringid() {
  _has_bits_[0] &= ~0x00000100u;
}
void CGSNotifyRoleBaseInfo::clear_m_un32ringid() {
  m_un32ringid_ = 0u;
  clear_has_m_un32ringid();
}
 ::google::protobuf::uint32 CGSNotifyRoleBaseInfo::m_un32ringid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRoleBaseInfo.m_un32RingId)
  return m_un32ringid_;
}
 void CGSNotifyRoleBaseInfo::set_m_un32ringid(::google::protobuf::uint32 value) {
  set_has_m_un32ringid();
  m_un32ringid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRoleBaseInfo.m_un32RingId)
}

// optional uint32 m_un32WeaponId = 10;
bool CGSNotifyRoleBaseInfo::has_m_un32weaponid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void CGSNotifyRoleBaseInfo::set_has_m_un32weaponid() {
  _has_bits_[0] |= 0x00000200u;
}
void CGSNotifyRoleBaseInfo::clear_has_m_un32weaponid() {
  _has_bits_[0] &= ~0x00000200u;
}
void CGSNotifyRoleBaseInfo::clear_m_un32weaponid() {
  m_un32weaponid_ = 0u;
  clear_has_m_un32weaponid();
}
 ::google::protobuf::uint32 CGSNotifyRoleBaseInfo::m_un32weaponid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRoleBaseInfo.m_un32WeaponId)
  return m_un32weaponid_;
}
 void CGSNotifyRoleBaseInfo::set_m_un32weaponid(::google::protobuf::uint32 value) {
  set_has_m_un32weaponid();
  m_un32weaponid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRoleBaseInfo.m_un32WeaponId)
}

// optional uint32 m_un32Level = 11;
bool CGSNotifyRoleBaseInfo::has_m_un32level() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void CGSNotifyRoleBaseInfo::set_has_m_un32level() {
  _has_bits_[0] |= 0x00000400u;
}
void CGSNotifyRoleBaseInfo::clear_has_m_un32level() {
  _has_bits_[0] &= ~0x00000400u;
}
void CGSNotifyRoleBaseInfo::clear_m_un32level() {
  m_un32level_ = 0u;
  clear_has_m_un32level();
}
 ::google::protobuf::uint32 CGSNotifyRoleBaseInfo::m_un32level() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRoleBaseInfo.m_un32Level)
  return m_un32level_;
}
 void CGSNotifyRoleBaseInfo::set_m_un32level(::google::protobuf::uint32 value) {
  set_has_m_un32level();
  m_un32level_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRoleBaseInfo.m_un32Level)
}

// optional uint32 m_un32Exp = 12;
bool CGSNotifyRoleBaseInfo::has_m_un32exp() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void CGSNotifyRoleBaseInfo::set_has_m_un32exp() {
  _has_bits_[0] |= 0x00000800u;
}
void CGSNotifyRoleBaseInfo::clear_has_m_un32exp() {
  _has_bits_[0] &= ~0x00000800u;
}
void CGSNotifyRoleBaseInfo::clear_m_un32exp() {
  m_un32exp_ = 0u;
  clear_has_m_un32exp();
}
 ::google::protobuf::uint32 CGSNotifyRoleBaseInfo::m_un32exp() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRoleBaseInfo.m_un32Exp)
  return m_un32exp_;
}
 void CGSNotifyRoleBaseInfo::set_m_un32exp(::google::protobuf::uint32 value) {
  set_has_m_un32exp();
  m_un32exp_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRoleBaseInfo.m_un32Exp)
}

// optional uint32 m_un32CurHP = 13;
bool CGSNotifyRoleBaseInfo::has_m_un32curhp() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void CGSNotifyRoleBaseInfo::set_has_m_un32curhp() {
  _has_bits_[0] |= 0x00001000u;
}
void CGSNotifyRoleBaseInfo::clear_has_m_un32curhp() {
  _has_bits_[0] &= ~0x00001000u;
}
void CGSNotifyRoleBaseInfo::clear_m_un32curhp() {
  m_un32curhp_ = 0u;
  clear_has_m_un32curhp();
}
 ::google::protobuf::uint32 CGSNotifyRoleBaseInfo::m_un32curhp() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRoleBaseInfo.m_un32CurHP)
  return m_un32curhp_;
}
 void CGSNotifyRoleBaseInfo::set_m_un32curhp(::google::protobuf::uint32 value) {
  set_has_m_un32curhp();
  m_un32curhp_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRoleBaseInfo.m_un32CurHP)
}

// optional uint32 m_un32CurMP = 14;
bool CGSNotifyRoleBaseInfo::has_m_un32curmp() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void CGSNotifyRoleBaseInfo::set_has_m_un32curmp() {
  _has_bits_[0] |= 0x00002000u;
}
void CGSNotifyRoleBaseInfo::clear_has_m_un32curmp() {
  _has_bits_[0] &= ~0x00002000u;
}
void CGSNotifyRoleBaseInfo::clear_m_un32curmp() {
  m_un32curmp_ = 0u;
  clear_has_m_un32curmp();
}
 ::google::protobuf::uint32 CGSNotifyRoleBaseInfo::m_un32curmp() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRoleBaseInfo.m_un32CurMP)
  return m_un32curmp_;
}
 void CGSNotifyRoleBaseInfo::set_m_un32curmp(::google::protobuf::uint32 value) {
  set_has_m_un32curmp();
  m_un32curmp_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRoleBaseInfo.m_un32CurMP)
}

// optional uint32 m_un32CurHPVessel = 15;
bool CGSNotifyRoleBaseInfo::has_m_un32curhpvessel() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void CGSNotifyRoleBaseInfo::set_has_m_un32curhpvessel() {
  _has_bits_[0] |= 0x00004000u;
}
void CGSNotifyRoleBaseInfo::clear_has_m_un32curhpvessel() {
  _has_bits_[0] &= ~0x00004000u;
}
void CGSNotifyRoleBaseInfo::clear_m_un32curhpvessel() {
  m_un32curhpvessel_ = 0u;
  clear_has_m_un32curhpvessel();
}
 ::google::protobuf::uint32 CGSNotifyRoleBaseInfo::m_un32curhpvessel() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRoleBaseInfo.m_un32CurHPVessel)
  return m_un32curhpvessel_;
}
 void CGSNotifyRoleBaseInfo::set_m_un32curhpvessel(::google::protobuf::uint32 value) {
  set_has_m_un32curhpvessel();
  m_un32curhpvessel_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRoleBaseInfo.m_un32CurHPVessel)
}

// optional uint32 m_un32CurMPVessel = 16;
bool CGSNotifyRoleBaseInfo::has_m_un32curmpvessel() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void CGSNotifyRoleBaseInfo::set_has_m_un32curmpvessel() {
  _has_bits_[0] |= 0x00008000u;
}
void CGSNotifyRoleBaseInfo::clear_has_m_un32curmpvessel() {
  _has_bits_[0] &= ~0x00008000u;
}
void CGSNotifyRoleBaseInfo::clear_m_un32curmpvessel() {
  m_un32curmpvessel_ = 0u;
  clear_has_m_un32curmpvessel();
}
 ::google::protobuf::uint32 CGSNotifyRoleBaseInfo::m_un32curmpvessel() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRoleBaseInfo.m_un32CurMPVessel)
  return m_un32curmpvessel_;
}
 void CGSNotifyRoleBaseInfo::set_m_un32curmpvessel(::google::protobuf::uint32 value) {
  set_has_m_un32curmpvessel();
  m_un32curmpvessel_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRoleBaseInfo.m_un32CurMPVessel)
}

// optional uint32 m_un32MaxHP = 17;
bool CGSNotifyRoleBaseInfo::has_m_un32maxhp() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void CGSNotifyRoleBaseInfo::set_has_m_un32maxhp() {
  _has_bits_[0] |= 0x00010000u;
}
void CGSNotifyRoleBaseInfo::clear_has_m_un32maxhp() {
  _has_bits_[0] &= ~0x00010000u;
}
void CGSNotifyRoleBaseInfo::clear_m_un32maxhp() {
  m_un32maxhp_ = 0u;
  clear_has_m_un32maxhp();
}
 ::google::protobuf::uint32 CGSNotifyRoleBaseInfo::m_un32maxhp() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRoleBaseInfo.m_un32MaxHP)
  return m_un32maxhp_;
}
 void CGSNotifyRoleBaseInfo::set_m_un32maxhp(::google::protobuf::uint32 value) {
  set_has_m_un32maxhp();
  m_un32maxhp_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRoleBaseInfo.m_un32MaxHP)
}

// optional uint32 m_un32MaxMP = 18;
bool CGSNotifyRoleBaseInfo::has_m_un32maxmp() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void CGSNotifyRoleBaseInfo::set_has_m_un32maxmp() {
  _has_bits_[0] |= 0x00020000u;
}
void CGSNotifyRoleBaseInfo::clear_has_m_un32maxmp() {
  _has_bits_[0] &= ~0x00020000u;
}
void CGSNotifyRoleBaseInfo::clear_m_un32maxmp() {
  m_un32maxmp_ = 0u;
  clear_has_m_un32maxmp();
}
 ::google::protobuf::uint32 CGSNotifyRoleBaseInfo::m_un32maxmp() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRoleBaseInfo.m_un32MaxMP)
  return m_un32maxmp_;
}
 void CGSNotifyRoleBaseInfo::set_m_un32maxmp(::google::protobuf::uint32 value) {
  set_has_m_un32maxmp();
  m_un32maxmp_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRoleBaseInfo.m_un32MaxMP)
}

// optional uint32 m_un32MaxHPVessel = 19;
bool CGSNotifyRoleBaseInfo::has_m_un32maxhpvessel() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void CGSNotifyRoleBaseInfo::set_has_m_un32maxhpvessel() {
  _has_bits_[0] |= 0x00040000u;
}
void CGSNotifyRoleBaseInfo::clear_has_m_un32maxhpvessel() {
  _has_bits_[0] &= ~0x00040000u;
}
void CGSNotifyRoleBaseInfo::clear_m_un32maxhpvessel() {
  m_un32maxhpvessel_ = 0u;
  clear_has_m_un32maxhpvessel();
}
 ::google::protobuf::uint32 CGSNotifyRoleBaseInfo::m_un32maxhpvessel() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRoleBaseInfo.m_un32MaxHPVessel)
  return m_un32maxhpvessel_;
}
 void CGSNotifyRoleBaseInfo::set_m_un32maxhpvessel(::google::protobuf::uint32 value) {
  set_has_m_un32maxhpvessel();
  m_un32maxhpvessel_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRoleBaseInfo.m_un32MaxHPVessel)
}

// optional uint32 m_un32MaxMPVessel = 20;
bool CGSNotifyRoleBaseInfo::has_m_un32maxmpvessel() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void CGSNotifyRoleBaseInfo::set_has_m_un32maxmpvessel() {
  _has_bits_[0] |= 0x00080000u;
}
void CGSNotifyRoleBaseInfo::clear_has_m_un32maxmpvessel() {
  _has_bits_[0] &= ~0x00080000u;
}
void CGSNotifyRoleBaseInfo::clear_m_un32maxmpvessel() {
  m_un32maxmpvessel_ = 0u;
  clear_has_m_un32maxmpvessel();
}
 ::google::protobuf::uint32 CGSNotifyRoleBaseInfo::m_un32maxmpvessel() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRoleBaseInfo.m_un32MaxMPVessel)
  return m_un32maxmpvessel_;
}
 void CGSNotifyRoleBaseInfo::set_m_un32maxmpvessel(::google::protobuf::uint32 value) {
  set_has_m_un32maxmpvessel();
  m_un32maxmpvessel_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRoleBaseInfo.m_un32MaxMPVessel)
}

// optional uint32 m_un32Max_packages = 21;
bool CGSNotifyRoleBaseInfo::has_m_un32max_packages() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
void CGSNotifyRoleBaseInfo::set_has_m_un32max_packages() {
  _has_bits_[0] |= 0x00100000u;
}
void CGSNotifyRoleBaseInfo::clear_has_m_un32max_packages() {
  _has_bits_[0] &= ~0x00100000u;
}
void CGSNotifyRoleBaseInfo::clear_m_un32max_packages() {
  m_un32max_packages_ = 0u;
  clear_has_m_un32max_packages();
}
 ::google::protobuf::uint32 CGSNotifyRoleBaseInfo::m_un32max_packages() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRoleBaseInfo.m_un32Max_packages)
  return m_un32max_packages_;
}
 void CGSNotifyRoleBaseInfo::set_m_un32max_packages(::google::protobuf::uint32 value) {
  set_has_m_un32max_packages();
  m_un32max_packages_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRoleBaseInfo.m_un32Max_packages)
}

// optional uint32 wingID = 22;
bool CGSNotifyRoleBaseInfo::has_wingid() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
void CGSNotifyRoleBaseInfo::set_has_wingid() {
  _has_bits_[0] |= 0x00200000u;
}
void CGSNotifyRoleBaseInfo::clear_has_wingid() {
  _has_bits_[0] &= ~0x00200000u;
}
void CGSNotifyRoleBaseInfo::clear_wingid() {
  wingid_ = 0u;
  clear_has_wingid();
}
 ::google::protobuf::uint32 CGSNotifyRoleBaseInfo::wingid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRoleBaseInfo.wingID)
  return wingid_;
}
 void CGSNotifyRoleBaseInfo::set_wingid(::google::protobuf::uint32 value) {
  set_has_wingid();
  wingid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRoleBaseInfo.wingID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCAskSelectRole::kRoleNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCAskSelectRole::CGCAskSelectRole()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGCAskSelectRole)
}

void CGCAskSelectRole::InitAsDefaultInstance() {
}

CGCAskSelectRole::CGCAskSelectRole(const CGCAskSelectRole& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGCAskSelectRole)
}

void CGCAskSelectRole::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _rolename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCAskSelectRole::~CGCAskSelectRole() {
  // @@protoc_insertion_point(destructor:NetPackage.CGCAskSelectRole)
  SharedDtor();
}

void CGCAskSelectRole::SharedDtor() {
  _rolename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CGCAskSelectRole::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCAskSelectRole::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCAskSelectRole_descriptor_;
}

const CGCAskSelectRole& CGCAskSelectRole::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGCAskSelectRole* CGCAskSelectRole::default_instance_ = NULL;

CGCAskSelectRole* CGCAskSelectRole::New(::google::protobuf::Arena* arena) const {
  CGCAskSelectRole* n = new CGCAskSelectRole;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCAskSelectRole::Clear() {
  if (has__rolename()) {
    _rolename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCAskSelectRole::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGCAskSelectRole)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string _roleName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__rolename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_rolename().data(), this->_rolename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NetPackage.CGCAskSelectRole._roleName");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGCAskSelectRole)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGCAskSelectRole)
  return false;
#undef DO_
}

void CGCAskSelectRole::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGCAskSelectRole)
  // optional string _roleName = 1;
  if (has__rolename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_rolename().data(), this->_rolename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NetPackage.CGCAskSelectRole._roleName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->_rolename(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGCAskSelectRole)
}

::google::protobuf::uint8* CGCAskSelectRole::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGCAskSelectRole)
  // optional string _roleName = 1;
  if (has__rolename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_rolename().data(), this->_rolename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NetPackage.CGCAskSelectRole._roleName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->_rolename(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGCAskSelectRole)
  return target;
}

int CGCAskSelectRole::ByteSize() const {
  int total_size = 0;

  // optional string _roleName = 1;
  if (has__rolename()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->_rolename());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCAskSelectRole::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCAskSelectRole* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCAskSelectRole>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCAskSelectRole::MergeFrom(const CGCAskSelectRole& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has__rolename()) {
      set_has__rolename();
      _rolename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._rolename_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCAskSelectRole::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCAskSelectRole::CopyFrom(const CGCAskSelectRole& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCAskSelectRole::IsInitialized() const {

  return true;
}

void CGCAskSelectRole::Swap(CGCAskSelectRole* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCAskSelectRole::InternalSwap(CGCAskSelectRole* other) {
  _rolename_.Swap(&other->_rolename_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCAskSelectRole::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCAskSelectRole_descriptor_;
  metadata.reflection = CGCAskSelectRole_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCAskSelectRole

// optional string _roleName = 1;
bool CGCAskSelectRole::has__rolename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGCAskSelectRole::set_has__rolename() {
  _has_bits_[0] |= 0x00000001u;
}
void CGCAskSelectRole::clear_has__rolename() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGCAskSelectRole::clear__rolename() {
  _rolename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__rolename();
}
 const ::std::string& CGCAskSelectRole::_rolename() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCAskSelectRole._roleName)
  return _rolename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CGCAskSelectRole::set__rolename(const ::std::string& value) {
  set_has__rolename();
  _rolename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetPackage.CGCAskSelectRole._roleName)
}
 void CGCAskSelectRole::set__rolename(const char* value) {
  set_has__rolename();
  _rolename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetPackage.CGCAskSelectRole._roleName)
}
 void CGCAskSelectRole::set__rolename(const char* value, size_t size) {
  set_has__rolename();
  _rolename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetPackage.CGCAskSelectRole._roleName)
}
 ::std::string* CGCAskSelectRole::mutable__rolename() {
  set_has__rolename();
  // @@protoc_insertion_point(field_mutable:NetPackage.CGCAskSelectRole._roleName)
  return _rolename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CGCAskSelectRole::release__rolename() {
  clear_has__rolename();
  return _rolename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CGCAskSelectRole::set_allocated__rolename(::std::string* _rolename) {
  if (_rolename != NULL) {
    set_has__rolename();
  } else {
    clear_has__rolename();
  }
  _rolename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _rolename);
  // @@protoc_insertion_point(field_set_allocated:NetPackage.CGCAskSelectRole._roleName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CNetErrorMessage::kProtocolIdFieldNumber;
const int CNetErrorMessage::kStrLengthFieldNumber;
const int CNetErrorMessage::kErrorCodeFieldNumber;
const int CNetErrorMessage::kErrorMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CNetErrorMessage::CNetErrorMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CNetErrorMessage)
}

void CNetErrorMessage::InitAsDefaultInstance() {
}

CNetErrorMessage::CNetErrorMessage(const CNetErrorMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CNetErrorMessage)
}

void CNetErrorMessage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  protocolid_ = 0u;
  strlength_ = 0u;
  errorcode_ = 0;
  errormessage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CNetErrorMessage::~CNetErrorMessage() {
  // @@protoc_insertion_point(destructor:NetPackage.CNetErrorMessage)
  SharedDtor();
}

void CNetErrorMessage::SharedDtor() {
  errormessage_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CNetErrorMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CNetErrorMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CNetErrorMessage_descriptor_;
}

const CNetErrorMessage& CNetErrorMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CNetErrorMessage* CNetErrorMessage::default_instance_ = NULL;

CNetErrorMessage* CNetErrorMessage::New(::google::protobuf::Arena* arena) const {
  CNetErrorMessage* n = new CNetErrorMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CNetErrorMessage::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CNetErrorMessage*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15u) {
    ZR_(protocolid_, strlength_);
    errorcode_ = 0;
    if (has_errormessage()) {
      errormessage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CNetErrorMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CNetErrorMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 protocolId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &protocolid_)));
          set_has_protocolid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_strLength;
        break;
      }

      // optional uint32 strLength = 2;
      case 2: {
        if (tag == 16) {
         parse_strLength:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &strlength_)));
          set_has_strlength();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_errorCode;
        break;
      }

      // optional int32 errorCode = 3;
      case 3: {
        if (tag == 24) {
         parse_errorCode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errorcode_)));
          set_has_errorcode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_errorMessage;
        break;
      }

      // optional string errorMessage = 4;
      case 4: {
        if (tag == 34) {
         parse_errorMessage:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errormessage()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->errormessage().data(), this->errormessage().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NetPackage.CNetErrorMessage.errorMessage");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CNetErrorMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CNetErrorMessage)
  return false;
#undef DO_
}

void CNetErrorMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CNetErrorMessage)
  // optional uint32 protocolId = 1;
  if (has_protocolid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->protocolid(), output);
  }

  // optional uint32 strLength = 2;
  if (has_strlength()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->strlength(), output);
  }

  // optional int32 errorCode = 3;
  if (has_errorcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->errorcode(), output);
  }

  // optional string errorMessage = 4;
  if (has_errormessage()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->errormessage().data(), this->errormessage().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NetPackage.CNetErrorMessage.errorMessage");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->errormessage(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CNetErrorMessage)
}

::google::protobuf::uint8* CNetErrorMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CNetErrorMessage)
  // optional uint32 protocolId = 1;
  if (has_protocolid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->protocolid(), target);
  }

  // optional uint32 strLength = 2;
  if (has_strlength()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->strlength(), target);
  }

  // optional int32 errorCode = 3;
  if (has_errorcode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->errorcode(), target);
  }

  // optional string errorMessage = 4;
  if (has_errormessage()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->errormessage().data(), this->errormessage().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NetPackage.CNetErrorMessage.errorMessage");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->errormessage(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CNetErrorMessage)
  return target;
}

int CNetErrorMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 15u) {
    // optional uint32 protocolId = 1;
    if (has_protocolid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->protocolid());
    }

    // optional uint32 strLength = 2;
    if (has_strlength()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->strlength());
    }

    // optional int32 errorCode = 3;
    if (has_errorcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->errorcode());
    }

    // optional string errorMessage = 4;
    if (has_errormessage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->errormessage());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CNetErrorMessage::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CNetErrorMessage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CNetErrorMessage>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CNetErrorMessage::MergeFrom(const CNetErrorMessage& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_protocolid()) {
      set_protocolid(from.protocolid());
    }
    if (from.has_strlength()) {
      set_strlength(from.strlength());
    }
    if (from.has_errorcode()) {
      set_errorcode(from.errorcode());
    }
    if (from.has_errormessage()) {
      set_has_errormessage();
      errormessage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errormessage_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CNetErrorMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CNetErrorMessage::CopyFrom(const CNetErrorMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CNetErrorMessage::IsInitialized() const {

  return true;
}

void CNetErrorMessage::Swap(CNetErrorMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CNetErrorMessage::InternalSwap(CNetErrorMessage* other) {
  std::swap(protocolid_, other->protocolid_);
  std::swap(strlength_, other->strlength_);
  std::swap(errorcode_, other->errorcode_);
  errormessage_.Swap(&other->errormessage_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CNetErrorMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CNetErrorMessage_descriptor_;
  metadata.reflection = CNetErrorMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CNetErrorMessage

// optional uint32 protocolId = 1;
bool CNetErrorMessage::has_protocolid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CNetErrorMessage::set_has_protocolid() {
  _has_bits_[0] |= 0x00000001u;
}
void CNetErrorMessage::clear_has_protocolid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CNetErrorMessage::clear_protocolid() {
  protocolid_ = 0u;
  clear_has_protocolid();
}
 ::google::protobuf::uint32 CNetErrorMessage::protocolid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CNetErrorMessage.protocolId)
  return protocolid_;
}
 void CNetErrorMessage::set_protocolid(::google::protobuf::uint32 value) {
  set_has_protocolid();
  protocolid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CNetErrorMessage.protocolId)
}

// optional uint32 strLength = 2;
bool CNetErrorMessage::has_strlength() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CNetErrorMessage::set_has_strlength() {
  _has_bits_[0] |= 0x00000002u;
}
void CNetErrorMessage::clear_has_strlength() {
  _has_bits_[0] &= ~0x00000002u;
}
void CNetErrorMessage::clear_strlength() {
  strlength_ = 0u;
  clear_has_strlength();
}
 ::google::protobuf::uint32 CNetErrorMessage::strlength() const {
  // @@protoc_insertion_point(field_get:NetPackage.CNetErrorMessage.strLength)
  return strlength_;
}
 void CNetErrorMessage::set_strlength(::google::protobuf::uint32 value) {
  set_has_strlength();
  strlength_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CNetErrorMessage.strLength)
}

// optional int32 errorCode = 3;
bool CNetErrorMessage::has_errorcode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CNetErrorMessage::set_has_errorcode() {
  _has_bits_[0] |= 0x00000004u;
}
void CNetErrorMessage::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000004u;
}
void CNetErrorMessage::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
 ::google::protobuf::int32 CNetErrorMessage::errorcode() const {
  // @@protoc_insertion_point(field_get:NetPackage.CNetErrorMessage.errorCode)
  return errorcode_;
}
 void CNetErrorMessage::set_errorcode(::google::protobuf::int32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CNetErrorMessage.errorCode)
}

// optional string errorMessage = 4;
bool CNetErrorMessage::has_errormessage() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CNetErrorMessage::set_has_errormessage() {
  _has_bits_[0] |= 0x00000008u;
}
void CNetErrorMessage::clear_has_errormessage() {
  _has_bits_[0] &= ~0x00000008u;
}
void CNetErrorMessage::clear_errormessage() {
  errormessage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_errormessage();
}
 const ::std::string& CNetErrorMessage::errormessage() const {
  // @@protoc_insertion_point(field_get:NetPackage.CNetErrorMessage.errorMessage)
  return errormessage_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CNetErrorMessage::set_errormessage(const ::std::string& value) {
  set_has_errormessage();
  errormessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetPackage.CNetErrorMessage.errorMessage)
}
 void CNetErrorMessage::set_errormessage(const char* value) {
  set_has_errormessage();
  errormessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetPackage.CNetErrorMessage.errorMessage)
}
 void CNetErrorMessage::set_errormessage(const char* value, size_t size) {
  set_has_errormessage();
  errormessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetPackage.CNetErrorMessage.errorMessage)
}
 ::std::string* CNetErrorMessage::mutable_errormessage() {
  set_has_errormessage();
  // @@protoc_insertion_point(field_mutable:NetPackage.CNetErrorMessage.errorMessage)
  return errormessage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CNetErrorMessage::release_errormessage() {
  clear_has_errormessage();
  return errormessage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CNetErrorMessage::set_allocated_errormessage(::std::string* errormessage) {
  if (errormessage != NULL) {
    set_has_errormessage();
  } else {
    clear_has_errormessage();
  }
  errormessage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errormessage);
  // @@protoc_insertion_point(field_set_allocated:NetPackage.CNetErrorMessage.errorMessage)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGSNotifyChangeScene::kMUn32MapIDFieldNumber;
const int CGSNotifyChangeScene::kMUn32SceneIDFieldNumber;
const int CGSNotifyChangeScene::kMUn32ClientNOFieldNumber;
const int CGSNotifyChangeScene::kMFPosXFieldNumber;
const int CGSNotifyChangeScene::kMFPosYFieldNumber;
const int CGSNotifyChangeScene::kMFPosZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGSNotifyChangeScene::CGSNotifyChangeScene()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGSNotifyChangeScene)
}

void CGSNotifyChangeScene::InitAsDefaultInstance() {
}

CGSNotifyChangeScene::CGSNotifyChangeScene(const CGSNotifyChangeScene& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGSNotifyChangeScene)
}

void CGSNotifyChangeScene::SharedCtor() {
  _cached_size_ = 0;
  m_un32mapid_ = 0u;
  m_un32sceneid_ = 0u;
  m_un32clientno_ = 0u;
  m_fposx_ = 0;
  m_fposy_ = 0;
  m_fposz_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGSNotifyChangeScene::~CGSNotifyChangeScene() {
  // @@protoc_insertion_point(destructor:NetPackage.CGSNotifyChangeScene)
  SharedDtor();
}

void CGSNotifyChangeScene::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGSNotifyChangeScene::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGSNotifyChangeScene::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGSNotifyChangeScene_descriptor_;
}

const CGSNotifyChangeScene& CGSNotifyChangeScene::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGSNotifyChangeScene* CGSNotifyChangeScene::default_instance_ = NULL;

CGSNotifyChangeScene* CGSNotifyChangeScene::New(::google::protobuf::Arena* arena) const {
  CGSNotifyChangeScene* n = new CGSNotifyChangeScene;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGSNotifyChangeScene::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CGSNotifyChangeScene*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 63u) {
    ZR_(m_un32mapid_, m_fposz_);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGSNotifyChangeScene::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGSNotifyChangeScene)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 m_un32MapID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32mapid_)));
          set_has_m_un32mapid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_m_un32SceneID;
        break;
      }

      // optional uint32 m_un32SceneID = 2;
      case 2: {
        if (tag == 16) {
         parse_m_un32SceneID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32sceneid_)));
          set_has_m_un32sceneid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_m_un32ClientNO;
        break;
      }

      // optional uint32 m_un32ClientNO = 3;
      case 3: {
        if (tag == 24) {
         parse_m_un32ClientNO:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32clientno_)));
          set_has_m_un32clientno();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_m_fPosX;
        break;
      }

      // optional float m_fPosX = 4;
      case 4: {
        if (tag == 37) {
         parse_m_fPosX:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fposx_)));
          set_has_m_fposx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_m_fPosY;
        break;
      }

      // optional float m_fPosY = 5;
      case 5: {
        if (tag == 45) {
         parse_m_fPosY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fposy_)));
          set_has_m_fposy();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_m_fPosZ;
        break;
      }

      // optional float m_fPosZ = 6;
      case 6: {
        if (tag == 53) {
         parse_m_fPosZ:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fposz_)));
          set_has_m_fposz();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGSNotifyChangeScene)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGSNotifyChangeScene)
  return false;
#undef DO_
}

void CGSNotifyChangeScene::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGSNotifyChangeScene)
  // optional uint32 m_un32MapID = 1;
  if (has_m_un32mapid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->m_un32mapid(), output);
  }

  // optional uint32 m_un32SceneID = 2;
  if (has_m_un32sceneid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->m_un32sceneid(), output);
  }

  // optional uint32 m_un32ClientNO = 3;
  if (has_m_un32clientno()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->m_un32clientno(), output);
  }

  // optional float m_fPosX = 4;
  if (has_m_fposx()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->m_fposx(), output);
  }

  // optional float m_fPosY = 5;
  if (has_m_fposy()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->m_fposy(), output);
  }

  // optional float m_fPosZ = 6;
  if (has_m_fposz()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->m_fposz(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGSNotifyChangeScene)
}

::google::protobuf::uint8* CGSNotifyChangeScene::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGSNotifyChangeScene)
  // optional uint32 m_un32MapID = 1;
  if (has_m_un32mapid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->m_un32mapid(), target);
  }

  // optional uint32 m_un32SceneID = 2;
  if (has_m_un32sceneid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->m_un32sceneid(), target);
  }

  // optional uint32 m_un32ClientNO = 3;
  if (has_m_un32clientno()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->m_un32clientno(), target);
  }

  // optional float m_fPosX = 4;
  if (has_m_fposx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->m_fposx(), target);
  }

  // optional float m_fPosY = 5;
  if (has_m_fposy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->m_fposy(), target);
  }

  // optional float m_fPosZ = 6;
  if (has_m_fposz()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->m_fposz(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGSNotifyChangeScene)
  return target;
}

int CGSNotifyChangeScene::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 63u) {
    // optional uint32 m_un32MapID = 1;
    if (has_m_un32mapid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32mapid());
    }

    // optional uint32 m_un32SceneID = 2;
    if (has_m_un32sceneid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32sceneid());
    }

    // optional uint32 m_un32ClientNO = 3;
    if (has_m_un32clientno()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32clientno());
    }

    // optional float m_fPosX = 4;
    if (has_m_fposx()) {
      total_size += 1 + 4;
    }

    // optional float m_fPosY = 5;
    if (has_m_fposy()) {
      total_size += 1 + 4;
    }

    // optional float m_fPosZ = 6;
    if (has_m_fposz()) {
      total_size += 1 + 4;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGSNotifyChangeScene::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGSNotifyChangeScene* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGSNotifyChangeScene>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGSNotifyChangeScene::MergeFrom(const CGSNotifyChangeScene& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_un32mapid()) {
      set_m_un32mapid(from.m_un32mapid());
    }
    if (from.has_m_un32sceneid()) {
      set_m_un32sceneid(from.m_un32sceneid());
    }
    if (from.has_m_un32clientno()) {
      set_m_un32clientno(from.m_un32clientno());
    }
    if (from.has_m_fposx()) {
      set_m_fposx(from.m_fposx());
    }
    if (from.has_m_fposy()) {
      set_m_fposy(from.m_fposy());
    }
    if (from.has_m_fposz()) {
      set_m_fposz(from.m_fposz());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGSNotifyChangeScene::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGSNotifyChangeScene::CopyFrom(const CGSNotifyChangeScene& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGSNotifyChangeScene::IsInitialized() const {

  return true;
}

void CGSNotifyChangeScene::Swap(CGSNotifyChangeScene* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGSNotifyChangeScene::InternalSwap(CGSNotifyChangeScene* other) {
  std::swap(m_un32mapid_, other->m_un32mapid_);
  std::swap(m_un32sceneid_, other->m_un32sceneid_);
  std::swap(m_un32clientno_, other->m_un32clientno_);
  std::swap(m_fposx_, other->m_fposx_);
  std::swap(m_fposy_, other->m_fposy_);
  std::swap(m_fposz_, other->m_fposz_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGSNotifyChangeScene::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGSNotifyChangeScene_descriptor_;
  metadata.reflection = CGSNotifyChangeScene_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGSNotifyChangeScene

// optional uint32 m_un32MapID = 1;
bool CGSNotifyChangeScene::has_m_un32mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGSNotifyChangeScene::set_has_m_un32mapid() {
  _has_bits_[0] |= 0x00000001u;
}
void CGSNotifyChangeScene::clear_has_m_un32mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGSNotifyChangeScene::clear_m_un32mapid() {
  m_un32mapid_ = 0u;
  clear_has_m_un32mapid();
}
 ::google::protobuf::uint32 CGSNotifyChangeScene::m_un32mapid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyChangeScene.m_un32MapID)
  return m_un32mapid_;
}
 void CGSNotifyChangeScene::set_m_un32mapid(::google::protobuf::uint32 value) {
  set_has_m_un32mapid();
  m_un32mapid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyChangeScene.m_un32MapID)
}

// optional uint32 m_un32SceneID = 2;
bool CGSNotifyChangeScene::has_m_un32sceneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CGSNotifyChangeScene::set_has_m_un32sceneid() {
  _has_bits_[0] |= 0x00000002u;
}
void CGSNotifyChangeScene::clear_has_m_un32sceneid() {
  _has_bits_[0] &= ~0x00000002u;
}
void CGSNotifyChangeScene::clear_m_un32sceneid() {
  m_un32sceneid_ = 0u;
  clear_has_m_un32sceneid();
}
 ::google::protobuf::uint32 CGSNotifyChangeScene::m_un32sceneid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyChangeScene.m_un32SceneID)
  return m_un32sceneid_;
}
 void CGSNotifyChangeScene::set_m_un32sceneid(::google::protobuf::uint32 value) {
  set_has_m_un32sceneid();
  m_un32sceneid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyChangeScene.m_un32SceneID)
}

// optional uint32 m_un32ClientNO = 3;
bool CGSNotifyChangeScene::has_m_un32clientno() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CGSNotifyChangeScene::set_has_m_un32clientno() {
  _has_bits_[0] |= 0x00000004u;
}
void CGSNotifyChangeScene::clear_has_m_un32clientno() {
  _has_bits_[0] &= ~0x00000004u;
}
void CGSNotifyChangeScene::clear_m_un32clientno() {
  m_un32clientno_ = 0u;
  clear_has_m_un32clientno();
}
 ::google::protobuf::uint32 CGSNotifyChangeScene::m_un32clientno() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyChangeScene.m_un32ClientNO)
  return m_un32clientno_;
}
 void CGSNotifyChangeScene::set_m_un32clientno(::google::protobuf::uint32 value) {
  set_has_m_un32clientno();
  m_un32clientno_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyChangeScene.m_un32ClientNO)
}

// optional float m_fPosX = 4;
bool CGSNotifyChangeScene::has_m_fposx() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CGSNotifyChangeScene::set_has_m_fposx() {
  _has_bits_[0] |= 0x00000008u;
}
void CGSNotifyChangeScene::clear_has_m_fposx() {
  _has_bits_[0] &= ~0x00000008u;
}
void CGSNotifyChangeScene::clear_m_fposx() {
  m_fposx_ = 0;
  clear_has_m_fposx();
}
 float CGSNotifyChangeScene::m_fposx() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyChangeScene.m_fPosX)
  return m_fposx_;
}
 void CGSNotifyChangeScene::set_m_fposx(float value) {
  set_has_m_fposx();
  m_fposx_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyChangeScene.m_fPosX)
}

// optional float m_fPosY = 5;
bool CGSNotifyChangeScene::has_m_fposy() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CGSNotifyChangeScene::set_has_m_fposy() {
  _has_bits_[0] |= 0x00000010u;
}
void CGSNotifyChangeScene::clear_has_m_fposy() {
  _has_bits_[0] &= ~0x00000010u;
}
void CGSNotifyChangeScene::clear_m_fposy() {
  m_fposy_ = 0;
  clear_has_m_fposy();
}
 float CGSNotifyChangeScene::m_fposy() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyChangeScene.m_fPosY)
  return m_fposy_;
}
 void CGSNotifyChangeScene::set_m_fposy(float value) {
  set_has_m_fposy();
  m_fposy_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyChangeScene.m_fPosY)
}

// optional float m_fPosZ = 6;
bool CGSNotifyChangeScene::has_m_fposz() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CGSNotifyChangeScene::set_has_m_fposz() {
  _has_bits_[0] |= 0x00000020u;
}
void CGSNotifyChangeScene::clear_has_m_fposz() {
  _has_bits_[0] &= ~0x00000020u;
}
void CGSNotifyChangeScene::clear_m_fposz() {
  m_fposz_ = 0;
  clear_has_m_fposz();
}
 float CGSNotifyChangeScene::m_fposz() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyChangeScene.m_fPosZ)
  return m_fposz_;
}
 void CGSNotifyChangeScene::set_m_fposz(float value) {
  set_has_m_fposz();
  m_fposz_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyChangeScene.m_fPosZ)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGSNotifyRoleAppear::kMUn32ObjIDFieldNumber;
const int CGSNotifyRoleAppear::kMN32RoleNickNameFieldNumber;
const int CGSNotifyRoleAppear::kMN32CareerIDFieldNumber;
const int CGSNotifyRoleAppear::kMBGenderFieldNumber;
const int CGSNotifyRoleAppear::kMUn32WeaponTypeIDFieldNumber;
const int CGSNotifyRoleAppear::kMUn32CoatTypeIDFieldNumber;
const int CGSNotifyRoleAppear::kMUn32LevelFieldNumber;
const int CGSNotifyRoleAppear::kMFCurPosXFieldNumber;
const int CGSNotifyRoleAppear::kMFCurPosYFieldNumber;
const int CGSNotifyRoleAppear::kMFCurPosZFieldNumber;
const int CGSNotifyRoleAppear::kMFTarPosXFieldNumber;
const int CGSNotifyRoleAppear::kMFTarPosYFieldNumber;
const int CGSNotifyRoleAppear::kMFTarPosZFieldNumber;
const int CGSNotifyRoleAppear::kMFMoveSpeedFieldNumber;
const int CGSNotifyRoleAppear::kMUn32CurTitleIDFieldNumber;
const int CGSNotifyRoleAppear::kMUn32CurHpFieldNumber;
const int CGSNotifyRoleAppear::kMU32WingIDFieldNumber;
const int CGSNotifyRoleAppear::kMU32MedalIDFieldNumber;
const int CGSNotifyRoleAppear::kMU32PetIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGSNotifyRoleAppear::CGSNotifyRoleAppear()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGSNotifyRoleAppear)
}

void CGSNotifyRoleAppear::InitAsDefaultInstance() {
}

CGSNotifyRoleAppear::CGSNotifyRoleAppear(const CGSNotifyRoleAppear& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGSNotifyRoleAppear)
}

void CGSNotifyRoleAppear::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  m_un32objid_ = 0u;
  m_n32rolenickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  m_n32careerid_ = 0;
  m_bgender_ = false;
  m_un32weapontypeid_ = 0u;
  m_un32coattypeid_ = 0u;
  m_un32level_ = 0u;
  m_fcurposx_ = 0;
  m_fcurposy_ = 0;
  m_fcurposz_ = 0;
  m_ftarposx_ = 0;
  m_ftarposy_ = 0;
  m_ftarposz_ = 0;
  m_fmovespeed_ = 0;
  m_un32curtitleid_ = 0u;
  m_un32curhp_ = 0u;
  m_u32wingid_ = 0u;
  m_u32medalid_ = 0u;
  m_u32petid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGSNotifyRoleAppear::~CGSNotifyRoleAppear() {
  // @@protoc_insertion_point(destructor:NetPackage.CGSNotifyRoleAppear)
  SharedDtor();
}

void CGSNotifyRoleAppear::SharedDtor() {
  m_n32rolenickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CGSNotifyRoleAppear::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGSNotifyRoleAppear::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGSNotifyRoleAppear_descriptor_;
}

const CGSNotifyRoleAppear& CGSNotifyRoleAppear::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGSNotifyRoleAppear* CGSNotifyRoleAppear::default_instance_ = NULL;

CGSNotifyRoleAppear* CGSNotifyRoleAppear::New(::google::protobuf::Arena* arena) const {
  CGSNotifyRoleAppear* n = new CGSNotifyRoleAppear;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGSNotifyRoleAppear::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CGSNotifyRoleAppear*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(m_un32objid_, m_fcurposx_);
    if (has_m_n32rolenickname()) {
      m_n32rolenickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 65280u) {
    ZR_(m_fcurposy_, m_un32curhp_);
  }
  ZR_(m_u32wingid_, m_u32petid_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGSNotifyRoleAppear::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGSNotifyRoleAppear)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 m_un32ObjID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32objid_)));
          set_has_m_un32objid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_m_n32RoleNickName;
        break;
      }

      // optional string m_n32RoleNickName = 2;
      case 2: {
        if (tag == 18) {
         parse_m_n32RoleNickName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_n32rolenickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->m_n32rolenickname().data(), this->m_n32rolenickname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NetPackage.CGSNotifyRoleAppear.m_n32RoleNickName");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_m_n32CareerID;
        break;
      }

      // optional int32 m_n32CareerID = 3;
      case 3: {
        if (tag == 24) {
         parse_m_n32CareerID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_n32careerid_)));
          set_has_m_n32careerid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_m_bGender;
        break;
      }

      // optional bool m_bGender = 4;
      case 4: {
        if (tag == 32) {
         parse_m_bGender:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &m_bgender_)));
          set_has_m_bgender();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_m_un32WeaponTypeID;
        break;
      }

      // optional uint32 m_un32WeaponTypeID = 5;
      case 5: {
        if (tag == 40) {
         parse_m_un32WeaponTypeID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32weapontypeid_)));
          set_has_m_un32weapontypeid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_m_un32CoatTypeID;
        break;
      }

      // optional uint32 m_un32CoatTypeID = 6;
      case 6: {
        if (tag == 48) {
         parse_m_un32CoatTypeID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32coattypeid_)));
          set_has_m_un32coattypeid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_m_un32Level;
        break;
      }

      // optional uint32 m_un32Level = 7;
      case 7: {
        if (tag == 56) {
         parse_m_un32Level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32level_)));
          set_has_m_un32level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(69)) goto parse_m_fCurPosX;
        break;
      }

      // optional float m_fCurPosX = 8;
      case 8: {
        if (tag == 69) {
         parse_m_fCurPosX:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fcurposx_)));
          set_has_m_fcurposx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(77)) goto parse_m_fCurPosY;
        break;
      }

      // optional float m_fCurPosY = 9;
      case 9: {
        if (tag == 77) {
         parse_m_fCurPosY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fcurposy_)));
          set_has_m_fcurposy();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(85)) goto parse_m_fCurPosZ;
        break;
      }

      // optional float m_fCurPosZ = 10;
      case 10: {
        if (tag == 85) {
         parse_m_fCurPosZ:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fcurposz_)));
          set_has_m_fcurposz();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(93)) goto parse_m_fTarPosX;
        break;
      }

      // optional float m_fTarPosX = 11;
      case 11: {
        if (tag == 93) {
         parse_m_fTarPosX:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_ftarposx_)));
          set_has_m_ftarposx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(101)) goto parse_m_fTarPosY;
        break;
      }

      // optional float m_fTarPosY = 12;
      case 12: {
        if (tag == 101) {
         parse_m_fTarPosY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_ftarposy_)));
          set_has_m_ftarposy();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(109)) goto parse_m_fTarPosZ;
        break;
      }

      // optional float m_fTarPosZ = 13;
      case 13: {
        if (tag == 109) {
         parse_m_fTarPosZ:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_ftarposz_)));
          set_has_m_ftarposz();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(117)) goto parse_m_fMoveSpeed;
        break;
      }

      // optional float m_fMoveSpeed = 14;
      case 14: {
        if (tag == 117) {
         parse_m_fMoveSpeed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fmovespeed_)));
          set_has_m_fmovespeed();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_m_un32CurTitleID;
        break;
      }

      // optional uint32 m_un32CurTitleID = 15;
      case 15: {
        if (tag == 120) {
         parse_m_un32CurTitleID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32curtitleid_)));
          set_has_m_un32curtitleid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_m_un32CurHp;
        break;
      }

      // optional uint32 m_un32CurHp = 16;
      case 16: {
        if (tag == 128) {
         parse_m_un32CurHp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32curhp_)));
          set_has_m_un32curhp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_m_u32WingID;
        break;
      }

      // optional uint32 m_u32WingID = 17;
      case 17: {
        if (tag == 136) {
         parse_m_u32WingID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_u32wingid_)));
          set_has_m_u32wingid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_m_u32MedalID;
        break;
      }

      // optional uint32 m_u32MedalID = 18;
      case 18: {
        if (tag == 144) {
         parse_m_u32MedalID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_u32medalid_)));
          set_has_m_u32medalid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_m_u32PetID;
        break;
      }

      // optional uint32 m_u32PetID = 19;
      case 19: {
        if (tag == 152) {
         parse_m_u32PetID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_u32petid_)));
          set_has_m_u32petid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGSNotifyRoleAppear)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGSNotifyRoleAppear)
  return false;
#undef DO_
}

void CGSNotifyRoleAppear::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGSNotifyRoleAppear)
  // optional uint32 m_un32ObjID = 1;
  if (has_m_un32objid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->m_un32objid(), output);
  }

  // optional string m_n32RoleNickName = 2;
  if (has_m_n32rolenickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->m_n32rolenickname().data(), this->m_n32rolenickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NetPackage.CGSNotifyRoleAppear.m_n32RoleNickName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->m_n32rolenickname(), output);
  }

  // optional int32 m_n32CareerID = 3;
  if (has_m_n32careerid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_n32careerid(), output);
  }

  // optional bool m_bGender = 4;
  if (has_m_bgender()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->m_bgender(), output);
  }

  // optional uint32 m_un32WeaponTypeID = 5;
  if (has_m_un32weapontypeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->m_un32weapontypeid(), output);
  }

  // optional uint32 m_un32CoatTypeID = 6;
  if (has_m_un32coattypeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->m_un32coattypeid(), output);
  }

  // optional uint32 m_un32Level = 7;
  if (has_m_un32level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->m_un32level(), output);
  }

  // optional float m_fCurPosX = 8;
  if (has_m_fcurposx()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->m_fcurposx(), output);
  }

  // optional float m_fCurPosY = 9;
  if (has_m_fcurposy()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->m_fcurposy(), output);
  }

  // optional float m_fCurPosZ = 10;
  if (has_m_fcurposz()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->m_fcurposz(), output);
  }

  // optional float m_fTarPosX = 11;
  if (has_m_ftarposx()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->m_ftarposx(), output);
  }

  // optional float m_fTarPosY = 12;
  if (has_m_ftarposy()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->m_ftarposy(), output);
  }

  // optional float m_fTarPosZ = 13;
  if (has_m_ftarposz()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(13, this->m_ftarposz(), output);
  }

  // optional float m_fMoveSpeed = 14;
  if (has_m_fmovespeed()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(14, this->m_fmovespeed(), output);
  }

  // optional uint32 m_un32CurTitleID = 15;
  if (has_m_un32curtitleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->m_un32curtitleid(), output);
  }

  // optional uint32 m_un32CurHp = 16;
  if (has_m_un32curhp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->m_un32curhp(), output);
  }

  // optional uint32 m_u32WingID = 17;
  if (has_m_u32wingid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->m_u32wingid(), output);
  }

  // optional uint32 m_u32MedalID = 18;
  if (has_m_u32medalid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->m_u32medalid(), output);
  }

  // optional uint32 m_u32PetID = 19;
  if (has_m_u32petid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->m_u32petid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGSNotifyRoleAppear)
}

::google::protobuf::uint8* CGSNotifyRoleAppear::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGSNotifyRoleAppear)
  // optional uint32 m_un32ObjID = 1;
  if (has_m_un32objid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->m_un32objid(), target);
  }

  // optional string m_n32RoleNickName = 2;
  if (has_m_n32rolenickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->m_n32rolenickname().data(), this->m_n32rolenickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NetPackage.CGSNotifyRoleAppear.m_n32RoleNickName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->m_n32rolenickname(), target);
  }

  // optional int32 m_n32CareerID = 3;
  if (has_m_n32careerid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_n32careerid(), target);
  }

  // optional bool m_bGender = 4;
  if (has_m_bgender()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->m_bgender(), target);
  }

  // optional uint32 m_un32WeaponTypeID = 5;
  if (has_m_un32weapontypeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->m_un32weapontypeid(), target);
  }

  // optional uint32 m_un32CoatTypeID = 6;
  if (has_m_un32coattypeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->m_un32coattypeid(), target);
  }

  // optional uint32 m_un32Level = 7;
  if (has_m_un32level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->m_un32level(), target);
  }

  // optional float m_fCurPosX = 8;
  if (has_m_fcurposx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->m_fcurposx(), target);
  }

  // optional float m_fCurPosY = 9;
  if (has_m_fcurposy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->m_fcurposy(), target);
  }

  // optional float m_fCurPosZ = 10;
  if (has_m_fcurposz()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->m_fcurposz(), target);
  }

  // optional float m_fTarPosX = 11;
  if (has_m_ftarposx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->m_ftarposx(), target);
  }

  // optional float m_fTarPosY = 12;
  if (has_m_ftarposy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->m_ftarposy(), target);
  }

  // optional float m_fTarPosZ = 13;
  if (has_m_ftarposz()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(13, this->m_ftarposz(), target);
  }

  // optional float m_fMoveSpeed = 14;
  if (has_m_fmovespeed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(14, this->m_fmovespeed(), target);
  }

  // optional uint32 m_un32CurTitleID = 15;
  if (has_m_un32curtitleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->m_un32curtitleid(), target);
  }

  // optional uint32 m_un32CurHp = 16;
  if (has_m_un32curhp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->m_un32curhp(), target);
  }

  // optional uint32 m_u32WingID = 17;
  if (has_m_u32wingid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->m_u32wingid(), target);
  }

  // optional uint32 m_u32MedalID = 18;
  if (has_m_u32medalid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->m_u32medalid(), target);
  }

  // optional uint32 m_u32PetID = 19;
  if (has_m_u32petid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->m_u32petid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGSNotifyRoleAppear)
  return target;
}

int CGSNotifyRoleAppear::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional uint32 m_un32ObjID = 1;
    if (has_m_un32objid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32objid());
    }

    // optional string m_n32RoleNickName = 2;
    if (has_m_n32rolenickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_n32rolenickname());
    }

    // optional int32 m_n32CareerID = 3;
    if (has_m_n32careerid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_n32careerid());
    }

    // optional bool m_bGender = 4;
    if (has_m_bgender()) {
      total_size += 1 + 1;
    }

    // optional uint32 m_un32WeaponTypeID = 5;
    if (has_m_un32weapontypeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32weapontypeid());
    }

    // optional uint32 m_un32CoatTypeID = 6;
    if (has_m_un32coattypeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32coattypeid());
    }

    // optional uint32 m_un32Level = 7;
    if (has_m_un32level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32level());
    }

    // optional float m_fCurPosX = 8;
    if (has_m_fcurposx()) {
      total_size += 1 + 4;
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional float m_fCurPosY = 9;
    if (has_m_fcurposy()) {
      total_size += 1 + 4;
    }

    // optional float m_fCurPosZ = 10;
    if (has_m_fcurposz()) {
      total_size += 1 + 4;
    }

    // optional float m_fTarPosX = 11;
    if (has_m_ftarposx()) {
      total_size += 1 + 4;
    }

    // optional float m_fTarPosY = 12;
    if (has_m_ftarposy()) {
      total_size += 1 + 4;
    }

    // optional float m_fTarPosZ = 13;
    if (has_m_ftarposz()) {
      total_size += 1 + 4;
    }

    // optional float m_fMoveSpeed = 14;
    if (has_m_fmovespeed()) {
      total_size += 1 + 4;
    }

    // optional uint32 m_un32CurTitleID = 15;
    if (has_m_un32curtitleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32curtitleid());
    }

    // optional uint32 m_un32CurHp = 16;
    if (has_m_un32curhp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32curhp());
    }

  }
  if (_has_bits_[16 / 32] & 458752u) {
    // optional uint32 m_u32WingID = 17;
    if (has_m_u32wingid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_u32wingid());
    }

    // optional uint32 m_u32MedalID = 18;
    if (has_m_u32medalid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_u32medalid());
    }

    // optional uint32 m_u32PetID = 19;
    if (has_m_u32petid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_u32petid());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGSNotifyRoleAppear::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGSNotifyRoleAppear* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGSNotifyRoleAppear>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGSNotifyRoleAppear::MergeFrom(const CGSNotifyRoleAppear& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_un32objid()) {
      set_m_un32objid(from.m_un32objid());
    }
    if (from.has_m_n32rolenickname()) {
      set_has_m_n32rolenickname();
      m_n32rolenickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.m_n32rolenickname_);
    }
    if (from.has_m_n32careerid()) {
      set_m_n32careerid(from.m_n32careerid());
    }
    if (from.has_m_bgender()) {
      set_m_bgender(from.m_bgender());
    }
    if (from.has_m_un32weapontypeid()) {
      set_m_un32weapontypeid(from.m_un32weapontypeid());
    }
    if (from.has_m_un32coattypeid()) {
      set_m_un32coattypeid(from.m_un32coattypeid());
    }
    if (from.has_m_un32level()) {
      set_m_un32level(from.m_un32level());
    }
    if (from.has_m_fcurposx()) {
      set_m_fcurposx(from.m_fcurposx());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_m_fcurposy()) {
      set_m_fcurposy(from.m_fcurposy());
    }
    if (from.has_m_fcurposz()) {
      set_m_fcurposz(from.m_fcurposz());
    }
    if (from.has_m_ftarposx()) {
      set_m_ftarposx(from.m_ftarposx());
    }
    if (from.has_m_ftarposy()) {
      set_m_ftarposy(from.m_ftarposy());
    }
    if (from.has_m_ftarposz()) {
      set_m_ftarposz(from.m_ftarposz());
    }
    if (from.has_m_fmovespeed()) {
      set_m_fmovespeed(from.m_fmovespeed());
    }
    if (from.has_m_un32curtitleid()) {
      set_m_un32curtitleid(from.m_un32curtitleid());
    }
    if (from.has_m_un32curhp()) {
      set_m_un32curhp(from.m_un32curhp());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_m_u32wingid()) {
      set_m_u32wingid(from.m_u32wingid());
    }
    if (from.has_m_u32medalid()) {
      set_m_u32medalid(from.m_u32medalid());
    }
    if (from.has_m_u32petid()) {
      set_m_u32petid(from.m_u32petid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGSNotifyRoleAppear::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGSNotifyRoleAppear::CopyFrom(const CGSNotifyRoleAppear& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGSNotifyRoleAppear::IsInitialized() const {

  return true;
}

void CGSNotifyRoleAppear::Swap(CGSNotifyRoleAppear* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGSNotifyRoleAppear::InternalSwap(CGSNotifyRoleAppear* other) {
  std::swap(m_un32objid_, other->m_un32objid_);
  m_n32rolenickname_.Swap(&other->m_n32rolenickname_);
  std::swap(m_n32careerid_, other->m_n32careerid_);
  std::swap(m_bgender_, other->m_bgender_);
  std::swap(m_un32weapontypeid_, other->m_un32weapontypeid_);
  std::swap(m_un32coattypeid_, other->m_un32coattypeid_);
  std::swap(m_un32level_, other->m_un32level_);
  std::swap(m_fcurposx_, other->m_fcurposx_);
  std::swap(m_fcurposy_, other->m_fcurposy_);
  std::swap(m_fcurposz_, other->m_fcurposz_);
  std::swap(m_ftarposx_, other->m_ftarposx_);
  std::swap(m_ftarposy_, other->m_ftarposy_);
  std::swap(m_ftarposz_, other->m_ftarposz_);
  std::swap(m_fmovespeed_, other->m_fmovespeed_);
  std::swap(m_un32curtitleid_, other->m_un32curtitleid_);
  std::swap(m_un32curhp_, other->m_un32curhp_);
  std::swap(m_u32wingid_, other->m_u32wingid_);
  std::swap(m_u32medalid_, other->m_u32medalid_);
  std::swap(m_u32petid_, other->m_u32petid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGSNotifyRoleAppear::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGSNotifyRoleAppear_descriptor_;
  metadata.reflection = CGSNotifyRoleAppear_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGSNotifyRoleAppear

// optional uint32 m_un32ObjID = 1;
bool CGSNotifyRoleAppear::has_m_un32objid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGSNotifyRoleAppear::set_has_m_un32objid() {
  _has_bits_[0] |= 0x00000001u;
}
void CGSNotifyRoleAppear::clear_has_m_un32objid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGSNotifyRoleAppear::clear_m_un32objid() {
  m_un32objid_ = 0u;
  clear_has_m_un32objid();
}
 ::google::protobuf::uint32 CGSNotifyRoleAppear::m_un32objid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRoleAppear.m_un32ObjID)
  return m_un32objid_;
}
 void CGSNotifyRoleAppear::set_m_un32objid(::google::protobuf::uint32 value) {
  set_has_m_un32objid();
  m_un32objid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRoleAppear.m_un32ObjID)
}

// optional string m_n32RoleNickName = 2;
bool CGSNotifyRoleAppear::has_m_n32rolenickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CGSNotifyRoleAppear::set_has_m_n32rolenickname() {
  _has_bits_[0] |= 0x00000002u;
}
void CGSNotifyRoleAppear::clear_has_m_n32rolenickname() {
  _has_bits_[0] &= ~0x00000002u;
}
void CGSNotifyRoleAppear::clear_m_n32rolenickname() {
  m_n32rolenickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_m_n32rolenickname();
}
 const ::std::string& CGSNotifyRoleAppear::m_n32rolenickname() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRoleAppear.m_n32RoleNickName)
  return m_n32rolenickname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CGSNotifyRoleAppear::set_m_n32rolenickname(const ::std::string& value) {
  set_has_m_n32rolenickname();
  m_n32rolenickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRoleAppear.m_n32RoleNickName)
}
 void CGSNotifyRoleAppear::set_m_n32rolenickname(const char* value) {
  set_has_m_n32rolenickname();
  m_n32rolenickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetPackage.CGSNotifyRoleAppear.m_n32RoleNickName)
}
 void CGSNotifyRoleAppear::set_m_n32rolenickname(const char* value, size_t size) {
  set_has_m_n32rolenickname();
  m_n32rolenickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetPackage.CGSNotifyRoleAppear.m_n32RoleNickName)
}
 ::std::string* CGSNotifyRoleAppear::mutable_m_n32rolenickname() {
  set_has_m_n32rolenickname();
  // @@protoc_insertion_point(field_mutable:NetPackage.CGSNotifyRoleAppear.m_n32RoleNickName)
  return m_n32rolenickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CGSNotifyRoleAppear::release_m_n32rolenickname() {
  clear_has_m_n32rolenickname();
  return m_n32rolenickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CGSNotifyRoleAppear::set_allocated_m_n32rolenickname(::std::string* m_n32rolenickname) {
  if (m_n32rolenickname != NULL) {
    set_has_m_n32rolenickname();
  } else {
    clear_has_m_n32rolenickname();
  }
  m_n32rolenickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), m_n32rolenickname);
  // @@protoc_insertion_point(field_set_allocated:NetPackage.CGSNotifyRoleAppear.m_n32RoleNickName)
}

// optional int32 m_n32CareerID = 3;
bool CGSNotifyRoleAppear::has_m_n32careerid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CGSNotifyRoleAppear::set_has_m_n32careerid() {
  _has_bits_[0] |= 0x00000004u;
}
void CGSNotifyRoleAppear::clear_has_m_n32careerid() {
  _has_bits_[0] &= ~0x00000004u;
}
void CGSNotifyRoleAppear::clear_m_n32careerid() {
  m_n32careerid_ = 0;
  clear_has_m_n32careerid();
}
 ::google::protobuf::int32 CGSNotifyRoleAppear::m_n32careerid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRoleAppear.m_n32CareerID)
  return m_n32careerid_;
}
 void CGSNotifyRoleAppear::set_m_n32careerid(::google::protobuf::int32 value) {
  set_has_m_n32careerid();
  m_n32careerid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRoleAppear.m_n32CareerID)
}

// optional bool m_bGender = 4;
bool CGSNotifyRoleAppear::has_m_bgender() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CGSNotifyRoleAppear::set_has_m_bgender() {
  _has_bits_[0] |= 0x00000008u;
}
void CGSNotifyRoleAppear::clear_has_m_bgender() {
  _has_bits_[0] &= ~0x00000008u;
}
void CGSNotifyRoleAppear::clear_m_bgender() {
  m_bgender_ = false;
  clear_has_m_bgender();
}
 bool CGSNotifyRoleAppear::m_bgender() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRoleAppear.m_bGender)
  return m_bgender_;
}
 void CGSNotifyRoleAppear::set_m_bgender(bool value) {
  set_has_m_bgender();
  m_bgender_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRoleAppear.m_bGender)
}

// optional uint32 m_un32WeaponTypeID = 5;
bool CGSNotifyRoleAppear::has_m_un32weapontypeid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CGSNotifyRoleAppear::set_has_m_un32weapontypeid() {
  _has_bits_[0] |= 0x00000010u;
}
void CGSNotifyRoleAppear::clear_has_m_un32weapontypeid() {
  _has_bits_[0] &= ~0x00000010u;
}
void CGSNotifyRoleAppear::clear_m_un32weapontypeid() {
  m_un32weapontypeid_ = 0u;
  clear_has_m_un32weapontypeid();
}
 ::google::protobuf::uint32 CGSNotifyRoleAppear::m_un32weapontypeid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRoleAppear.m_un32WeaponTypeID)
  return m_un32weapontypeid_;
}
 void CGSNotifyRoleAppear::set_m_un32weapontypeid(::google::protobuf::uint32 value) {
  set_has_m_un32weapontypeid();
  m_un32weapontypeid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRoleAppear.m_un32WeaponTypeID)
}

// optional uint32 m_un32CoatTypeID = 6;
bool CGSNotifyRoleAppear::has_m_un32coattypeid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CGSNotifyRoleAppear::set_has_m_un32coattypeid() {
  _has_bits_[0] |= 0x00000020u;
}
void CGSNotifyRoleAppear::clear_has_m_un32coattypeid() {
  _has_bits_[0] &= ~0x00000020u;
}
void CGSNotifyRoleAppear::clear_m_un32coattypeid() {
  m_un32coattypeid_ = 0u;
  clear_has_m_un32coattypeid();
}
 ::google::protobuf::uint32 CGSNotifyRoleAppear::m_un32coattypeid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRoleAppear.m_un32CoatTypeID)
  return m_un32coattypeid_;
}
 void CGSNotifyRoleAppear::set_m_un32coattypeid(::google::protobuf::uint32 value) {
  set_has_m_un32coattypeid();
  m_un32coattypeid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRoleAppear.m_un32CoatTypeID)
}

// optional uint32 m_un32Level = 7;
bool CGSNotifyRoleAppear::has_m_un32level() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CGSNotifyRoleAppear::set_has_m_un32level() {
  _has_bits_[0] |= 0x00000040u;
}
void CGSNotifyRoleAppear::clear_has_m_un32level() {
  _has_bits_[0] &= ~0x00000040u;
}
void CGSNotifyRoleAppear::clear_m_un32level() {
  m_un32level_ = 0u;
  clear_has_m_un32level();
}
 ::google::protobuf::uint32 CGSNotifyRoleAppear::m_un32level() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRoleAppear.m_un32Level)
  return m_un32level_;
}
 void CGSNotifyRoleAppear::set_m_un32level(::google::protobuf::uint32 value) {
  set_has_m_un32level();
  m_un32level_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRoleAppear.m_un32Level)
}

// optional float m_fCurPosX = 8;
bool CGSNotifyRoleAppear::has_m_fcurposx() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CGSNotifyRoleAppear::set_has_m_fcurposx() {
  _has_bits_[0] |= 0x00000080u;
}
void CGSNotifyRoleAppear::clear_has_m_fcurposx() {
  _has_bits_[0] &= ~0x00000080u;
}
void CGSNotifyRoleAppear::clear_m_fcurposx() {
  m_fcurposx_ = 0;
  clear_has_m_fcurposx();
}
 float CGSNotifyRoleAppear::m_fcurposx() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRoleAppear.m_fCurPosX)
  return m_fcurposx_;
}
 void CGSNotifyRoleAppear::set_m_fcurposx(float value) {
  set_has_m_fcurposx();
  m_fcurposx_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRoleAppear.m_fCurPosX)
}

// optional float m_fCurPosY = 9;
bool CGSNotifyRoleAppear::has_m_fcurposy() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void CGSNotifyRoleAppear::set_has_m_fcurposy() {
  _has_bits_[0] |= 0x00000100u;
}
void CGSNotifyRoleAppear::clear_has_m_fcurposy() {
  _has_bits_[0] &= ~0x00000100u;
}
void CGSNotifyRoleAppear::clear_m_fcurposy() {
  m_fcurposy_ = 0;
  clear_has_m_fcurposy();
}
 float CGSNotifyRoleAppear::m_fcurposy() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRoleAppear.m_fCurPosY)
  return m_fcurposy_;
}
 void CGSNotifyRoleAppear::set_m_fcurposy(float value) {
  set_has_m_fcurposy();
  m_fcurposy_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRoleAppear.m_fCurPosY)
}

// optional float m_fCurPosZ = 10;
bool CGSNotifyRoleAppear::has_m_fcurposz() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void CGSNotifyRoleAppear::set_has_m_fcurposz() {
  _has_bits_[0] |= 0x00000200u;
}
void CGSNotifyRoleAppear::clear_has_m_fcurposz() {
  _has_bits_[0] &= ~0x00000200u;
}
void CGSNotifyRoleAppear::clear_m_fcurposz() {
  m_fcurposz_ = 0;
  clear_has_m_fcurposz();
}
 float CGSNotifyRoleAppear::m_fcurposz() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRoleAppear.m_fCurPosZ)
  return m_fcurposz_;
}
 void CGSNotifyRoleAppear::set_m_fcurposz(float value) {
  set_has_m_fcurposz();
  m_fcurposz_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRoleAppear.m_fCurPosZ)
}

// optional float m_fTarPosX = 11;
bool CGSNotifyRoleAppear::has_m_ftarposx() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void CGSNotifyRoleAppear::set_has_m_ftarposx() {
  _has_bits_[0] |= 0x00000400u;
}
void CGSNotifyRoleAppear::clear_has_m_ftarposx() {
  _has_bits_[0] &= ~0x00000400u;
}
void CGSNotifyRoleAppear::clear_m_ftarposx() {
  m_ftarposx_ = 0;
  clear_has_m_ftarposx();
}
 float CGSNotifyRoleAppear::m_ftarposx() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRoleAppear.m_fTarPosX)
  return m_ftarposx_;
}
 void CGSNotifyRoleAppear::set_m_ftarposx(float value) {
  set_has_m_ftarposx();
  m_ftarposx_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRoleAppear.m_fTarPosX)
}

// optional float m_fTarPosY = 12;
bool CGSNotifyRoleAppear::has_m_ftarposy() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void CGSNotifyRoleAppear::set_has_m_ftarposy() {
  _has_bits_[0] |= 0x00000800u;
}
void CGSNotifyRoleAppear::clear_has_m_ftarposy() {
  _has_bits_[0] &= ~0x00000800u;
}
void CGSNotifyRoleAppear::clear_m_ftarposy() {
  m_ftarposy_ = 0;
  clear_has_m_ftarposy();
}
 float CGSNotifyRoleAppear::m_ftarposy() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRoleAppear.m_fTarPosY)
  return m_ftarposy_;
}
 void CGSNotifyRoleAppear::set_m_ftarposy(float value) {
  set_has_m_ftarposy();
  m_ftarposy_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRoleAppear.m_fTarPosY)
}

// optional float m_fTarPosZ = 13;
bool CGSNotifyRoleAppear::has_m_ftarposz() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void CGSNotifyRoleAppear::set_has_m_ftarposz() {
  _has_bits_[0] |= 0x00001000u;
}
void CGSNotifyRoleAppear::clear_has_m_ftarposz() {
  _has_bits_[0] &= ~0x00001000u;
}
void CGSNotifyRoleAppear::clear_m_ftarposz() {
  m_ftarposz_ = 0;
  clear_has_m_ftarposz();
}
 float CGSNotifyRoleAppear::m_ftarposz() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRoleAppear.m_fTarPosZ)
  return m_ftarposz_;
}
 void CGSNotifyRoleAppear::set_m_ftarposz(float value) {
  set_has_m_ftarposz();
  m_ftarposz_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRoleAppear.m_fTarPosZ)
}

// optional float m_fMoveSpeed = 14;
bool CGSNotifyRoleAppear::has_m_fmovespeed() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void CGSNotifyRoleAppear::set_has_m_fmovespeed() {
  _has_bits_[0] |= 0x00002000u;
}
void CGSNotifyRoleAppear::clear_has_m_fmovespeed() {
  _has_bits_[0] &= ~0x00002000u;
}
void CGSNotifyRoleAppear::clear_m_fmovespeed() {
  m_fmovespeed_ = 0;
  clear_has_m_fmovespeed();
}
 float CGSNotifyRoleAppear::m_fmovespeed() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRoleAppear.m_fMoveSpeed)
  return m_fmovespeed_;
}
 void CGSNotifyRoleAppear::set_m_fmovespeed(float value) {
  set_has_m_fmovespeed();
  m_fmovespeed_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRoleAppear.m_fMoveSpeed)
}

// optional uint32 m_un32CurTitleID = 15;
bool CGSNotifyRoleAppear::has_m_un32curtitleid() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void CGSNotifyRoleAppear::set_has_m_un32curtitleid() {
  _has_bits_[0] |= 0x00004000u;
}
void CGSNotifyRoleAppear::clear_has_m_un32curtitleid() {
  _has_bits_[0] &= ~0x00004000u;
}
void CGSNotifyRoleAppear::clear_m_un32curtitleid() {
  m_un32curtitleid_ = 0u;
  clear_has_m_un32curtitleid();
}
 ::google::protobuf::uint32 CGSNotifyRoleAppear::m_un32curtitleid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRoleAppear.m_un32CurTitleID)
  return m_un32curtitleid_;
}
 void CGSNotifyRoleAppear::set_m_un32curtitleid(::google::protobuf::uint32 value) {
  set_has_m_un32curtitleid();
  m_un32curtitleid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRoleAppear.m_un32CurTitleID)
}

// optional uint32 m_un32CurHp = 16;
bool CGSNotifyRoleAppear::has_m_un32curhp() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void CGSNotifyRoleAppear::set_has_m_un32curhp() {
  _has_bits_[0] |= 0x00008000u;
}
void CGSNotifyRoleAppear::clear_has_m_un32curhp() {
  _has_bits_[0] &= ~0x00008000u;
}
void CGSNotifyRoleAppear::clear_m_un32curhp() {
  m_un32curhp_ = 0u;
  clear_has_m_un32curhp();
}
 ::google::protobuf::uint32 CGSNotifyRoleAppear::m_un32curhp() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRoleAppear.m_un32CurHp)
  return m_un32curhp_;
}
 void CGSNotifyRoleAppear::set_m_un32curhp(::google::protobuf::uint32 value) {
  set_has_m_un32curhp();
  m_un32curhp_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRoleAppear.m_un32CurHp)
}

// optional uint32 m_u32WingID = 17;
bool CGSNotifyRoleAppear::has_m_u32wingid() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void CGSNotifyRoleAppear::set_has_m_u32wingid() {
  _has_bits_[0] |= 0x00010000u;
}
void CGSNotifyRoleAppear::clear_has_m_u32wingid() {
  _has_bits_[0] &= ~0x00010000u;
}
void CGSNotifyRoleAppear::clear_m_u32wingid() {
  m_u32wingid_ = 0u;
  clear_has_m_u32wingid();
}
 ::google::protobuf::uint32 CGSNotifyRoleAppear::m_u32wingid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRoleAppear.m_u32WingID)
  return m_u32wingid_;
}
 void CGSNotifyRoleAppear::set_m_u32wingid(::google::protobuf::uint32 value) {
  set_has_m_u32wingid();
  m_u32wingid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRoleAppear.m_u32WingID)
}

// optional uint32 m_u32MedalID = 18;
bool CGSNotifyRoleAppear::has_m_u32medalid() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void CGSNotifyRoleAppear::set_has_m_u32medalid() {
  _has_bits_[0] |= 0x00020000u;
}
void CGSNotifyRoleAppear::clear_has_m_u32medalid() {
  _has_bits_[0] &= ~0x00020000u;
}
void CGSNotifyRoleAppear::clear_m_u32medalid() {
  m_u32medalid_ = 0u;
  clear_has_m_u32medalid();
}
 ::google::protobuf::uint32 CGSNotifyRoleAppear::m_u32medalid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRoleAppear.m_u32MedalID)
  return m_u32medalid_;
}
 void CGSNotifyRoleAppear::set_m_u32medalid(::google::protobuf::uint32 value) {
  set_has_m_u32medalid();
  m_u32medalid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRoleAppear.m_u32MedalID)
}

// optional uint32 m_u32PetID = 19;
bool CGSNotifyRoleAppear::has_m_u32petid() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void CGSNotifyRoleAppear::set_has_m_u32petid() {
  _has_bits_[0] |= 0x00040000u;
}
void CGSNotifyRoleAppear::clear_has_m_u32petid() {
  _has_bits_[0] &= ~0x00040000u;
}
void CGSNotifyRoleAppear::clear_m_u32petid() {
  m_u32petid_ = 0u;
  clear_has_m_u32petid();
}
 ::google::protobuf::uint32 CGSNotifyRoleAppear::m_u32petid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRoleAppear.m_u32PetID)
  return m_u32petid_;
}
 void CGSNotifyRoleAppear::set_m_u32petid(::google::protobuf::uint32 value) {
  set_has_m_u32petid();
  m_u32petid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRoleAppear.m_u32PetID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGSObjectDisappear::kObjNumFieldNumber;
const int CGSObjectDisappear::kMUn32ObjIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGSObjectDisappear::CGSObjectDisappear()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGSObjectDisappear)
}

void CGSObjectDisappear::InitAsDefaultInstance() {
}

CGSObjectDisappear::CGSObjectDisappear(const CGSObjectDisappear& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGSObjectDisappear)
}

void CGSObjectDisappear::SharedCtor() {
  _cached_size_ = 0;
  objnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGSObjectDisappear::~CGSObjectDisappear() {
  // @@protoc_insertion_point(destructor:NetPackage.CGSObjectDisappear)
  SharedDtor();
}

void CGSObjectDisappear::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGSObjectDisappear::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGSObjectDisappear::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGSObjectDisappear_descriptor_;
}

const CGSObjectDisappear& CGSObjectDisappear::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGSObjectDisappear* CGSObjectDisappear::default_instance_ = NULL;

CGSObjectDisappear* CGSObjectDisappear::New(::google::protobuf::Arena* arena) const {
  CGSObjectDisappear* n = new CGSObjectDisappear;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGSObjectDisappear::Clear() {
  objnum_ = 0u;
  m_un32objid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGSObjectDisappear::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGSObjectDisappear)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ObjNum = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &objnum_)));
          set_has_objnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_m_un32ObjID;
        break;
      }

      // repeated uint32 m_un32ObjID = 2 [packed = true];
      case 2: {
        if (tag == 18) {
         parse_m_un32ObjID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_m_un32objid())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18, input, this->mutable_m_un32objid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGSObjectDisappear)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGSObjectDisappear)
  return false;
#undef DO_
}

void CGSObjectDisappear::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGSObjectDisappear)
  // optional uint32 ObjNum = 1;
  if (has_objnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->objnum(), output);
  }

  // repeated uint32 m_un32ObjID = 2 [packed = true];
  if (this->m_un32objid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_m_un32objid_cached_byte_size_);
  }
  for (int i = 0; i < this->m_un32objid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->m_un32objid(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGSObjectDisappear)
}

::google::protobuf::uint8* CGSObjectDisappear::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGSObjectDisappear)
  // optional uint32 ObjNum = 1;
  if (has_objnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->objnum(), target);
  }

  // repeated uint32 m_un32ObjID = 2 [packed = true];
  if (this->m_un32objid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _m_un32objid_cached_byte_size_, target);
  }
  for (int i = 0; i < this->m_un32objid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->m_un32objid(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGSObjectDisappear)
  return target;
}

int CGSObjectDisappear::ByteSize() const {
  int total_size = 0;

  // optional uint32 ObjNum = 1;
  if (has_objnum()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->objnum());
  }

  // repeated uint32 m_un32ObjID = 2 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->m_un32objid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->m_un32objid(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _m_un32objid_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGSObjectDisappear::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGSObjectDisappear* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGSObjectDisappear>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGSObjectDisappear::MergeFrom(const CGSObjectDisappear& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  m_un32objid_.MergeFrom(from.m_un32objid_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_objnum()) {
      set_objnum(from.objnum());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGSObjectDisappear::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGSObjectDisappear::CopyFrom(const CGSObjectDisappear& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGSObjectDisappear::IsInitialized() const {

  return true;
}

void CGSObjectDisappear::Swap(CGSObjectDisappear* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGSObjectDisappear::InternalSwap(CGSObjectDisappear* other) {
  std::swap(objnum_, other->objnum_);
  m_un32objid_.UnsafeArenaSwap(&other->m_un32objid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGSObjectDisappear::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGSObjectDisappear_descriptor_;
  metadata.reflection = CGSObjectDisappear_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGSObjectDisappear

// optional uint32 ObjNum = 1;
bool CGSObjectDisappear::has_objnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGSObjectDisappear::set_has_objnum() {
  _has_bits_[0] |= 0x00000001u;
}
void CGSObjectDisappear::clear_has_objnum() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGSObjectDisappear::clear_objnum() {
  objnum_ = 0u;
  clear_has_objnum();
}
 ::google::protobuf::uint32 CGSObjectDisappear::objnum() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSObjectDisappear.ObjNum)
  return objnum_;
}
 void CGSObjectDisappear::set_objnum(::google::protobuf::uint32 value) {
  set_has_objnum();
  objnum_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSObjectDisappear.ObjNum)
}

// repeated uint32 m_un32ObjID = 2 [packed = true];
int CGSObjectDisappear::m_un32objid_size() const {
  return m_un32objid_.size();
}
void CGSObjectDisappear::clear_m_un32objid() {
  m_un32objid_.Clear();
}
 ::google::protobuf::uint32 CGSObjectDisappear::m_un32objid(int index) const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSObjectDisappear.m_un32ObjID)
  return m_un32objid_.Get(index);
}
 void CGSObjectDisappear::set_m_un32objid(int index, ::google::protobuf::uint32 value) {
  m_un32objid_.Set(index, value);
  // @@protoc_insertion_point(field_set:NetPackage.CGSObjectDisappear.m_un32ObjID)
}
 void CGSObjectDisappear::add_m_un32objid(::google::protobuf::uint32 value) {
  m_un32objid_.Add(value);
  // @@protoc_insertion_point(field_add:NetPackage.CGSObjectDisappear.m_un32ObjID)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CGSObjectDisappear::m_un32objid() const {
  // @@protoc_insertion_point(field_list:NetPackage.CGSObjectDisappear.m_un32ObjID)
  return m_un32objid_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CGSObjectDisappear::mutable_m_un32objid() {
  // @@protoc_insertion_point(field_mutable_list:NetPackage.CGSObjectDisappear.m_un32ObjID)
  return &m_un32objid_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCAskLogout::CGCAskLogout()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGCAskLogout)
}

void CGCAskLogout::InitAsDefaultInstance() {
}

CGCAskLogout::CGCAskLogout(const CGCAskLogout& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGCAskLogout)
}

void CGCAskLogout::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCAskLogout::~CGCAskLogout() {
  // @@protoc_insertion_point(destructor:NetPackage.CGCAskLogout)
  SharedDtor();
}

void CGCAskLogout::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGCAskLogout::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCAskLogout::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCAskLogout_descriptor_;
}

const CGCAskLogout& CGCAskLogout::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGCAskLogout* CGCAskLogout::default_instance_ = NULL;

CGCAskLogout* CGCAskLogout::New(::google::protobuf::Arena* arena) const {
  CGCAskLogout* n = new CGCAskLogout;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCAskLogout::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCAskLogout::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGCAskLogout)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGCAskLogout)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGCAskLogout)
  return false;
#undef DO_
}

void CGCAskLogout::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGCAskLogout)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGCAskLogout)
}

::google::protobuf::uint8* CGCAskLogout::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGCAskLogout)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGCAskLogout)
  return target;
}

int CGCAskLogout::ByteSize() const {
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCAskLogout::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCAskLogout* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCAskLogout>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCAskLogout::MergeFrom(const CGCAskLogout& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCAskLogout::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCAskLogout::CopyFrom(const CGCAskLogout& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCAskLogout::IsInitialized() const {

  return true;
}

void CGCAskLogout::Swap(CGCAskLogout* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCAskLogout::InternalSwap(CGCAskLogout* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCAskLogout::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCAskLogout_descriptor_;
  metadata.reflection = CGCAskLogout_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCAskLogout

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGSObjectMove::kMUn32ObjIDFieldNumber;
const int CGSObjectMove::kMFCurPosXFieldNumber;
const int CGSObjectMove::kMFCurPosYFieldNumber;
const int CGSObjectMove::kMFCurPosZFieldNumber;
const int CGSObjectMove::kMFTarPosXFieldNumber;
const int CGSObjectMove::kMFTarPosYFieldNumber;
const int CGSObjectMove::kMFTarPosZFieldNumber;
const int CGSObjectMove::kMFMoveSpeedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGSObjectMove::CGSObjectMove()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGSObjectMove)
}

void CGSObjectMove::InitAsDefaultInstance() {
}

CGSObjectMove::CGSObjectMove(const CGSObjectMove& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGSObjectMove)
}

void CGSObjectMove::SharedCtor() {
  _cached_size_ = 0;
  m_un32objid_ = 0u;
  m_fcurposx_ = 0;
  m_fcurposy_ = 0;
  m_fcurposz_ = 0;
  m_ftarposx_ = 0;
  m_ftarposy_ = 0;
  m_ftarposz_ = 0;
  m_fmovespeed_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGSObjectMove::~CGSObjectMove() {
  // @@protoc_insertion_point(destructor:NetPackage.CGSObjectMove)
  SharedDtor();
}

void CGSObjectMove::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGSObjectMove::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGSObjectMove::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGSObjectMove_descriptor_;
}

const CGSObjectMove& CGSObjectMove::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGSObjectMove* CGSObjectMove::default_instance_ = NULL;

CGSObjectMove* CGSObjectMove::New(::google::protobuf::Arena* arena) const {
  CGSObjectMove* n = new CGSObjectMove;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGSObjectMove::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CGSObjectMove*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(m_un32objid_, m_fmovespeed_);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGSObjectMove::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGSObjectMove)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 m_un32ObjID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32objid_)));
          set_has_m_un32objid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_m_fCurPosX;
        break;
      }

      // optional float m_fCurPosX = 2;
      case 2: {
        if (tag == 21) {
         parse_m_fCurPosX:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fcurposx_)));
          set_has_m_fcurposx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_m_fCurPosY;
        break;
      }

      // optional float m_fCurPosY = 3;
      case 3: {
        if (tag == 29) {
         parse_m_fCurPosY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fcurposy_)));
          set_has_m_fcurposy();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_m_fCurPosZ;
        break;
      }

      // optional float m_fCurPosZ = 4;
      case 4: {
        if (tag == 37) {
         parse_m_fCurPosZ:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fcurposz_)));
          set_has_m_fcurposz();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_m_fTarPosX;
        break;
      }

      // optional float m_fTarPosX = 5;
      case 5: {
        if (tag == 45) {
         parse_m_fTarPosX:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_ftarposx_)));
          set_has_m_ftarposx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_m_fTarPosY;
        break;
      }

      // optional float m_fTarPosY = 6;
      case 6: {
        if (tag == 53) {
         parse_m_fTarPosY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_ftarposy_)));
          set_has_m_ftarposy();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(61)) goto parse_m_fTarPosZ;
        break;
      }

      // optional float m_fTarPosZ = 7;
      case 7: {
        if (tag == 61) {
         parse_m_fTarPosZ:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_ftarposz_)));
          set_has_m_ftarposz();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(69)) goto parse_m_fMoveSpeed;
        break;
      }

      // optional float m_fMoveSpeed = 8;
      case 8: {
        if (tag == 69) {
         parse_m_fMoveSpeed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fmovespeed_)));
          set_has_m_fmovespeed();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGSObjectMove)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGSObjectMove)
  return false;
#undef DO_
}

void CGSObjectMove::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGSObjectMove)
  // optional uint32 m_un32ObjID = 1;
  if (has_m_un32objid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->m_un32objid(), output);
  }

  // optional float m_fCurPosX = 2;
  if (has_m_fcurposx()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->m_fcurposx(), output);
  }

  // optional float m_fCurPosY = 3;
  if (has_m_fcurposy()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->m_fcurposy(), output);
  }

  // optional float m_fCurPosZ = 4;
  if (has_m_fcurposz()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->m_fcurposz(), output);
  }

  // optional float m_fTarPosX = 5;
  if (has_m_ftarposx()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->m_ftarposx(), output);
  }

  // optional float m_fTarPosY = 6;
  if (has_m_ftarposy()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->m_ftarposy(), output);
  }

  // optional float m_fTarPosZ = 7;
  if (has_m_ftarposz()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->m_ftarposz(), output);
  }

  // optional float m_fMoveSpeed = 8;
  if (has_m_fmovespeed()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->m_fmovespeed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGSObjectMove)
}

::google::protobuf::uint8* CGSObjectMove::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGSObjectMove)
  // optional uint32 m_un32ObjID = 1;
  if (has_m_un32objid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->m_un32objid(), target);
  }

  // optional float m_fCurPosX = 2;
  if (has_m_fcurposx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->m_fcurposx(), target);
  }

  // optional float m_fCurPosY = 3;
  if (has_m_fcurposy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->m_fcurposy(), target);
  }

  // optional float m_fCurPosZ = 4;
  if (has_m_fcurposz()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->m_fcurposz(), target);
  }

  // optional float m_fTarPosX = 5;
  if (has_m_ftarposx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->m_ftarposx(), target);
  }

  // optional float m_fTarPosY = 6;
  if (has_m_ftarposy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->m_ftarposy(), target);
  }

  // optional float m_fTarPosZ = 7;
  if (has_m_ftarposz()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->m_ftarposz(), target);
  }

  // optional float m_fMoveSpeed = 8;
  if (has_m_fmovespeed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->m_fmovespeed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGSObjectMove)
  return target;
}

int CGSObjectMove::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional uint32 m_un32ObjID = 1;
    if (has_m_un32objid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32objid());
    }

    // optional float m_fCurPosX = 2;
    if (has_m_fcurposx()) {
      total_size += 1 + 4;
    }

    // optional float m_fCurPosY = 3;
    if (has_m_fcurposy()) {
      total_size += 1 + 4;
    }

    // optional float m_fCurPosZ = 4;
    if (has_m_fcurposz()) {
      total_size += 1 + 4;
    }

    // optional float m_fTarPosX = 5;
    if (has_m_ftarposx()) {
      total_size += 1 + 4;
    }

    // optional float m_fTarPosY = 6;
    if (has_m_ftarposy()) {
      total_size += 1 + 4;
    }

    // optional float m_fTarPosZ = 7;
    if (has_m_ftarposz()) {
      total_size += 1 + 4;
    }

    // optional float m_fMoveSpeed = 8;
    if (has_m_fmovespeed()) {
      total_size += 1 + 4;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGSObjectMove::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGSObjectMove* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGSObjectMove>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGSObjectMove::MergeFrom(const CGSObjectMove& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_un32objid()) {
      set_m_un32objid(from.m_un32objid());
    }
    if (from.has_m_fcurposx()) {
      set_m_fcurposx(from.m_fcurposx());
    }
    if (from.has_m_fcurposy()) {
      set_m_fcurposy(from.m_fcurposy());
    }
    if (from.has_m_fcurposz()) {
      set_m_fcurposz(from.m_fcurposz());
    }
    if (from.has_m_ftarposx()) {
      set_m_ftarposx(from.m_ftarposx());
    }
    if (from.has_m_ftarposy()) {
      set_m_ftarposy(from.m_ftarposy());
    }
    if (from.has_m_ftarposz()) {
      set_m_ftarposz(from.m_ftarposz());
    }
    if (from.has_m_fmovespeed()) {
      set_m_fmovespeed(from.m_fmovespeed());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGSObjectMove::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGSObjectMove::CopyFrom(const CGSObjectMove& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGSObjectMove::IsInitialized() const {

  return true;
}

void CGSObjectMove::Swap(CGSObjectMove* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGSObjectMove::InternalSwap(CGSObjectMove* other) {
  std::swap(m_un32objid_, other->m_un32objid_);
  std::swap(m_fcurposx_, other->m_fcurposx_);
  std::swap(m_fcurposy_, other->m_fcurposy_);
  std::swap(m_fcurposz_, other->m_fcurposz_);
  std::swap(m_ftarposx_, other->m_ftarposx_);
  std::swap(m_ftarposy_, other->m_ftarposy_);
  std::swap(m_ftarposz_, other->m_ftarposz_);
  std::swap(m_fmovespeed_, other->m_fmovespeed_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGSObjectMove::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGSObjectMove_descriptor_;
  metadata.reflection = CGSObjectMove_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGSObjectMove

// optional uint32 m_un32ObjID = 1;
bool CGSObjectMove::has_m_un32objid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGSObjectMove::set_has_m_un32objid() {
  _has_bits_[0] |= 0x00000001u;
}
void CGSObjectMove::clear_has_m_un32objid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGSObjectMove::clear_m_un32objid() {
  m_un32objid_ = 0u;
  clear_has_m_un32objid();
}
 ::google::protobuf::uint32 CGSObjectMove::m_un32objid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSObjectMove.m_un32ObjID)
  return m_un32objid_;
}
 void CGSObjectMove::set_m_un32objid(::google::protobuf::uint32 value) {
  set_has_m_un32objid();
  m_un32objid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSObjectMove.m_un32ObjID)
}

// optional float m_fCurPosX = 2;
bool CGSObjectMove::has_m_fcurposx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CGSObjectMove::set_has_m_fcurposx() {
  _has_bits_[0] |= 0x00000002u;
}
void CGSObjectMove::clear_has_m_fcurposx() {
  _has_bits_[0] &= ~0x00000002u;
}
void CGSObjectMove::clear_m_fcurposx() {
  m_fcurposx_ = 0;
  clear_has_m_fcurposx();
}
 float CGSObjectMove::m_fcurposx() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSObjectMove.m_fCurPosX)
  return m_fcurposx_;
}
 void CGSObjectMove::set_m_fcurposx(float value) {
  set_has_m_fcurposx();
  m_fcurposx_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSObjectMove.m_fCurPosX)
}

// optional float m_fCurPosY = 3;
bool CGSObjectMove::has_m_fcurposy() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CGSObjectMove::set_has_m_fcurposy() {
  _has_bits_[0] |= 0x00000004u;
}
void CGSObjectMove::clear_has_m_fcurposy() {
  _has_bits_[0] &= ~0x00000004u;
}
void CGSObjectMove::clear_m_fcurposy() {
  m_fcurposy_ = 0;
  clear_has_m_fcurposy();
}
 float CGSObjectMove::m_fcurposy() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSObjectMove.m_fCurPosY)
  return m_fcurposy_;
}
 void CGSObjectMove::set_m_fcurposy(float value) {
  set_has_m_fcurposy();
  m_fcurposy_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSObjectMove.m_fCurPosY)
}

// optional float m_fCurPosZ = 4;
bool CGSObjectMove::has_m_fcurposz() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CGSObjectMove::set_has_m_fcurposz() {
  _has_bits_[0] |= 0x00000008u;
}
void CGSObjectMove::clear_has_m_fcurposz() {
  _has_bits_[0] &= ~0x00000008u;
}
void CGSObjectMove::clear_m_fcurposz() {
  m_fcurposz_ = 0;
  clear_has_m_fcurposz();
}
 float CGSObjectMove::m_fcurposz() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSObjectMove.m_fCurPosZ)
  return m_fcurposz_;
}
 void CGSObjectMove::set_m_fcurposz(float value) {
  set_has_m_fcurposz();
  m_fcurposz_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSObjectMove.m_fCurPosZ)
}

// optional float m_fTarPosX = 5;
bool CGSObjectMove::has_m_ftarposx() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CGSObjectMove::set_has_m_ftarposx() {
  _has_bits_[0] |= 0x00000010u;
}
void CGSObjectMove::clear_has_m_ftarposx() {
  _has_bits_[0] &= ~0x00000010u;
}
void CGSObjectMove::clear_m_ftarposx() {
  m_ftarposx_ = 0;
  clear_has_m_ftarposx();
}
 float CGSObjectMove::m_ftarposx() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSObjectMove.m_fTarPosX)
  return m_ftarposx_;
}
 void CGSObjectMove::set_m_ftarposx(float value) {
  set_has_m_ftarposx();
  m_ftarposx_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSObjectMove.m_fTarPosX)
}

// optional float m_fTarPosY = 6;
bool CGSObjectMove::has_m_ftarposy() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CGSObjectMove::set_has_m_ftarposy() {
  _has_bits_[0] |= 0x00000020u;
}
void CGSObjectMove::clear_has_m_ftarposy() {
  _has_bits_[0] &= ~0x00000020u;
}
void CGSObjectMove::clear_m_ftarposy() {
  m_ftarposy_ = 0;
  clear_has_m_ftarposy();
}
 float CGSObjectMove::m_ftarposy() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSObjectMove.m_fTarPosY)
  return m_ftarposy_;
}
 void CGSObjectMove::set_m_ftarposy(float value) {
  set_has_m_ftarposy();
  m_ftarposy_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSObjectMove.m_fTarPosY)
}

// optional float m_fTarPosZ = 7;
bool CGSObjectMove::has_m_ftarposz() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CGSObjectMove::set_has_m_ftarposz() {
  _has_bits_[0] |= 0x00000040u;
}
void CGSObjectMove::clear_has_m_ftarposz() {
  _has_bits_[0] &= ~0x00000040u;
}
void CGSObjectMove::clear_m_ftarposz() {
  m_ftarposz_ = 0;
  clear_has_m_ftarposz();
}
 float CGSObjectMove::m_ftarposz() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSObjectMove.m_fTarPosZ)
  return m_ftarposz_;
}
 void CGSObjectMove::set_m_ftarposz(float value) {
  set_has_m_ftarposz();
  m_ftarposz_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSObjectMove.m_fTarPosZ)
}

// optional float m_fMoveSpeed = 8;
bool CGSObjectMove::has_m_fmovespeed() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CGSObjectMove::set_has_m_fmovespeed() {
  _has_bits_[0] |= 0x00000080u;
}
void CGSObjectMove::clear_has_m_fmovespeed() {
  _has_bits_[0] &= ~0x00000080u;
}
void CGSObjectMove::clear_m_fmovespeed() {
  m_fmovespeed_ = 0;
  clear_has_m_fmovespeed();
}
 float CGSObjectMove::m_fmovespeed() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSObjectMove.m_fMoveSpeed)
  return m_fmovespeed_;
}
 void CGSObjectMove::set_m_fmovespeed(float value) {
  set_has_m_fmovespeed();
  m_fmovespeed_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSObjectMove.m_fMoveSpeed)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCAskMove::kMUn32ObjIDFieldNumber;
const int CGCAskMove::kMFCurPosXFieldNumber;
const int CGCAskMove::kMFCurPosYFieldNumber;
const int CGCAskMove::kMFCurPosZFieldNumber;
const int CGCAskMove::kNodeNumFieldNumber;
const int CGCAskMove::kMFTarPosXFieldNumber;
const int CGCAskMove::kMFTarPosYFieldNumber;
const int CGCAskMove::kMFTarPosZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCAskMove::CGCAskMove()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGCAskMove)
}

void CGCAskMove::InitAsDefaultInstance() {
}

CGCAskMove::CGCAskMove(const CGCAskMove& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGCAskMove)
}

void CGCAskMove::SharedCtor() {
  _cached_size_ = 0;
  m_un32objid_ = 0u;
  m_fcurposx_ = 0;
  m_fcurposy_ = 0;
  m_fcurposz_ = 0;
  node_num_ = 0u;
  m_ftarposx_ = 0;
  m_ftarposy_ = 0;
  m_ftarposz_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCAskMove::~CGCAskMove() {
  // @@protoc_insertion_point(destructor:NetPackage.CGCAskMove)
  SharedDtor();
}

void CGCAskMove::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGCAskMove::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCAskMove::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCAskMove_descriptor_;
}

const CGCAskMove& CGCAskMove::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGCAskMove* CGCAskMove::default_instance_ = NULL;

CGCAskMove* CGCAskMove::New(::google::protobuf::Arena* arena) const {
  CGCAskMove* n = new CGCAskMove;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCAskMove::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CGCAskMove*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(m_un32objid_, m_ftarposz_);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCAskMove::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGCAskMove)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 m_un32ObjID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32objid_)));
          set_has_m_un32objid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_m_fCurPosX;
        break;
      }

      // optional float m_fCurPosX = 2;
      case 2: {
        if (tag == 21) {
         parse_m_fCurPosX:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fcurposx_)));
          set_has_m_fcurposx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_m_fCurPosY;
        break;
      }

      // optional float m_fCurPosY = 3;
      case 3: {
        if (tag == 29) {
         parse_m_fCurPosY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fcurposy_)));
          set_has_m_fcurposy();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_m_fCurPosZ;
        break;
      }

      // optional float m_fCurPosZ = 4;
      case 4: {
        if (tag == 37) {
         parse_m_fCurPosZ:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fcurposz_)));
          set_has_m_fcurposz();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_node_num;
        break;
      }

      // optional uint32 node_num = 5;
      case 5: {
        if (tag == 40) {
         parse_node_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &node_num_)));
          set_has_node_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_m_fTarPosX;
        break;
      }

      // optional float m_fTarPosX = 6;
      case 6: {
        if (tag == 53) {
         parse_m_fTarPosX:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_ftarposx_)));
          set_has_m_ftarposx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(61)) goto parse_m_fTarPosY;
        break;
      }

      // optional float m_fTarPosY = 7;
      case 7: {
        if (tag == 61) {
         parse_m_fTarPosY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_ftarposy_)));
          set_has_m_ftarposy();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(69)) goto parse_m_fTarPosZ;
        break;
      }

      // optional float m_fTarPosZ = 8;
      case 8: {
        if (tag == 69) {
         parse_m_fTarPosZ:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_ftarposz_)));
          set_has_m_ftarposz();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGCAskMove)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGCAskMove)
  return false;
#undef DO_
}

void CGCAskMove::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGCAskMove)
  // optional uint32 m_un32ObjID = 1;
  if (has_m_un32objid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->m_un32objid(), output);
  }

  // optional float m_fCurPosX = 2;
  if (has_m_fcurposx()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->m_fcurposx(), output);
  }

  // optional float m_fCurPosY = 3;
  if (has_m_fcurposy()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->m_fcurposy(), output);
  }

  // optional float m_fCurPosZ = 4;
  if (has_m_fcurposz()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->m_fcurposz(), output);
  }

  // optional uint32 node_num = 5;
  if (has_node_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->node_num(), output);
  }

  // optional float m_fTarPosX = 6;
  if (has_m_ftarposx()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->m_ftarposx(), output);
  }

  // optional float m_fTarPosY = 7;
  if (has_m_ftarposy()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->m_ftarposy(), output);
  }

  // optional float m_fTarPosZ = 8;
  if (has_m_ftarposz()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->m_ftarposz(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGCAskMove)
}

::google::protobuf::uint8* CGCAskMove::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGCAskMove)
  // optional uint32 m_un32ObjID = 1;
  if (has_m_un32objid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->m_un32objid(), target);
  }

  // optional float m_fCurPosX = 2;
  if (has_m_fcurposx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->m_fcurposx(), target);
  }

  // optional float m_fCurPosY = 3;
  if (has_m_fcurposy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->m_fcurposy(), target);
  }

  // optional float m_fCurPosZ = 4;
  if (has_m_fcurposz()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->m_fcurposz(), target);
  }

  // optional uint32 node_num = 5;
  if (has_node_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->node_num(), target);
  }

  // optional float m_fTarPosX = 6;
  if (has_m_ftarposx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->m_ftarposx(), target);
  }

  // optional float m_fTarPosY = 7;
  if (has_m_ftarposy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->m_ftarposy(), target);
  }

  // optional float m_fTarPosZ = 8;
  if (has_m_ftarposz()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->m_ftarposz(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGCAskMove)
  return target;
}

int CGCAskMove::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional uint32 m_un32ObjID = 1;
    if (has_m_un32objid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32objid());
    }

    // optional float m_fCurPosX = 2;
    if (has_m_fcurposx()) {
      total_size += 1 + 4;
    }

    // optional float m_fCurPosY = 3;
    if (has_m_fcurposy()) {
      total_size += 1 + 4;
    }

    // optional float m_fCurPosZ = 4;
    if (has_m_fcurposz()) {
      total_size += 1 + 4;
    }

    // optional uint32 node_num = 5;
    if (has_node_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->node_num());
    }

    // optional float m_fTarPosX = 6;
    if (has_m_ftarposx()) {
      total_size += 1 + 4;
    }

    // optional float m_fTarPosY = 7;
    if (has_m_ftarposy()) {
      total_size += 1 + 4;
    }

    // optional float m_fTarPosZ = 8;
    if (has_m_ftarposz()) {
      total_size += 1 + 4;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCAskMove::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCAskMove* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCAskMove>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCAskMove::MergeFrom(const CGCAskMove& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_un32objid()) {
      set_m_un32objid(from.m_un32objid());
    }
    if (from.has_m_fcurposx()) {
      set_m_fcurposx(from.m_fcurposx());
    }
    if (from.has_m_fcurposy()) {
      set_m_fcurposy(from.m_fcurposy());
    }
    if (from.has_m_fcurposz()) {
      set_m_fcurposz(from.m_fcurposz());
    }
    if (from.has_node_num()) {
      set_node_num(from.node_num());
    }
    if (from.has_m_ftarposx()) {
      set_m_ftarposx(from.m_ftarposx());
    }
    if (from.has_m_ftarposy()) {
      set_m_ftarposy(from.m_ftarposy());
    }
    if (from.has_m_ftarposz()) {
      set_m_ftarposz(from.m_ftarposz());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCAskMove::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCAskMove::CopyFrom(const CGCAskMove& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCAskMove::IsInitialized() const {

  return true;
}

void CGCAskMove::Swap(CGCAskMove* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCAskMove::InternalSwap(CGCAskMove* other) {
  std::swap(m_un32objid_, other->m_un32objid_);
  std::swap(m_fcurposx_, other->m_fcurposx_);
  std::swap(m_fcurposy_, other->m_fcurposy_);
  std::swap(m_fcurposz_, other->m_fcurposz_);
  std::swap(node_num_, other->node_num_);
  std::swap(m_ftarposx_, other->m_ftarposx_);
  std::swap(m_ftarposy_, other->m_ftarposy_);
  std::swap(m_ftarposz_, other->m_ftarposz_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCAskMove::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCAskMove_descriptor_;
  metadata.reflection = CGCAskMove_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCAskMove

// optional uint32 m_un32ObjID = 1;
bool CGCAskMove::has_m_un32objid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGCAskMove::set_has_m_un32objid() {
  _has_bits_[0] |= 0x00000001u;
}
void CGCAskMove::clear_has_m_un32objid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGCAskMove::clear_m_un32objid() {
  m_un32objid_ = 0u;
  clear_has_m_un32objid();
}
 ::google::protobuf::uint32 CGCAskMove::m_un32objid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCAskMove.m_un32ObjID)
  return m_un32objid_;
}
 void CGCAskMove::set_m_un32objid(::google::protobuf::uint32 value) {
  set_has_m_un32objid();
  m_un32objid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCAskMove.m_un32ObjID)
}

// optional float m_fCurPosX = 2;
bool CGCAskMove::has_m_fcurposx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CGCAskMove::set_has_m_fcurposx() {
  _has_bits_[0] |= 0x00000002u;
}
void CGCAskMove::clear_has_m_fcurposx() {
  _has_bits_[0] &= ~0x00000002u;
}
void CGCAskMove::clear_m_fcurposx() {
  m_fcurposx_ = 0;
  clear_has_m_fcurposx();
}
 float CGCAskMove::m_fcurposx() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCAskMove.m_fCurPosX)
  return m_fcurposx_;
}
 void CGCAskMove::set_m_fcurposx(float value) {
  set_has_m_fcurposx();
  m_fcurposx_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCAskMove.m_fCurPosX)
}

// optional float m_fCurPosY = 3;
bool CGCAskMove::has_m_fcurposy() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CGCAskMove::set_has_m_fcurposy() {
  _has_bits_[0] |= 0x00000004u;
}
void CGCAskMove::clear_has_m_fcurposy() {
  _has_bits_[0] &= ~0x00000004u;
}
void CGCAskMove::clear_m_fcurposy() {
  m_fcurposy_ = 0;
  clear_has_m_fcurposy();
}
 float CGCAskMove::m_fcurposy() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCAskMove.m_fCurPosY)
  return m_fcurposy_;
}
 void CGCAskMove::set_m_fcurposy(float value) {
  set_has_m_fcurposy();
  m_fcurposy_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCAskMove.m_fCurPosY)
}

// optional float m_fCurPosZ = 4;
bool CGCAskMove::has_m_fcurposz() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CGCAskMove::set_has_m_fcurposz() {
  _has_bits_[0] |= 0x00000008u;
}
void CGCAskMove::clear_has_m_fcurposz() {
  _has_bits_[0] &= ~0x00000008u;
}
void CGCAskMove::clear_m_fcurposz() {
  m_fcurposz_ = 0;
  clear_has_m_fcurposz();
}
 float CGCAskMove::m_fcurposz() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCAskMove.m_fCurPosZ)
  return m_fcurposz_;
}
 void CGCAskMove::set_m_fcurposz(float value) {
  set_has_m_fcurposz();
  m_fcurposz_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCAskMove.m_fCurPosZ)
}

// optional uint32 node_num = 5;
bool CGCAskMove::has_node_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CGCAskMove::set_has_node_num() {
  _has_bits_[0] |= 0x00000010u;
}
void CGCAskMove::clear_has_node_num() {
  _has_bits_[0] &= ~0x00000010u;
}
void CGCAskMove::clear_node_num() {
  node_num_ = 0u;
  clear_has_node_num();
}
 ::google::protobuf::uint32 CGCAskMove::node_num() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCAskMove.node_num)
  return node_num_;
}
 void CGCAskMove::set_node_num(::google::protobuf::uint32 value) {
  set_has_node_num();
  node_num_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCAskMove.node_num)
}

// optional float m_fTarPosX = 6;
bool CGCAskMove::has_m_ftarposx() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CGCAskMove::set_has_m_ftarposx() {
  _has_bits_[0] |= 0x00000020u;
}
void CGCAskMove::clear_has_m_ftarposx() {
  _has_bits_[0] &= ~0x00000020u;
}
void CGCAskMove::clear_m_ftarposx() {
  m_ftarposx_ = 0;
  clear_has_m_ftarposx();
}
 float CGCAskMove::m_ftarposx() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCAskMove.m_fTarPosX)
  return m_ftarposx_;
}
 void CGCAskMove::set_m_ftarposx(float value) {
  set_has_m_ftarposx();
  m_ftarposx_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCAskMove.m_fTarPosX)
}

// optional float m_fTarPosY = 7;
bool CGCAskMove::has_m_ftarposy() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CGCAskMove::set_has_m_ftarposy() {
  _has_bits_[0] |= 0x00000040u;
}
void CGCAskMove::clear_has_m_ftarposy() {
  _has_bits_[0] &= ~0x00000040u;
}
void CGCAskMove::clear_m_ftarposy() {
  m_ftarposy_ = 0;
  clear_has_m_ftarposy();
}
 float CGCAskMove::m_ftarposy() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCAskMove.m_fTarPosY)
  return m_ftarposy_;
}
 void CGCAskMove::set_m_ftarposy(float value) {
  set_has_m_ftarposy();
  m_ftarposy_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCAskMove.m_fTarPosY)
}

// optional float m_fTarPosZ = 8;
bool CGCAskMove::has_m_ftarposz() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CGCAskMove::set_has_m_ftarposz() {
  _has_bits_[0] |= 0x00000080u;
}
void CGCAskMove::clear_has_m_ftarposz() {
  _has_bits_[0] &= ~0x00000080u;
}
void CGCAskMove::clear_m_ftarposz() {
  m_ftarposz_ = 0;
  clear_has_m_ftarposz();
}
 float CGCAskMove::m_ftarposz() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCAskMove.m_fTarPosZ)
  return m_ftarposz_;
}
 void CGCAskMove::set_m_ftarposz(float value) {
  set_has_m_ftarposz();
  m_ftarposz_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCAskMove.m_fTarPosZ)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGSNotifyRoleProfileChange::kMUn32ObjIDFieldNumber;
const int CGSNotifyRoleProfileChange::kMUn32WeaponTypeIDFieldNumber;
const int CGSNotifyRoleProfileChange::kMUn32CoatTypeIDFieldNumber;
const int CGSNotifyRoleProfileChange::kMUn32LevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGSNotifyRoleProfileChange::CGSNotifyRoleProfileChange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGSNotifyRoleProfileChange)
}

void CGSNotifyRoleProfileChange::InitAsDefaultInstance() {
}

CGSNotifyRoleProfileChange::CGSNotifyRoleProfileChange(const CGSNotifyRoleProfileChange& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGSNotifyRoleProfileChange)
}

void CGSNotifyRoleProfileChange::SharedCtor() {
  _cached_size_ = 0;
  m_un32objid_ = 0u;
  m_un32weapontypeid_ = 0u;
  m_un32coattypeid_ = 0u;
  m_un32level_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGSNotifyRoleProfileChange::~CGSNotifyRoleProfileChange() {
  // @@protoc_insertion_point(destructor:NetPackage.CGSNotifyRoleProfileChange)
  SharedDtor();
}

void CGSNotifyRoleProfileChange::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGSNotifyRoleProfileChange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGSNotifyRoleProfileChange::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGSNotifyRoleProfileChange_descriptor_;
}

const CGSNotifyRoleProfileChange& CGSNotifyRoleProfileChange::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGSNotifyRoleProfileChange* CGSNotifyRoleProfileChange::default_instance_ = NULL;

CGSNotifyRoleProfileChange* CGSNotifyRoleProfileChange::New(::google::protobuf::Arena* arena) const {
  CGSNotifyRoleProfileChange* n = new CGSNotifyRoleProfileChange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGSNotifyRoleProfileChange::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CGSNotifyRoleProfileChange*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(m_un32objid_, m_un32level_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGSNotifyRoleProfileChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGSNotifyRoleProfileChange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 m_un32ObjID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32objid_)));
          set_has_m_un32objid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_m_un32WeaponTypeID;
        break;
      }

      // optional uint32 m_un32WeaponTypeID = 2;
      case 2: {
        if (tag == 16) {
         parse_m_un32WeaponTypeID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32weapontypeid_)));
          set_has_m_un32weapontypeid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_m_un32CoatTypeID;
        break;
      }

      // optional uint32 m_un32CoatTypeID = 3;
      case 3: {
        if (tag == 24) {
         parse_m_un32CoatTypeID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32coattypeid_)));
          set_has_m_un32coattypeid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_m_un32Level;
        break;
      }

      // optional uint32 m_un32Level = 4;
      case 4: {
        if (tag == 32) {
         parse_m_un32Level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32level_)));
          set_has_m_un32level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGSNotifyRoleProfileChange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGSNotifyRoleProfileChange)
  return false;
#undef DO_
}

void CGSNotifyRoleProfileChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGSNotifyRoleProfileChange)
  // optional uint32 m_un32ObjID = 1;
  if (has_m_un32objid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->m_un32objid(), output);
  }

  // optional uint32 m_un32WeaponTypeID = 2;
  if (has_m_un32weapontypeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->m_un32weapontypeid(), output);
  }

  // optional uint32 m_un32CoatTypeID = 3;
  if (has_m_un32coattypeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->m_un32coattypeid(), output);
  }

  // optional uint32 m_un32Level = 4;
  if (has_m_un32level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->m_un32level(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGSNotifyRoleProfileChange)
}

::google::protobuf::uint8* CGSNotifyRoleProfileChange::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGSNotifyRoleProfileChange)
  // optional uint32 m_un32ObjID = 1;
  if (has_m_un32objid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->m_un32objid(), target);
  }

  // optional uint32 m_un32WeaponTypeID = 2;
  if (has_m_un32weapontypeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->m_un32weapontypeid(), target);
  }

  // optional uint32 m_un32CoatTypeID = 3;
  if (has_m_un32coattypeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->m_un32coattypeid(), target);
  }

  // optional uint32 m_un32Level = 4;
  if (has_m_un32level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->m_un32level(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGSNotifyRoleProfileChange)
  return target;
}

int CGSNotifyRoleProfileChange::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 15u) {
    // optional uint32 m_un32ObjID = 1;
    if (has_m_un32objid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32objid());
    }

    // optional uint32 m_un32WeaponTypeID = 2;
    if (has_m_un32weapontypeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32weapontypeid());
    }

    // optional uint32 m_un32CoatTypeID = 3;
    if (has_m_un32coattypeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32coattypeid());
    }

    // optional uint32 m_un32Level = 4;
    if (has_m_un32level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32level());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGSNotifyRoleProfileChange::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGSNotifyRoleProfileChange* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGSNotifyRoleProfileChange>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGSNotifyRoleProfileChange::MergeFrom(const CGSNotifyRoleProfileChange& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_un32objid()) {
      set_m_un32objid(from.m_un32objid());
    }
    if (from.has_m_un32weapontypeid()) {
      set_m_un32weapontypeid(from.m_un32weapontypeid());
    }
    if (from.has_m_un32coattypeid()) {
      set_m_un32coattypeid(from.m_un32coattypeid());
    }
    if (from.has_m_un32level()) {
      set_m_un32level(from.m_un32level());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGSNotifyRoleProfileChange::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGSNotifyRoleProfileChange::CopyFrom(const CGSNotifyRoleProfileChange& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGSNotifyRoleProfileChange::IsInitialized() const {

  return true;
}

void CGSNotifyRoleProfileChange::Swap(CGSNotifyRoleProfileChange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGSNotifyRoleProfileChange::InternalSwap(CGSNotifyRoleProfileChange* other) {
  std::swap(m_un32objid_, other->m_un32objid_);
  std::swap(m_un32weapontypeid_, other->m_un32weapontypeid_);
  std::swap(m_un32coattypeid_, other->m_un32coattypeid_);
  std::swap(m_un32level_, other->m_un32level_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGSNotifyRoleProfileChange::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGSNotifyRoleProfileChange_descriptor_;
  metadata.reflection = CGSNotifyRoleProfileChange_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGSNotifyRoleProfileChange

// optional uint32 m_un32ObjID = 1;
bool CGSNotifyRoleProfileChange::has_m_un32objid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGSNotifyRoleProfileChange::set_has_m_un32objid() {
  _has_bits_[0] |= 0x00000001u;
}
void CGSNotifyRoleProfileChange::clear_has_m_un32objid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGSNotifyRoleProfileChange::clear_m_un32objid() {
  m_un32objid_ = 0u;
  clear_has_m_un32objid();
}
 ::google::protobuf::uint32 CGSNotifyRoleProfileChange::m_un32objid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRoleProfileChange.m_un32ObjID)
  return m_un32objid_;
}
 void CGSNotifyRoleProfileChange::set_m_un32objid(::google::protobuf::uint32 value) {
  set_has_m_un32objid();
  m_un32objid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRoleProfileChange.m_un32ObjID)
}

// optional uint32 m_un32WeaponTypeID = 2;
bool CGSNotifyRoleProfileChange::has_m_un32weapontypeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CGSNotifyRoleProfileChange::set_has_m_un32weapontypeid() {
  _has_bits_[0] |= 0x00000002u;
}
void CGSNotifyRoleProfileChange::clear_has_m_un32weapontypeid() {
  _has_bits_[0] &= ~0x00000002u;
}
void CGSNotifyRoleProfileChange::clear_m_un32weapontypeid() {
  m_un32weapontypeid_ = 0u;
  clear_has_m_un32weapontypeid();
}
 ::google::protobuf::uint32 CGSNotifyRoleProfileChange::m_un32weapontypeid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRoleProfileChange.m_un32WeaponTypeID)
  return m_un32weapontypeid_;
}
 void CGSNotifyRoleProfileChange::set_m_un32weapontypeid(::google::protobuf::uint32 value) {
  set_has_m_un32weapontypeid();
  m_un32weapontypeid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRoleProfileChange.m_un32WeaponTypeID)
}

// optional uint32 m_un32CoatTypeID = 3;
bool CGSNotifyRoleProfileChange::has_m_un32coattypeid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CGSNotifyRoleProfileChange::set_has_m_un32coattypeid() {
  _has_bits_[0] |= 0x00000004u;
}
void CGSNotifyRoleProfileChange::clear_has_m_un32coattypeid() {
  _has_bits_[0] &= ~0x00000004u;
}
void CGSNotifyRoleProfileChange::clear_m_un32coattypeid() {
  m_un32coattypeid_ = 0u;
  clear_has_m_un32coattypeid();
}
 ::google::protobuf::uint32 CGSNotifyRoleProfileChange::m_un32coattypeid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRoleProfileChange.m_un32CoatTypeID)
  return m_un32coattypeid_;
}
 void CGSNotifyRoleProfileChange::set_m_un32coattypeid(::google::protobuf::uint32 value) {
  set_has_m_un32coattypeid();
  m_un32coattypeid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRoleProfileChange.m_un32CoatTypeID)
}

// optional uint32 m_un32Level = 4;
bool CGSNotifyRoleProfileChange::has_m_un32level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CGSNotifyRoleProfileChange::set_has_m_un32level() {
  _has_bits_[0] |= 0x00000008u;
}
void CGSNotifyRoleProfileChange::clear_has_m_un32level() {
  _has_bits_[0] &= ~0x00000008u;
}
void CGSNotifyRoleProfileChange::clear_m_un32level() {
  m_un32level_ = 0u;
  clear_has_m_un32level();
}
 ::google::protobuf::uint32 CGSNotifyRoleProfileChange::m_un32level() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRoleProfileChange.m_un32Level)
  return m_un32level_;
}
 void CGSNotifyRoleProfileChange::set_m_un32level(::google::protobuf::uint32 value) {
  set_has_m_un32level();
  m_un32level_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRoleProfileChange.m_un32Level)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCReportPassGate::kMUn32MapIDFieldNumber;
const int CGCReportPassGate::kMUn32SceneIDFieldNumber;
const int CGCReportPassGate::kMUn32HPVesselFieldNumber;
const int CGCReportPassGate::kMUn32MPVesselFieldNumber;
const int CGCReportPassGate::kMUn32GotExpNumFieldNumber;
const int CGCReportPassGate::kMUn32GotSilverNumFieldNumber;
const int CGCReportPassGate::kMUn32UseSecondFieldNumber;
const int CGCReportPassGate::kMBPickAllTempGoodsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCReportPassGate::CGCReportPassGate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGCReportPassGate)
}

void CGCReportPassGate::InitAsDefaultInstance() {
}

CGCReportPassGate::CGCReportPassGate(const CGCReportPassGate& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGCReportPassGate)
}

void CGCReportPassGate::SharedCtor() {
  _cached_size_ = 0;
  m_un32mapid_ = 0u;
  m_un32sceneid_ = 0u;
  m_un32hpvessel_ = 0u;
  m_un32mpvessel_ = 0u;
  m_un32gotexpnum_ = 0u;
  m_un32gotsilvernum_ = 0u;
  m_un32usesecond_ = 0u;
  m_bpickalltempgoods_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCReportPassGate::~CGCReportPassGate() {
  // @@protoc_insertion_point(destructor:NetPackage.CGCReportPassGate)
  SharedDtor();
}

void CGCReportPassGate::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGCReportPassGate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCReportPassGate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCReportPassGate_descriptor_;
}

const CGCReportPassGate& CGCReportPassGate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGCReportPassGate* CGCReportPassGate::default_instance_ = NULL;

CGCReportPassGate* CGCReportPassGate::New(::google::protobuf::Arena* arena) const {
  CGCReportPassGate* n = new CGCReportPassGate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCReportPassGate::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CGCReportPassGate*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(m_un32mapid_, m_bpickalltempgoods_);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCReportPassGate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGCReportPassGate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 m_un32MapID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32mapid_)));
          set_has_m_un32mapid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_m_un32SceneID;
        break;
      }

      // optional uint32 m_un32SceneID = 2;
      case 2: {
        if (tag == 16) {
         parse_m_un32SceneID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32sceneid_)));
          set_has_m_un32sceneid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_m_un32HPVessel;
        break;
      }

      // optional uint32 m_un32HPVessel = 3;
      case 3: {
        if (tag == 24) {
         parse_m_un32HPVessel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32hpvessel_)));
          set_has_m_un32hpvessel();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_m_un32MPVessel;
        break;
      }

      // optional uint32 m_un32MPVessel = 4;
      case 4: {
        if (tag == 32) {
         parse_m_un32MPVessel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32mpvessel_)));
          set_has_m_un32mpvessel();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_m_un32GotExpNum;
        break;
      }

      // optional uint32 m_un32GotExpNum = 5;
      case 5: {
        if (tag == 40) {
         parse_m_un32GotExpNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32gotexpnum_)));
          set_has_m_un32gotexpnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_m_un32GotSilverNum;
        break;
      }

      // optional uint32 m_un32GotSilverNum = 6;
      case 6: {
        if (tag == 48) {
         parse_m_un32GotSilverNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32gotsilvernum_)));
          set_has_m_un32gotsilvernum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_m_un32UseSecond;
        break;
      }

      // optional uint32 m_un32UseSecond = 7;
      case 7: {
        if (tag == 56) {
         parse_m_un32UseSecond:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32usesecond_)));
          set_has_m_un32usesecond();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_m_bPickAllTempGoods;
        break;
      }

      // optional bool m_bPickAllTempGoods = 8;
      case 8: {
        if (tag == 64) {
         parse_m_bPickAllTempGoods:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &m_bpickalltempgoods_)));
          set_has_m_bpickalltempgoods();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGCReportPassGate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGCReportPassGate)
  return false;
#undef DO_
}

void CGCReportPassGate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGCReportPassGate)
  // optional uint32 m_un32MapID = 1;
  if (has_m_un32mapid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->m_un32mapid(), output);
  }

  // optional uint32 m_un32SceneID = 2;
  if (has_m_un32sceneid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->m_un32sceneid(), output);
  }

  // optional uint32 m_un32HPVessel = 3;
  if (has_m_un32hpvessel()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->m_un32hpvessel(), output);
  }

  // optional uint32 m_un32MPVessel = 4;
  if (has_m_un32mpvessel()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->m_un32mpvessel(), output);
  }

  // optional uint32 m_un32GotExpNum = 5;
  if (has_m_un32gotexpnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->m_un32gotexpnum(), output);
  }

  // optional uint32 m_un32GotSilverNum = 6;
  if (has_m_un32gotsilvernum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->m_un32gotsilvernum(), output);
  }

  // optional uint32 m_un32UseSecond = 7;
  if (has_m_un32usesecond()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->m_un32usesecond(), output);
  }

  // optional bool m_bPickAllTempGoods = 8;
  if (has_m_bpickalltempgoods()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->m_bpickalltempgoods(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGCReportPassGate)
}

::google::protobuf::uint8* CGCReportPassGate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGCReportPassGate)
  // optional uint32 m_un32MapID = 1;
  if (has_m_un32mapid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->m_un32mapid(), target);
  }

  // optional uint32 m_un32SceneID = 2;
  if (has_m_un32sceneid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->m_un32sceneid(), target);
  }

  // optional uint32 m_un32HPVessel = 3;
  if (has_m_un32hpvessel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->m_un32hpvessel(), target);
  }

  // optional uint32 m_un32MPVessel = 4;
  if (has_m_un32mpvessel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->m_un32mpvessel(), target);
  }

  // optional uint32 m_un32GotExpNum = 5;
  if (has_m_un32gotexpnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->m_un32gotexpnum(), target);
  }

  // optional uint32 m_un32GotSilverNum = 6;
  if (has_m_un32gotsilvernum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->m_un32gotsilvernum(), target);
  }

  // optional uint32 m_un32UseSecond = 7;
  if (has_m_un32usesecond()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->m_un32usesecond(), target);
  }

  // optional bool m_bPickAllTempGoods = 8;
  if (has_m_bpickalltempgoods()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->m_bpickalltempgoods(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGCReportPassGate)
  return target;
}

int CGCReportPassGate::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional uint32 m_un32MapID = 1;
    if (has_m_un32mapid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32mapid());
    }

    // optional uint32 m_un32SceneID = 2;
    if (has_m_un32sceneid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32sceneid());
    }

    // optional uint32 m_un32HPVessel = 3;
    if (has_m_un32hpvessel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32hpvessel());
    }

    // optional uint32 m_un32MPVessel = 4;
    if (has_m_un32mpvessel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32mpvessel());
    }

    // optional uint32 m_un32GotExpNum = 5;
    if (has_m_un32gotexpnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32gotexpnum());
    }

    // optional uint32 m_un32GotSilverNum = 6;
    if (has_m_un32gotsilvernum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32gotsilvernum());
    }

    // optional uint32 m_un32UseSecond = 7;
    if (has_m_un32usesecond()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32usesecond());
    }

    // optional bool m_bPickAllTempGoods = 8;
    if (has_m_bpickalltempgoods()) {
      total_size += 1 + 1;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCReportPassGate::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCReportPassGate* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCReportPassGate>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCReportPassGate::MergeFrom(const CGCReportPassGate& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_un32mapid()) {
      set_m_un32mapid(from.m_un32mapid());
    }
    if (from.has_m_un32sceneid()) {
      set_m_un32sceneid(from.m_un32sceneid());
    }
    if (from.has_m_un32hpvessel()) {
      set_m_un32hpvessel(from.m_un32hpvessel());
    }
    if (from.has_m_un32mpvessel()) {
      set_m_un32mpvessel(from.m_un32mpvessel());
    }
    if (from.has_m_un32gotexpnum()) {
      set_m_un32gotexpnum(from.m_un32gotexpnum());
    }
    if (from.has_m_un32gotsilvernum()) {
      set_m_un32gotsilvernum(from.m_un32gotsilvernum());
    }
    if (from.has_m_un32usesecond()) {
      set_m_un32usesecond(from.m_un32usesecond());
    }
    if (from.has_m_bpickalltempgoods()) {
      set_m_bpickalltempgoods(from.m_bpickalltempgoods());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCReportPassGate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCReportPassGate::CopyFrom(const CGCReportPassGate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCReportPassGate::IsInitialized() const {

  return true;
}

void CGCReportPassGate::Swap(CGCReportPassGate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCReportPassGate::InternalSwap(CGCReportPassGate* other) {
  std::swap(m_un32mapid_, other->m_un32mapid_);
  std::swap(m_un32sceneid_, other->m_un32sceneid_);
  std::swap(m_un32hpvessel_, other->m_un32hpvessel_);
  std::swap(m_un32mpvessel_, other->m_un32mpvessel_);
  std::swap(m_un32gotexpnum_, other->m_un32gotexpnum_);
  std::swap(m_un32gotsilvernum_, other->m_un32gotsilvernum_);
  std::swap(m_un32usesecond_, other->m_un32usesecond_);
  std::swap(m_bpickalltempgoods_, other->m_bpickalltempgoods_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCReportPassGate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCReportPassGate_descriptor_;
  metadata.reflection = CGCReportPassGate_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCReportPassGate

// optional uint32 m_un32MapID = 1;
bool CGCReportPassGate::has_m_un32mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGCReportPassGate::set_has_m_un32mapid() {
  _has_bits_[0] |= 0x00000001u;
}
void CGCReportPassGate::clear_has_m_un32mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGCReportPassGate::clear_m_un32mapid() {
  m_un32mapid_ = 0u;
  clear_has_m_un32mapid();
}
 ::google::protobuf::uint32 CGCReportPassGate::m_un32mapid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCReportPassGate.m_un32MapID)
  return m_un32mapid_;
}
 void CGCReportPassGate::set_m_un32mapid(::google::protobuf::uint32 value) {
  set_has_m_un32mapid();
  m_un32mapid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCReportPassGate.m_un32MapID)
}

// optional uint32 m_un32SceneID = 2;
bool CGCReportPassGate::has_m_un32sceneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CGCReportPassGate::set_has_m_un32sceneid() {
  _has_bits_[0] |= 0x00000002u;
}
void CGCReportPassGate::clear_has_m_un32sceneid() {
  _has_bits_[0] &= ~0x00000002u;
}
void CGCReportPassGate::clear_m_un32sceneid() {
  m_un32sceneid_ = 0u;
  clear_has_m_un32sceneid();
}
 ::google::protobuf::uint32 CGCReportPassGate::m_un32sceneid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCReportPassGate.m_un32SceneID)
  return m_un32sceneid_;
}
 void CGCReportPassGate::set_m_un32sceneid(::google::protobuf::uint32 value) {
  set_has_m_un32sceneid();
  m_un32sceneid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCReportPassGate.m_un32SceneID)
}

// optional uint32 m_un32HPVessel = 3;
bool CGCReportPassGate::has_m_un32hpvessel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CGCReportPassGate::set_has_m_un32hpvessel() {
  _has_bits_[0] |= 0x00000004u;
}
void CGCReportPassGate::clear_has_m_un32hpvessel() {
  _has_bits_[0] &= ~0x00000004u;
}
void CGCReportPassGate::clear_m_un32hpvessel() {
  m_un32hpvessel_ = 0u;
  clear_has_m_un32hpvessel();
}
 ::google::protobuf::uint32 CGCReportPassGate::m_un32hpvessel() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCReportPassGate.m_un32HPVessel)
  return m_un32hpvessel_;
}
 void CGCReportPassGate::set_m_un32hpvessel(::google::protobuf::uint32 value) {
  set_has_m_un32hpvessel();
  m_un32hpvessel_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCReportPassGate.m_un32HPVessel)
}

// optional uint32 m_un32MPVessel = 4;
bool CGCReportPassGate::has_m_un32mpvessel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CGCReportPassGate::set_has_m_un32mpvessel() {
  _has_bits_[0] |= 0x00000008u;
}
void CGCReportPassGate::clear_has_m_un32mpvessel() {
  _has_bits_[0] &= ~0x00000008u;
}
void CGCReportPassGate::clear_m_un32mpvessel() {
  m_un32mpvessel_ = 0u;
  clear_has_m_un32mpvessel();
}
 ::google::protobuf::uint32 CGCReportPassGate::m_un32mpvessel() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCReportPassGate.m_un32MPVessel)
  return m_un32mpvessel_;
}
 void CGCReportPassGate::set_m_un32mpvessel(::google::protobuf::uint32 value) {
  set_has_m_un32mpvessel();
  m_un32mpvessel_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCReportPassGate.m_un32MPVessel)
}

// optional uint32 m_un32GotExpNum = 5;
bool CGCReportPassGate::has_m_un32gotexpnum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CGCReportPassGate::set_has_m_un32gotexpnum() {
  _has_bits_[0] |= 0x00000010u;
}
void CGCReportPassGate::clear_has_m_un32gotexpnum() {
  _has_bits_[0] &= ~0x00000010u;
}
void CGCReportPassGate::clear_m_un32gotexpnum() {
  m_un32gotexpnum_ = 0u;
  clear_has_m_un32gotexpnum();
}
 ::google::protobuf::uint32 CGCReportPassGate::m_un32gotexpnum() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCReportPassGate.m_un32GotExpNum)
  return m_un32gotexpnum_;
}
 void CGCReportPassGate::set_m_un32gotexpnum(::google::protobuf::uint32 value) {
  set_has_m_un32gotexpnum();
  m_un32gotexpnum_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCReportPassGate.m_un32GotExpNum)
}

// optional uint32 m_un32GotSilverNum = 6;
bool CGCReportPassGate::has_m_un32gotsilvernum() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CGCReportPassGate::set_has_m_un32gotsilvernum() {
  _has_bits_[0] |= 0x00000020u;
}
void CGCReportPassGate::clear_has_m_un32gotsilvernum() {
  _has_bits_[0] &= ~0x00000020u;
}
void CGCReportPassGate::clear_m_un32gotsilvernum() {
  m_un32gotsilvernum_ = 0u;
  clear_has_m_un32gotsilvernum();
}
 ::google::protobuf::uint32 CGCReportPassGate::m_un32gotsilvernum() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCReportPassGate.m_un32GotSilverNum)
  return m_un32gotsilvernum_;
}
 void CGCReportPassGate::set_m_un32gotsilvernum(::google::protobuf::uint32 value) {
  set_has_m_un32gotsilvernum();
  m_un32gotsilvernum_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCReportPassGate.m_un32GotSilverNum)
}

// optional uint32 m_un32UseSecond = 7;
bool CGCReportPassGate::has_m_un32usesecond() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CGCReportPassGate::set_has_m_un32usesecond() {
  _has_bits_[0] |= 0x00000040u;
}
void CGCReportPassGate::clear_has_m_un32usesecond() {
  _has_bits_[0] &= ~0x00000040u;
}
void CGCReportPassGate::clear_m_un32usesecond() {
  m_un32usesecond_ = 0u;
  clear_has_m_un32usesecond();
}
 ::google::protobuf::uint32 CGCReportPassGate::m_un32usesecond() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCReportPassGate.m_un32UseSecond)
  return m_un32usesecond_;
}
 void CGCReportPassGate::set_m_un32usesecond(::google::protobuf::uint32 value) {
  set_has_m_un32usesecond();
  m_un32usesecond_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCReportPassGate.m_un32UseSecond)
}

// optional bool m_bPickAllTempGoods = 8;
bool CGCReportPassGate::has_m_bpickalltempgoods() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CGCReportPassGate::set_has_m_bpickalltempgoods() {
  _has_bits_[0] |= 0x00000080u;
}
void CGCReportPassGate::clear_has_m_bpickalltempgoods() {
  _has_bits_[0] &= ~0x00000080u;
}
void CGCReportPassGate::clear_m_bpickalltempgoods() {
  m_bpickalltempgoods_ = false;
  clear_has_m_bpickalltempgoods();
}
 bool CGCReportPassGate::m_bpickalltempgoods() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCReportPassGate.m_bPickAllTempGoods)
  return m_bpickalltempgoods_;
}
 void CGCReportPassGate::set_m_bpickalltempgoods(bool value) {
  set_has_m_bpickalltempgoods();
  m_bpickalltempgoods_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCReportPassGate.m_bPickAllTempGoods)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCAskTreasureBoxDropGoods::kMUn32BoxIDFieldNumber;
const int CGCAskTreasureBoxDropGoods::kMIsShowAwardFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCAskTreasureBoxDropGoods::CGCAskTreasureBoxDropGoods()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGCAskTreasureBoxDropGoods)
}

void CGCAskTreasureBoxDropGoods::InitAsDefaultInstance() {
}

CGCAskTreasureBoxDropGoods::CGCAskTreasureBoxDropGoods(const CGCAskTreasureBoxDropGoods& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGCAskTreasureBoxDropGoods)
}

void CGCAskTreasureBoxDropGoods::SharedCtor() {
  _cached_size_ = 0;
  m_un32boxid_ = 0u;
  m_isshowaward_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCAskTreasureBoxDropGoods::~CGCAskTreasureBoxDropGoods() {
  // @@protoc_insertion_point(destructor:NetPackage.CGCAskTreasureBoxDropGoods)
  SharedDtor();
}

void CGCAskTreasureBoxDropGoods::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGCAskTreasureBoxDropGoods::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCAskTreasureBoxDropGoods::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCAskTreasureBoxDropGoods_descriptor_;
}

const CGCAskTreasureBoxDropGoods& CGCAskTreasureBoxDropGoods::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGCAskTreasureBoxDropGoods* CGCAskTreasureBoxDropGoods::default_instance_ = NULL;

CGCAskTreasureBoxDropGoods* CGCAskTreasureBoxDropGoods::New(::google::protobuf::Arena* arena) const {
  CGCAskTreasureBoxDropGoods* n = new CGCAskTreasureBoxDropGoods;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCAskTreasureBoxDropGoods::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CGCAskTreasureBoxDropGoods*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(m_un32boxid_, m_isshowaward_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCAskTreasureBoxDropGoods::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGCAskTreasureBoxDropGoods)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 m_un32BoxID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32boxid_)));
          set_has_m_un32boxid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_m_isShowAward;
        break;
      }

      // optional bool m_isShowAward = 2;
      case 2: {
        if (tag == 16) {
         parse_m_isShowAward:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &m_isshowaward_)));
          set_has_m_isshowaward();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGCAskTreasureBoxDropGoods)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGCAskTreasureBoxDropGoods)
  return false;
#undef DO_
}

void CGCAskTreasureBoxDropGoods::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGCAskTreasureBoxDropGoods)
  // optional uint32 m_un32BoxID = 1;
  if (has_m_un32boxid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->m_un32boxid(), output);
  }

  // optional bool m_isShowAward = 2;
  if (has_m_isshowaward()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->m_isshowaward(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGCAskTreasureBoxDropGoods)
}

::google::protobuf::uint8* CGCAskTreasureBoxDropGoods::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGCAskTreasureBoxDropGoods)
  // optional uint32 m_un32BoxID = 1;
  if (has_m_un32boxid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->m_un32boxid(), target);
  }

  // optional bool m_isShowAward = 2;
  if (has_m_isshowaward()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->m_isshowaward(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGCAskTreasureBoxDropGoods)
  return target;
}

int CGCAskTreasureBoxDropGoods::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 m_un32BoxID = 1;
    if (has_m_un32boxid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32boxid());
    }

    // optional bool m_isShowAward = 2;
    if (has_m_isshowaward()) {
      total_size += 1 + 1;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCAskTreasureBoxDropGoods::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCAskTreasureBoxDropGoods* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCAskTreasureBoxDropGoods>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCAskTreasureBoxDropGoods::MergeFrom(const CGCAskTreasureBoxDropGoods& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_un32boxid()) {
      set_m_un32boxid(from.m_un32boxid());
    }
    if (from.has_m_isshowaward()) {
      set_m_isshowaward(from.m_isshowaward());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCAskTreasureBoxDropGoods::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCAskTreasureBoxDropGoods::CopyFrom(const CGCAskTreasureBoxDropGoods& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCAskTreasureBoxDropGoods::IsInitialized() const {

  return true;
}

void CGCAskTreasureBoxDropGoods::Swap(CGCAskTreasureBoxDropGoods* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCAskTreasureBoxDropGoods::InternalSwap(CGCAskTreasureBoxDropGoods* other) {
  std::swap(m_un32boxid_, other->m_un32boxid_);
  std::swap(m_isshowaward_, other->m_isshowaward_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCAskTreasureBoxDropGoods::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCAskTreasureBoxDropGoods_descriptor_;
  metadata.reflection = CGCAskTreasureBoxDropGoods_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCAskTreasureBoxDropGoods

// optional uint32 m_un32BoxID = 1;
bool CGCAskTreasureBoxDropGoods::has_m_un32boxid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGCAskTreasureBoxDropGoods::set_has_m_un32boxid() {
  _has_bits_[0] |= 0x00000001u;
}
void CGCAskTreasureBoxDropGoods::clear_has_m_un32boxid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGCAskTreasureBoxDropGoods::clear_m_un32boxid() {
  m_un32boxid_ = 0u;
  clear_has_m_un32boxid();
}
 ::google::protobuf::uint32 CGCAskTreasureBoxDropGoods::m_un32boxid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCAskTreasureBoxDropGoods.m_un32BoxID)
  return m_un32boxid_;
}
 void CGCAskTreasureBoxDropGoods::set_m_un32boxid(::google::protobuf::uint32 value) {
  set_has_m_un32boxid();
  m_un32boxid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCAskTreasureBoxDropGoods.m_un32BoxID)
}

// optional bool m_isShowAward = 2;
bool CGCAskTreasureBoxDropGoods::has_m_isshowaward() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CGCAskTreasureBoxDropGoods::set_has_m_isshowaward() {
  _has_bits_[0] |= 0x00000002u;
}
void CGCAskTreasureBoxDropGoods::clear_has_m_isshowaward() {
  _has_bits_[0] &= ~0x00000002u;
}
void CGCAskTreasureBoxDropGoods::clear_m_isshowaward() {
  m_isshowaward_ = false;
  clear_has_m_isshowaward();
}
 bool CGCAskTreasureBoxDropGoods::m_isshowaward() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCAskTreasureBoxDropGoods.m_isShowAward)
  return m_isshowaward_;
}
 void CGCAskTreasureBoxDropGoods::set_m_isshowaward(bool value) {
  set_has_m_isshowaward();
  m_isshowaward_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCAskTreasureBoxDropGoods.m_isShowAward)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCAskEnterScene::kMN32MapIDFieldNumber;
const int CGCAskEnterScene::kMN32SceneIDFieldNumber;
const int CGCAskEnterScene::kMBEnterByUIFieldNumber;
const int CGCAskEnterScene::kMUn32HPVesselFieldNumber;
const int CGCAskEnterScene::kMUn32MPVesselFieldNumber;
const int CGCAskEnterScene::kMUn32GotExpFieldNumber;
const int CGCAskEnterScene::kMUn32GotSilverFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCAskEnterScene::CGCAskEnterScene()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGCAskEnterScene)
}

void CGCAskEnterScene::InitAsDefaultInstance() {
}

CGCAskEnterScene::CGCAskEnterScene(const CGCAskEnterScene& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGCAskEnterScene)
}

void CGCAskEnterScene::SharedCtor() {
  _cached_size_ = 0;
  m_n32mapid_ = 0;
  m_n32sceneid_ = 0;
  m_benterbyui_ = false;
  m_un32hpvessel_ = 0u;
  m_un32mpvessel_ = 0u;
  m_un32gotexp_ = 0u;
  m_un32gotsilver_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCAskEnterScene::~CGCAskEnterScene() {
  // @@protoc_insertion_point(destructor:NetPackage.CGCAskEnterScene)
  SharedDtor();
}

void CGCAskEnterScene::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGCAskEnterScene::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCAskEnterScene::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCAskEnterScene_descriptor_;
}

const CGCAskEnterScene& CGCAskEnterScene::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGCAskEnterScene* CGCAskEnterScene::default_instance_ = NULL;

CGCAskEnterScene* CGCAskEnterScene::New(::google::protobuf::Arena* arena) const {
  CGCAskEnterScene* n = new CGCAskEnterScene;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCAskEnterScene::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CGCAskEnterScene*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 127u) {
    ZR_(m_n32mapid_, m_un32gotsilver_);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCAskEnterScene::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGCAskEnterScene)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_n32MapID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_n32mapid_)));
          set_has_m_n32mapid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_m_n32SceneID;
        break;
      }

      // optional int32 m_n32SceneID = 2;
      case 2: {
        if (tag == 16) {
         parse_m_n32SceneID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_n32sceneid_)));
          set_has_m_n32sceneid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_m_bEnterByUI;
        break;
      }

      // optional bool m_bEnterByUI = 3;
      case 3: {
        if (tag == 24) {
         parse_m_bEnterByUI:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &m_benterbyui_)));
          set_has_m_benterbyui();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_m_un32HPVessel;
        break;
      }

      // optional uint32 m_un32HPVessel = 4;
      case 4: {
        if (tag == 32) {
         parse_m_un32HPVessel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32hpvessel_)));
          set_has_m_un32hpvessel();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_m_un32MPVessel;
        break;
      }

      // optional uint32 m_un32MPVessel = 5;
      case 5: {
        if (tag == 40) {
         parse_m_un32MPVessel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32mpvessel_)));
          set_has_m_un32mpvessel();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_m_un32GotExp;
        break;
      }

      // optional uint32 m_un32GotExp = 6;
      case 6: {
        if (tag == 48) {
         parse_m_un32GotExp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32gotexp_)));
          set_has_m_un32gotexp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_m_un32GotSilver;
        break;
      }

      // optional uint32 m_un32GotSilver = 7;
      case 7: {
        if (tag == 56) {
         parse_m_un32GotSilver:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32gotsilver_)));
          set_has_m_un32gotsilver();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGCAskEnterScene)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGCAskEnterScene)
  return false;
#undef DO_
}

void CGCAskEnterScene::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGCAskEnterScene)
  // optional int32 m_n32MapID = 1;
  if (has_m_n32mapid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_n32mapid(), output);
  }

  // optional int32 m_n32SceneID = 2;
  if (has_m_n32sceneid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_n32sceneid(), output);
  }

  // optional bool m_bEnterByUI = 3;
  if (has_m_benterbyui()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->m_benterbyui(), output);
  }

  // optional uint32 m_un32HPVessel = 4;
  if (has_m_un32hpvessel()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->m_un32hpvessel(), output);
  }

  // optional uint32 m_un32MPVessel = 5;
  if (has_m_un32mpvessel()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->m_un32mpvessel(), output);
  }

  // optional uint32 m_un32GotExp = 6;
  if (has_m_un32gotexp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->m_un32gotexp(), output);
  }

  // optional uint32 m_un32GotSilver = 7;
  if (has_m_un32gotsilver()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->m_un32gotsilver(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGCAskEnterScene)
}

::google::protobuf::uint8* CGCAskEnterScene::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGCAskEnterScene)
  // optional int32 m_n32MapID = 1;
  if (has_m_n32mapid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_n32mapid(), target);
  }

  // optional int32 m_n32SceneID = 2;
  if (has_m_n32sceneid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_n32sceneid(), target);
  }

  // optional bool m_bEnterByUI = 3;
  if (has_m_benterbyui()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->m_benterbyui(), target);
  }

  // optional uint32 m_un32HPVessel = 4;
  if (has_m_un32hpvessel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->m_un32hpvessel(), target);
  }

  // optional uint32 m_un32MPVessel = 5;
  if (has_m_un32mpvessel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->m_un32mpvessel(), target);
  }

  // optional uint32 m_un32GotExp = 6;
  if (has_m_un32gotexp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->m_un32gotexp(), target);
  }

  // optional uint32 m_un32GotSilver = 7;
  if (has_m_un32gotsilver()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->m_un32gotsilver(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGCAskEnterScene)
  return target;
}

int CGCAskEnterScene::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 127u) {
    // optional int32 m_n32MapID = 1;
    if (has_m_n32mapid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_n32mapid());
    }

    // optional int32 m_n32SceneID = 2;
    if (has_m_n32sceneid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_n32sceneid());
    }

    // optional bool m_bEnterByUI = 3;
    if (has_m_benterbyui()) {
      total_size += 1 + 1;
    }

    // optional uint32 m_un32HPVessel = 4;
    if (has_m_un32hpvessel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32hpvessel());
    }

    // optional uint32 m_un32MPVessel = 5;
    if (has_m_un32mpvessel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32mpvessel());
    }

    // optional uint32 m_un32GotExp = 6;
    if (has_m_un32gotexp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32gotexp());
    }

    // optional uint32 m_un32GotSilver = 7;
    if (has_m_un32gotsilver()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32gotsilver());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCAskEnterScene::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCAskEnterScene* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCAskEnterScene>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCAskEnterScene::MergeFrom(const CGCAskEnterScene& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_n32mapid()) {
      set_m_n32mapid(from.m_n32mapid());
    }
    if (from.has_m_n32sceneid()) {
      set_m_n32sceneid(from.m_n32sceneid());
    }
    if (from.has_m_benterbyui()) {
      set_m_benterbyui(from.m_benterbyui());
    }
    if (from.has_m_un32hpvessel()) {
      set_m_un32hpvessel(from.m_un32hpvessel());
    }
    if (from.has_m_un32mpvessel()) {
      set_m_un32mpvessel(from.m_un32mpvessel());
    }
    if (from.has_m_un32gotexp()) {
      set_m_un32gotexp(from.m_un32gotexp());
    }
    if (from.has_m_un32gotsilver()) {
      set_m_un32gotsilver(from.m_un32gotsilver());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCAskEnterScene::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCAskEnterScene::CopyFrom(const CGCAskEnterScene& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCAskEnterScene::IsInitialized() const {

  return true;
}

void CGCAskEnterScene::Swap(CGCAskEnterScene* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCAskEnterScene::InternalSwap(CGCAskEnterScene* other) {
  std::swap(m_n32mapid_, other->m_n32mapid_);
  std::swap(m_n32sceneid_, other->m_n32sceneid_);
  std::swap(m_benterbyui_, other->m_benterbyui_);
  std::swap(m_un32hpvessel_, other->m_un32hpvessel_);
  std::swap(m_un32mpvessel_, other->m_un32mpvessel_);
  std::swap(m_un32gotexp_, other->m_un32gotexp_);
  std::swap(m_un32gotsilver_, other->m_un32gotsilver_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCAskEnterScene::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCAskEnterScene_descriptor_;
  metadata.reflection = CGCAskEnterScene_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCAskEnterScene

// optional int32 m_n32MapID = 1;
bool CGCAskEnterScene::has_m_n32mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGCAskEnterScene::set_has_m_n32mapid() {
  _has_bits_[0] |= 0x00000001u;
}
void CGCAskEnterScene::clear_has_m_n32mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGCAskEnterScene::clear_m_n32mapid() {
  m_n32mapid_ = 0;
  clear_has_m_n32mapid();
}
 ::google::protobuf::int32 CGCAskEnterScene::m_n32mapid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCAskEnterScene.m_n32MapID)
  return m_n32mapid_;
}
 void CGCAskEnterScene::set_m_n32mapid(::google::protobuf::int32 value) {
  set_has_m_n32mapid();
  m_n32mapid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCAskEnterScene.m_n32MapID)
}

// optional int32 m_n32SceneID = 2;
bool CGCAskEnterScene::has_m_n32sceneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CGCAskEnterScene::set_has_m_n32sceneid() {
  _has_bits_[0] |= 0x00000002u;
}
void CGCAskEnterScene::clear_has_m_n32sceneid() {
  _has_bits_[0] &= ~0x00000002u;
}
void CGCAskEnterScene::clear_m_n32sceneid() {
  m_n32sceneid_ = 0;
  clear_has_m_n32sceneid();
}
 ::google::protobuf::int32 CGCAskEnterScene::m_n32sceneid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCAskEnterScene.m_n32SceneID)
  return m_n32sceneid_;
}
 void CGCAskEnterScene::set_m_n32sceneid(::google::protobuf::int32 value) {
  set_has_m_n32sceneid();
  m_n32sceneid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCAskEnterScene.m_n32SceneID)
}

// optional bool m_bEnterByUI = 3;
bool CGCAskEnterScene::has_m_benterbyui() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CGCAskEnterScene::set_has_m_benterbyui() {
  _has_bits_[0] |= 0x00000004u;
}
void CGCAskEnterScene::clear_has_m_benterbyui() {
  _has_bits_[0] &= ~0x00000004u;
}
void CGCAskEnterScene::clear_m_benterbyui() {
  m_benterbyui_ = false;
  clear_has_m_benterbyui();
}
 bool CGCAskEnterScene::m_benterbyui() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCAskEnterScene.m_bEnterByUI)
  return m_benterbyui_;
}
 void CGCAskEnterScene::set_m_benterbyui(bool value) {
  set_has_m_benterbyui();
  m_benterbyui_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCAskEnterScene.m_bEnterByUI)
}

// optional uint32 m_un32HPVessel = 4;
bool CGCAskEnterScene::has_m_un32hpvessel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CGCAskEnterScene::set_has_m_un32hpvessel() {
  _has_bits_[0] |= 0x00000008u;
}
void CGCAskEnterScene::clear_has_m_un32hpvessel() {
  _has_bits_[0] &= ~0x00000008u;
}
void CGCAskEnterScene::clear_m_un32hpvessel() {
  m_un32hpvessel_ = 0u;
  clear_has_m_un32hpvessel();
}
 ::google::protobuf::uint32 CGCAskEnterScene::m_un32hpvessel() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCAskEnterScene.m_un32HPVessel)
  return m_un32hpvessel_;
}
 void CGCAskEnterScene::set_m_un32hpvessel(::google::protobuf::uint32 value) {
  set_has_m_un32hpvessel();
  m_un32hpvessel_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCAskEnterScene.m_un32HPVessel)
}

// optional uint32 m_un32MPVessel = 5;
bool CGCAskEnterScene::has_m_un32mpvessel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CGCAskEnterScene::set_has_m_un32mpvessel() {
  _has_bits_[0] |= 0x00000010u;
}
void CGCAskEnterScene::clear_has_m_un32mpvessel() {
  _has_bits_[0] &= ~0x00000010u;
}
void CGCAskEnterScene::clear_m_un32mpvessel() {
  m_un32mpvessel_ = 0u;
  clear_has_m_un32mpvessel();
}
 ::google::protobuf::uint32 CGCAskEnterScene::m_un32mpvessel() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCAskEnterScene.m_un32MPVessel)
  return m_un32mpvessel_;
}
 void CGCAskEnterScene::set_m_un32mpvessel(::google::protobuf::uint32 value) {
  set_has_m_un32mpvessel();
  m_un32mpvessel_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCAskEnterScene.m_un32MPVessel)
}

// optional uint32 m_un32GotExp = 6;
bool CGCAskEnterScene::has_m_un32gotexp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CGCAskEnterScene::set_has_m_un32gotexp() {
  _has_bits_[0] |= 0x00000020u;
}
void CGCAskEnterScene::clear_has_m_un32gotexp() {
  _has_bits_[0] &= ~0x00000020u;
}
void CGCAskEnterScene::clear_m_un32gotexp() {
  m_un32gotexp_ = 0u;
  clear_has_m_un32gotexp();
}
 ::google::protobuf::uint32 CGCAskEnterScene::m_un32gotexp() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCAskEnterScene.m_un32GotExp)
  return m_un32gotexp_;
}
 void CGCAskEnterScene::set_m_un32gotexp(::google::protobuf::uint32 value) {
  set_has_m_un32gotexp();
  m_un32gotexp_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCAskEnterScene.m_un32GotExp)
}

// optional uint32 m_un32GotSilver = 7;
bool CGCAskEnterScene::has_m_un32gotsilver() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CGCAskEnterScene::set_has_m_un32gotsilver() {
  _has_bits_[0] |= 0x00000040u;
}
void CGCAskEnterScene::clear_has_m_un32gotsilver() {
  _has_bits_[0] &= ~0x00000040u;
}
void CGCAskEnterScene::clear_m_un32gotsilver() {
  m_un32gotsilver_ = 0u;
  clear_has_m_un32gotsilver();
}
 ::google::protobuf::uint32 CGCAskEnterScene::m_un32gotsilver() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCAskEnterScene.m_un32GotSilver)
  return m_un32gotsilver_;
}
 void CGCAskEnterScene::set_m_un32gotsilver(::google::protobuf::uint32 value) {
  set_has_m_un32gotsilver();
  m_un32gotsilver_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCAskEnterScene.m_un32GotSilver)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGSNotifyRoleMapScheduleList::kLineNumFieldNumber;
const int CGSNotifyRoleMapScheduleList::kMapIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGSNotifyRoleMapScheduleList::CGSNotifyRoleMapScheduleList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGSNotifyRoleMapScheduleList)
}

void CGSNotifyRoleMapScheduleList::InitAsDefaultInstance() {
}

CGSNotifyRoleMapScheduleList::CGSNotifyRoleMapScheduleList(const CGSNotifyRoleMapScheduleList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGSNotifyRoleMapScheduleList)
}

void CGSNotifyRoleMapScheduleList::SharedCtor() {
  _cached_size_ = 0;
  linenum_ = 0u;
  mapid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGSNotifyRoleMapScheduleList::~CGSNotifyRoleMapScheduleList() {
  // @@protoc_insertion_point(destructor:NetPackage.CGSNotifyRoleMapScheduleList)
  SharedDtor();
}

void CGSNotifyRoleMapScheduleList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGSNotifyRoleMapScheduleList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGSNotifyRoleMapScheduleList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGSNotifyRoleMapScheduleList_descriptor_;
}

const CGSNotifyRoleMapScheduleList& CGSNotifyRoleMapScheduleList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGSNotifyRoleMapScheduleList* CGSNotifyRoleMapScheduleList::default_instance_ = NULL;

CGSNotifyRoleMapScheduleList* CGSNotifyRoleMapScheduleList::New(::google::protobuf::Arena* arena) const {
  CGSNotifyRoleMapScheduleList* n = new CGSNotifyRoleMapScheduleList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGSNotifyRoleMapScheduleList::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CGSNotifyRoleMapScheduleList*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(linenum_, mapid_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGSNotifyRoleMapScheduleList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGSNotifyRoleMapScheduleList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 lineNum = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &linenum_)));
          set_has_linenum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_mapID;
        break;
      }

      // optional uint32 mapID = 2;
      case 2: {
        if (tag == 16) {
         parse_mapID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mapid_)));
          set_has_mapid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGSNotifyRoleMapScheduleList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGSNotifyRoleMapScheduleList)
  return false;
#undef DO_
}

void CGSNotifyRoleMapScheduleList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGSNotifyRoleMapScheduleList)
  // optional uint32 lineNum = 1;
  if (has_linenum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->linenum(), output);
  }

  // optional uint32 mapID = 2;
  if (has_mapid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->mapid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGSNotifyRoleMapScheduleList)
}

::google::protobuf::uint8* CGSNotifyRoleMapScheduleList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGSNotifyRoleMapScheduleList)
  // optional uint32 lineNum = 1;
  if (has_linenum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->linenum(), target);
  }

  // optional uint32 mapID = 2;
  if (has_mapid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->mapid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGSNotifyRoleMapScheduleList)
  return target;
}

int CGSNotifyRoleMapScheduleList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 lineNum = 1;
    if (has_linenum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->linenum());
    }

    // optional uint32 mapID = 2;
    if (has_mapid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mapid());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGSNotifyRoleMapScheduleList::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGSNotifyRoleMapScheduleList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGSNotifyRoleMapScheduleList>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGSNotifyRoleMapScheduleList::MergeFrom(const CGSNotifyRoleMapScheduleList& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_linenum()) {
      set_linenum(from.linenum());
    }
    if (from.has_mapid()) {
      set_mapid(from.mapid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGSNotifyRoleMapScheduleList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGSNotifyRoleMapScheduleList::CopyFrom(const CGSNotifyRoleMapScheduleList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGSNotifyRoleMapScheduleList::IsInitialized() const {

  return true;
}

void CGSNotifyRoleMapScheduleList::Swap(CGSNotifyRoleMapScheduleList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGSNotifyRoleMapScheduleList::InternalSwap(CGSNotifyRoleMapScheduleList* other) {
  std::swap(linenum_, other->linenum_);
  std::swap(mapid_, other->mapid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGSNotifyRoleMapScheduleList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGSNotifyRoleMapScheduleList_descriptor_;
  metadata.reflection = CGSNotifyRoleMapScheduleList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGSNotifyRoleMapScheduleList

// optional uint32 lineNum = 1;
bool CGSNotifyRoleMapScheduleList::has_linenum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGSNotifyRoleMapScheduleList::set_has_linenum() {
  _has_bits_[0] |= 0x00000001u;
}
void CGSNotifyRoleMapScheduleList::clear_has_linenum() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGSNotifyRoleMapScheduleList::clear_linenum() {
  linenum_ = 0u;
  clear_has_linenum();
}
 ::google::protobuf::uint32 CGSNotifyRoleMapScheduleList::linenum() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRoleMapScheduleList.lineNum)
  return linenum_;
}
 void CGSNotifyRoleMapScheduleList::set_linenum(::google::protobuf::uint32 value) {
  set_has_linenum();
  linenum_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRoleMapScheduleList.lineNum)
}

// optional uint32 mapID = 2;
bool CGSNotifyRoleMapScheduleList::has_mapid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CGSNotifyRoleMapScheduleList::set_has_mapid() {
  _has_bits_[0] |= 0x00000002u;
}
void CGSNotifyRoleMapScheduleList::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000002u;
}
void CGSNotifyRoleMapScheduleList::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
 ::google::protobuf::uint32 CGSNotifyRoleMapScheduleList::mapid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRoleMapScheduleList.mapID)
  return mapid_;
}
 void CGSNotifyRoleMapScheduleList::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRoleMapScheduleList.mapID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGSNotifyRoleFightProperty::CGSNotifyRoleFightProperty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGSNotifyRoleFightProperty)
}

void CGSNotifyRoleFightProperty::InitAsDefaultInstance() {
}

CGSNotifyRoleFightProperty::CGSNotifyRoleFightProperty(const CGSNotifyRoleFightProperty& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGSNotifyRoleFightProperty)
}

void CGSNotifyRoleFightProperty::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGSNotifyRoleFightProperty::~CGSNotifyRoleFightProperty() {
  // @@protoc_insertion_point(destructor:NetPackage.CGSNotifyRoleFightProperty)
  SharedDtor();
}

void CGSNotifyRoleFightProperty::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGSNotifyRoleFightProperty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGSNotifyRoleFightProperty::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGSNotifyRoleFightProperty_descriptor_;
}

const CGSNotifyRoleFightProperty& CGSNotifyRoleFightProperty::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGSNotifyRoleFightProperty* CGSNotifyRoleFightProperty::default_instance_ = NULL;

CGSNotifyRoleFightProperty* CGSNotifyRoleFightProperty::New(::google::protobuf::Arena* arena) const {
  CGSNotifyRoleFightProperty* n = new CGSNotifyRoleFightProperty;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGSNotifyRoleFightProperty::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGSNotifyRoleFightProperty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGSNotifyRoleFightProperty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGSNotifyRoleFightProperty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGSNotifyRoleFightProperty)
  return false;
#undef DO_
}

void CGSNotifyRoleFightProperty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGSNotifyRoleFightProperty)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGSNotifyRoleFightProperty)
}

::google::protobuf::uint8* CGSNotifyRoleFightProperty::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGSNotifyRoleFightProperty)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGSNotifyRoleFightProperty)
  return target;
}

int CGSNotifyRoleFightProperty::ByteSize() const {
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGSNotifyRoleFightProperty::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGSNotifyRoleFightProperty* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGSNotifyRoleFightProperty>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGSNotifyRoleFightProperty::MergeFrom(const CGSNotifyRoleFightProperty& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGSNotifyRoleFightProperty::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGSNotifyRoleFightProperty::CopyFrom(const CGSNotifyRoleFightProperty& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGSNotifyRoleFightProperty::IsInitialized() const {

  return true;
}

void CGSNotifyRoleFightProperty::Swap(CGSNotifyRoleFightProperty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGSNotifyRoleFightProperty::InternalSwap(CGSNotifyRoleFightProperty* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGSNotifyRoleFightProperty::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGSNotifyRoleFightProperty_descriptor_;
  metadata.reflection = CGSNotifyRoleFightProperty_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGSNotifyRoleFightProperty

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGSNotifyAssetChange::CGSNotifyAssetChange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGSNotifyAssetChange)
}

void CGSNotifyAssetChange::InitAsDefaultInstance() {
}

CGSNotifyAssetChange::CGSNotifyAssetChange(const CGSNotifyAssetChange& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGSNotifyAssetChange)
}

void CGSNotifyAssetChange::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGSNotifyAssetChange::~CGSNotifyAssetChange() {
  // @@protoc_insertion_point(destructor:NetPackage.CGSNotifyAssetChange)
  SharedDtor();
}

void CGSNotifyAssetChange::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGSNotifyAssetChange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGSNotifyAssetChange::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGSNotifyAssetChange_descriptor_;
}

const CGSNotifyAssetChange& CGSNotifyAssetChange::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGSNotifyAssetChange* CGSNotifyAssetChange::default_instance_ = NULL;

CGSNotifyAssetChange* CGSNotifyAssetChange::New(::google::protobuf::Arena* arena) const {
  CGSNotifyAssetChange* n = new CGSNotifyAssetChange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGSNotifyAssetChange::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGSNotifyAssetChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGSNotifyAssetChange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGSNotifyAssetChange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGSNotifyAssetChange)
  return false;
#undef DO_
}

void CGSNotifyAssetChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGSNotifyAssetChange)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGSNotifyAssetChange)
}

::google::protobuf::uint8* CGSNotifyAssetChange::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGSNotifyAssetChange)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGSNotifyAssetChange)
  return target;
}

int CGSNotifyAssetChange::ByteSize() const {
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGSNotifyAssetChange::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGSNotifyAssetChange* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGSNotifyAssetChange>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGSNotifyAssetChange::MergeFrom(const CGSNotifyAssetChange& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGSNotifyAssetChange::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGSNotifyAssetChange::CopyFrom(const CGSNotifyAssetChange& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGSNotifyAssetChange::IsInitialized() const {

  return true;
}

void CGSNotifyAssetChange::Swap(CGSNotifyAssetChange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGSNotifyAssetChange::InternalSwap(CGSNotifyAssetChange* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGSNotifyAssetChange::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGSNotifyAssetChange_descriptor_;
  metadata.reflection = CGSNotifyAssetChange_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGSNotifyAssetChange

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGSNotifyLevelChange::CGSNotifyLevelChange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGSNotifyLevelChange)
}

void CGSNotifyLevelChange::InitAsDefaultInstance() {
}

CGSNotifyLevelChange::CGSNotifyLevelChange(const CGSNotifyLevelChange& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGSNotifyLevelChange)
}

void CGSNotifyLevelChange::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGSNotifyLevelChange::~CGSNotifyLevelChange() {
  // @@protoc_insertion_point(destructor:NetPackage.CGSNotifyLevelChange)
  SharedDtor();
}

void CGSNotifyLevelChange::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGSNotifyLevelChange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGSNotifyLevelChange::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGSNotifyLevelChange_descriptor_;
}

const CGSNotifyLevelChange& CGSNotifyLevelChange::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGSNotifyLevelChange* CGSNotifyLevelChange::default_instance_ = NULL;

CGSNotifyLevelChange* CGSNotifyLevelChange::New(::google::protobuf::Arena* arena) const {
  CGSNotifyLevelChange* n = new CGSNotifyLevelChange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGSNotifyLevelChange::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGSNotifyLevelChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGSNotifyLevelChange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGSNotifyLevelChange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGSNotifyLevelChange)
  return false;
#undef DO_
}

void CGSNotifyLevelChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGSNotifyLevelChange)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGSNotifyLevelChange)
}

::google::protobuf::uint8* CGSNotifyLevelChange::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGSNotifyLevelChange)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGSNotifyLevelChange)
  return target;
}

int CGSNotifyLevelChange::ByteSize() const {
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGSNotifyLevelChange::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGSNotifyLevelChange* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGSNotifyLevelChange>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGSNotifyLevelChange::MergeFrom(const CGSNotifyLevelChange& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGSNotifyLevelChange::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGSNotifyLevelChange::CopyFrom(const CGSNotifyLevelChange& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGSNotifyLevelChange::IsInitialized() const {

  return true;
}

void CGSNotifyLevelChange::Swap(CGSNotifyLevelChange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGSNotifyLevelChange::InternalSwap(CGSNotifyLevelChange* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGSNotifyLevelChange::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGSNotifyLevelChange_descriptor_;
  metadata.reflection = CGSNotifyLevelChange_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGSNotifyLevelChange

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGSNotifyExpChange::CGSNotifyExpChange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGSNotifyExpChange)
}

void CGSNotifyExpChange::InitAsDefaultInstance() {
}

CGSNotifyExpChange::CGSNotifyExpChange(const CGSNotifyExpChange& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGSNotifyExpChange)
}

void CGSNotifyExpChange::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGSNotifyExpChange::~CGSNotifyExpChange() {
  // @@protoc_insertion_point(destructor:NetPackage.CGSNotifyExpChange)
  SharedDtor();
}

void CGSNotifyExpChange::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGSNotifyExpChange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGSNotifyExpChange::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGSNotifyExpChange_descriptor_;
}

const CGSNotifyExpChange& CGSNotifyExpChange::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGSNotifyExpChange* CGSNotifyExpChange::default_instance_ = NULL;

CGSNotifyExpChange* CGSNotifyExpChange::New(::google::protobuf::Arena* arena) const {
  CGSNotifyExpChange* n = new CGSNotifyExpChange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGSNotifyExpChange::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGSNotifyExpChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGSNotifyExpChange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGSNotifyExpChange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGSNotifyExpChange)
  return false;
#undef DO_
}

void CGSNotifyExpChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGSNotifyExpChange)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGSNotifyExpChange)
}

::google::protobuf::uint8* CGSNotifyExpChange::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGSNotifyExpChange)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGSNotifyExpChange)
  return target;
}

int CGSNotifyExpChange::ByteSize() const {
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGSNotifyExpChange::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGSNotifyExpChange* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGSNotifyExpChange>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGSNotifyExpChange::MergeFrom(const CGSNotifyExpChange& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGSNotifyExpChange::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGSNotifyExpChange::CopyFrom(const CGSNotifyExpChange& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGSNotifyExpChange::IsInitialized() const {

  return true;
}

void CGSNotifyExpChange::Swap(CGSNotifyExpChange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGSNotifyExpChange::InternalSwap(CGSNotifyExpChange* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGSNotifyExpChange::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGSNotifyExpChange_descriptor_;
  metadata.reflection = CGSNotifyExpChange_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGSNotifyExpChange

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGSNotifyCurProperty::CGSNotifyCurProperty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGSNotifyCurProperty)
}

void CGSNotifyCurProperty::InitAsDefaultInstance() {
}

CGSNotifyCurProperty::CGSNotifyCurProperty(const CGSNotifyCurProperty& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGSNotifyCurProperty)
}

void CGSNotifyCurProperty::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGSNotifyCurProperty::~CGSNotifyCurProperty() {
  // @@protoc_insertion_point(destructor:NetPackage.CGSNotifyCurProperty)
  SharedDtor();
}

void CGSNotifyCurProperty::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGSNotifyCurProperty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGSNotifyCurProperty::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGSNotifyCurProperty_descriptor_;
}

const CGSNotifyCurProperty& CGSNotifyCurProperty::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGSNotifyCurProperty* CGSNotifyCurProperty::default_instance_ = NULL;

CGSNotifyCurProperty* CGSNotifyCurProperty::New(::google::protobuf::Arena* arena) const {
  CGSNotifyCurProperty* n = new CGSNotifyCurProperty;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGSNotifyCurProperty::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGSNotifyCurProperty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGSNotifyCurProperty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGSNotifyCurProperty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGSNotifyCurProperty)
  return false;
#undef DO_
}

void CGSNotifyCurProperty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGSNotifyCurProperty)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGSNotifyCurProperty)
}

::google::protobuf::uint8* CGSNotifyCurProperty::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGSNotifyCurProperty)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGSNotifyCurProperty)
  return target;
}

int CGSNotifyCurProperty::ByteSize() const {
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGSNotifyCurProperty::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGSNotifyCurProperty* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGSNotifyCurProperty>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGSNotifyCurProperty::MergeFrom(const CGSNotifyCurProperty& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGSNotifyCurProperty::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGSNotifyCurProperty::CopyFrom(const CGSNotifyCurProperty& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGSNotifyCurProperty::IsInitialized() const {

  return true;
}

void CGSNotifyCurProperty::Swap(CGSNotifyCurProperty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGSNotifyCurProperty::InternalSwap(CGSNotifyCurProperty* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGSNotifyCurProperty::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGSNotifyCurProperty_descriptor_;
  metadata.reflection = CGSNotifyCurProperty_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGSNotifyCurProperty

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGSNotifyDisplayGateIncome::CGSNotifyDisplayGateIncome()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGSNotifyDisplayGateIncome)
}

void CGSNotifyDisplayGateIncome::InitAsDefaultInstance() {
}

CGSNotifyDisplayGateIncome::CGSNotifyDisplayGateIncome(const CGSNotifyDisplayGateIncome& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGSNotifyDisplayGateIncome)
}

void CGSNotifyDisplayGateIncome::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGSNotifyDisplayGateIncome::~CGSNotifyDisplayGateIncome() {
  // @@protoc_insertion_point(destructor:NetPackage.CGSNotifyDisplayGateIncome)
  SharedDtor();
}

void CGSNotifyDisplayGateIncome::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGSNotifyDisplayGateIncome::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGSNotifyDisplayGateIncome::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGSNotifyDisplayGateIncome_descriptor_;
}

const CGSNotifyDisplayGateIncome& CGSNotifyDisplayGateIncome::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGSNotifyDisplayGateIncome* CGSNotifyDisplayGateIncome::default_instance_ = NULL;

CGSNotifyDisplayGateIncome* CGSNotifyDisplayGateIncome::New(::google::protobuf::Arena* arena) const {
  CGSNotifyDisplayGateIncome* n = new CGSNotifyDisplayGateIncome;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGSNotifyDisplayGateIncome::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGSNotifyDisplayGateIncome::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGSNotifyDisplayGateIncome)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGSNotifyDisplayGateIncome)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGSNotifyDisplayGateIncome)
  return false;
#undef DO_
}

void CGSNotifyDisplayGateIncome::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGSNotifyDisplayGateIncome)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGSNotifyDisplayGateIncome)
}

::google::protobuf::uint8* CGSNotifyDisplayGateIncome::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGSNotifyDisplayGateIncome)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGSNotifyDisplayGateIncome)
  return target;
}

int CGSNotifyDisplayGateIncome::ByteSize() const {
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGSNotifyDisplayGateIncome::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGSNotifyDisplayGateIncome* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGSNotifyDisplayGateIncome>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGSNotifyDisplayGateIncome::MergeFrom(const CGSNotifyDisplayGateIncome& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGSNotifyDisplayGateIncome::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGSNotifyDisplayGateIncome::CopyFrom(const CGSNotifyDisplayGateIncome& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGSNotifyDisplayGateIncome::IsInitialized() const {

  return true;
}

void CGSNotifyDisplayGateIncome::Swap(CGSNotifyDisplayGateIncome* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGSNotifyDisplayGateIncome::InternalSwap(CGSNotifyDisplayGateIncome* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGSNotifyDisplayGateIncome::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGSNotifyDisplayGateIncome_descriptor_;
  metadata.reflection = CGSNotifyDisplayGateIncome_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGSNotifyDisplayGateIncome

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCAskRelive::kReliveTypeFieldNumber;
const int CGCAskRelive::kAssetTypeFieldNumber;
const int CGCAskRelive::kMUn32AssetNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCAskRelive::CGCAskRelive()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGCAskRelive)
}

void CGCAskRelive::InitAsDefaultInstance() {
}

CGCAskRelive::CGCAskRelive(const CGCAskRelive& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGCAskRelive)
}

void CGCAskRelive::SharedCtor() {
  _cached_size_ = 0;
  _relivetype_ = false;
  _assettype_ = false;
  m_un32assetnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCAskRelive::~CGCAskRelive() {
  // @@protoc_insertion_point(destructor:NetPackage.CGCAskRelive)
  SharedDtor();
}

void CGCAskRelive::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGCAskRelive::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCAskRelive::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCAskRelive_descriptor_;
}

const CGCAskRelive& CGCAskRelive::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGCAskRelive* CGCAskRelive::default_instance_ = NULL;

CGCAskRelive* CGCAskRelive::New(::google::protobuf::Arena* arena) const {
  CGCAskRelive* n = new CGCAskRelive;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCAskRelive::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CGCAskRelive*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(_relivetype_, m_un32assetnum_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCAskRelive::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGCAskRelive)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool _reliveType = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &_relivetype_)));
          set_has__relivetype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse__assetType;
        break;
      }

      // optional bool _assetType = 2;
      case 2: {
        if (tag == 16) {
         parse__assetType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &_assettype_)));
          set_has__assettype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_m_un32AssetNum;
        break;
      }

      // optional uint32 m_un32AssetNum = 3;
      case 3: {
        if (tag == 24) {
         parse_m_un32AssetNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32assetnum_)));
          set_has_m_un32assetnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGCAskRelive)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGCAskRelive)
  return false;
#undef DO_
}

void CGCAskRelive::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGCAskRelive)
  // optional bool _reliveType = 1;
  if (has__relivetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->_relivetype(), output);
  }

  // optional bool _assetType = 2;
  if (has__assettype()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->_assettype(), output);
  }

  // optional uint32 m_un32AssetNum = 3;
  if (has_m_un32assetnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->m_un32assetnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGCAskRelive)
}

::google::protobuf::uint8* CGCAskRelive::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGCAskRelive)
  // optional bool _reliveType = 1;
  if (has__relivetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->_relivetype(), target);
  }

  // optional bool _assetType = 2;
  if (has__assettype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->_assettype(), target);
  }

  // optional uint32 m_un32AssetNum = 3;
  if (has_m_un32assetnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->m_un32assetnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGCAskRelive)
  return target;
}

int CGCAskRelive::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional bool _reliveType = 1;
    if (has__relivetype()) {
      total_size += 1 + 1;
    }

    // optional bool _assetType = 2;
    if (has__assettype()) {
      total_size += 1 + 1;
    }

    // optional uint32 m_un32AssetNum = 3;
    if (has_m_un32assetnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32assetnum());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCAskRelive::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCAskRelive* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCAskRelive>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCAskRelive::MergeFrom(const CGCAskRelive& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has__relivetype()) {
      set__relivetype(from._relivetype());
    }
    if (from.has__assettype()) {
      set__assettype(from._assettype());
    }
    if (from.has_m_un32assetnum()) {
      set_m_un32assetnum(from.m_un32assetnum());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCAskRelive::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCAskRelive::CopyFrom(const CGCAskRelive& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCAskRelive::IsInitialized() const {

  return true;
}

void CGCAskRelive::Swap(CGCAskRelive* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCAskRelive::InternalSwap(CGCAskRelive* other) {
  std::swap(_relivetype_, other->_relivetype_);
  std::swap(_assettype_, other->_assettype_);
  std::swap(m_un32assetnum_, other->m_un32assetnum_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCAskRelive::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCAskRelive_descriptor_;
  metadata.reflection = CGCAskRelive_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCAskRelive

// optional bool _reliveType = 1;
bool CGCAskRelive::has__relivetype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGCAskRelive::set_has__relivetype() {
  _has_bits_[0] |= 0x00000001u;
}
void CGCAskRelive::clear_has__relivetype() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGCAskRelive::clear__relivetype() {
  _relivetype_ = false;
  clear_has__relivetype();
}
 bool CGCAskRelive::_relivetype() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCAskRelive._reliveType)
  return _relivetype_;
}
 void CGCAskRelive::set__relivetype(bool value) {
  set_has__relivetype();
  _relivetype_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCAskRelive._reliveType)
}

// optional bool _assetType = 2;
bool CGCAskRelive::has__assettype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CGCAskRelive::set_has__assettype() {
  _has_bits_[0] |= 0x00000002u;
}
void CGCAskRelive::clear_has__assettype() {
  _has_bits_[0] &= ~0x00000002u;
}
void CGCAskRelive::clear__assettype() {
  _assettype_ = false;
  clear_has__assettype();
}
 bool CGCAskRelive::_assettype() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCAskRelive._assetType)
  return _assettype_;
}
 void CGCAskRelive::set__assettype(bool value) {
  set_has__assettype();
  _assettype_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCAskRelive._assetType)
}

// optional uint32 m_un32AssetNum = 3;
bool CGCAskRelive::has_m_un32assetnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CGCAskRelive::set_has_m_un32assetnum() {
  _has_bits_[0] |= 0x00000004u;
}
void CGCAskRelive::clear_has_m_un32assetnum() {
  _has_bits_[0] &= ~0x00000004u;
}
void CGCAskRelive::clear_m_un32assetnum() {
  m_un32assetnum_ = 0u;
  clear_has_m_un32assetnum();
}
 ::google::protobuf::uint32 CGCAskRelive::m_un32assetnum() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCAskRelive.m_un32AssetNum)
  return m_un32assetnum_;
}
 void CGCAskRelive::set_m_un32assetnum(::google::protobuf::uint32 value) {
  set_has_m_un32assetnum();
  m_un32assetnum_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCAskRelive.m_un32AssetNum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCReportExp::kMUn32GotExpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCReportExp::CGCReportExp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGCReportExp)
}

void CGCReportExp::InitAsDefaultInstance() {
}

CGCReportExp::CGCReportExp(const CGCReportExp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGCReportExp)
}

void CGCReportExp::SharedCtor() {
  _cached_size_ = 0;
  m_un32gotexp_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCReportExp::~CGCReportExp() {
  // @@protoc_insertion_point(destructor:NetPackage.CGCReportExp)
  SharedDtor();
}

void CGCReportExp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGCReportExp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCReportExp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCReportExp_descriptor_;
}

const CGCReportExp& CGCReportExp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGCReportExp* CGCReportExp::default_instance_ = NULL;

CGCReportExp* CGCReportExp::New(::google::protobuf::Arena* arena) const {
  CGCReportExp* n = new CGCReportExp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCReportExp::Clear() {
  m_un32gotexp_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCReportExp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGCReportExp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 m_un32GotExp = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32gotexp_)));
          set_has_m_un32gotexp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGCReportExp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGCReportExp)
  return false;
#undef DO_
}

void CGCReportExp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGCReportExp)
  // optional uint32 m_un32GotExp = 1;
  if (has_m_un32gotexp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->m_un32gotexp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGCReportExp)
}

::google::protobuf::uint8* CGCReportExp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGCReportExp)
  // optional uint32 m_un32GotExp = 1;
  if (has_m_un32gotexp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->m_un32gotexp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGCReportExp)
  return target;
}

int CGCReportExp::ByteSize() const {
  int total_size = 0;

  // optional uint32 m_un32GotExp = 1;
  if (has_m_un32gotexp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->m_un32gotexp());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCReportExp::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCReportExp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCReportExp>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCReportExp::MergeFrom(const CGCReportExp& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_un32gotexp()) {
      set_m_un32gotexp(from.m_un32gotexp());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCReportExp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCReportExp::CopyFrom(const CGCReportExp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCReportExp::IsInitialized() const {

  return true;
}

void CGCReportExp::Swap(CGCReportExp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCReportExp::InternalSwap(CGCReportExp* other) {
  std::swap(m_un32gotexp_, other->m_un32gotexp_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCReportExp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCReportExp_descriptor_;
  metadata.reflection = CGCReportExp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCReportExp

// optional uint32 m_un32GotExp = 1;
bool CGCReportExp::has_m_un32gotexp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGCReportExp::set_has_m_un32gotexp() {
  _has_bits_[0] |= 0x00000001u;
}
void CGCReportExp::clear_has_m_un32gotexp() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGCReportExp::clear_m_un32gotexp() {
  m_un32gotexp_ = 0u;
  clear_has_m_un32gotexp();
}
 ::google::protobuf::uint32 CGCReportExp::m_un32gotexp() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCReportExp.m_un32GotExp)
  return m_un32gotexp_;
}
 void CGCReportExp::set_m_un32gotexp(::google::protobuf::uint32 value) {
  set_has_m_un32gotexp();
  m_un32gotexp_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCReportExp.m_un32GotExp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCReportUseSkill::kMUn32ObjIDFieldNumber;
const int CGCReportUseSkill::kMUn32SkillIDFieldNumber;
const int CGCReportUseSkill::kMFPosXFieldNumber;
const int CGCReportUseSkill::kMFPosYFieldNumber;
const int CGCReportUseSkill::kMFPosZFieldNumber;
const int CGCReportUseSkill::kMFDirXFieldNumber;
const int CGCReportUseSkill::kMFDirYFieldNumber;
const int CGCReportUseSkill::kMFDirZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCReportUseSkill::CGCReportUseSkill()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGCReportUseSkill)
}

void CGCReportUseSkill::InitAsDefaultInstance() {
}

CGCReportUseSkill::CGCReportUseSkill(const CGCReportUseSkill& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGCReportUseSkill)
}

void CGCReportUseSkill::SharedCtor() {
  _cached_size_ = 0;
  m_un32objid_ = 0u;
  m_un32skillid_ = 0u;
  m_fposx_ = 0;
  m_fposy_ = 0;
  m_fposz_ = 0;
  m_fdirx_ = 0;
  m_fdiry_ = 0;
  m_fdirz_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCReportUseSkill::~CGCReportUseSkill() {
  // @@protoc_insertion_point(destructor:NetPackage.CGCReportUseSkill)
  SharedDtor();
}

void CGCReportUseSkill::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGCReportUseSkill::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCReportUseSkill::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCReportUseSkill_descriptor_;
}

const CGCReportUseSkill& CGCReportUseSkill::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGCReportUseSkill* CGCReportUseSkill::default_instance_ = NULL;

CGCReportUseSkill* CGCReportUseSkill::New(::google::protobuf::Arena* arena) const {
  CGCReportUseSkill* n = new CGCReportUseSkill;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCReportUseSkill::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CGCReportUseSkill*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(m_un32objid_, m_fdirz_);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCReportUseSkill::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGCReportUseSkill)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 m_un32ObjID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32objid_)));
          set_has_m_un32objid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_m_un32SkillID;
        break;
      }

      // optional uint32 m_un32SkillID = 2;
      case 2: {
        if (tag == 16) {
         parse_m_un32SkillID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32skillid_)));
          set_has_m_un32skillid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_m_fPosX;
        break;
      }

      // optional float m_fPosX = 3;
      case 3: {
        if (tag == 29) {
         parse_m_fPosX:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fposx_)));
          set_has_m_fposx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_m_fPosY;
        break;
      }

      // optional float m_fPosY = 4;
      case 4: {
        if (tag == 37) {
         parse_m_fPosY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fposy_)));
          set_has_m_fposy();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_m_fPosZ;
        break;
      }

      // optional float m_fPosZ = 5;
      case 5: {
        if (tag == 45) {
         parse_m_fPosZ:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fposz_)));
          set_has_m_fposz();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_m_fDirX;
        break;
      }

      // optional float m_fDirX = 6;
      case 6: {
        if (tag == 53) {
         parse_m_fDirX:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fdirx_)));
          set_has_m_fdirx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(61)) goto parse_m_fDirY;
        break;
      }

      // optional float m_fDirY = 7;
      case 7: {
        if (tag == 61) {
         parse_m_fDirY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fdiry_)));
          set_has_m_fdiry();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(69)) goto parse_m_fDirZ;
        break;
      }

      // optional float m_fDirZ = 8;
      case 8: {
        if (tag == 69) {
         parse_m_fDirZ:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fdirz_)));
          set_has_m_fdirz();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGCReportUseSkill)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGCReportUseSkill)
  return false;
#undef DO_
}

void CGCReportUseSkill::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGCReportUseSkill)
  // optional uint32 m_un32ObjID = 1;
  if (has_m_un32objid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->m_un32objid(), output);
  }

  // optional uint32 m_un32SkillID = 2;
  if (has_m_un32skillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->m_un32skillid(), output);
  }

  // optional float m_fPosX = 3;
  if (has_m_fposx()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->m_fposx(), output);
  }

  // optional float m_fPosY = 4;
  if (has_m_fposy()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->m_fposy(), output);
  }

  // optional float m_fPosZ = 5;
  if (has_m_fposz()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->m_fposz(), output);
  }

  // optional float m_fDirX = 6;
  if (has_m_fdirx()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->m_fdirx(), output);
  }

  // optional float m_fDirY = 7;
  if (has_m_fdiry()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->m_fdiry(), output);
  }

  // optional float m_fDirZ = 8;
  if (has_m_fdirz()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->m_fdirz(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGCReportUseSkill)
}

::google::protobuf::uint8* CGCReportUseSkill::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGCReportUseSkill)
  // optional uint32 m_un32ObjID = 1;
  if (has_m_un32objid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->m_un32objid(), target);
  }

  // optional uint32 m_un32SkillID = 2;
  if (has_m_un32skillid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->m_un32skillid(), target);
  }

  // optional float m_fPosX = 3;
  if (has_m_fposx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->m_fposx(), target);
  }

  // optional float m_fPosY = 4;
  if (has_m_fposy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->m_fposy(), target);
  }

  // optional float m_fPosZ = 5;
  if (has_m_fposz()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->m_fposz(), target);
  }

  // optional float m_fDirX = 6;
  if (has_m_fdirx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->m_fdirx(), target);
  }

  // optional float m_fDirY = 7;
  if (has_m_fdiry()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->m_fdiry(), target);
  }

  // optional float m_fDirZ = 8;
  if (has_m_fdirz()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->m_fdirz(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGCReportUseSkill)
  return target;
}

int CGCReportUseSkill::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional uint32 m_un32ObjID = 1;
    if (has_m_un32objid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32objid());
    }

    // optional uint32 m_un32SkillID = 2;
    if (has_m_un32skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32skillid());
    }

    // optional float m_fPosX = 3;
    if (has_m_fposx()) {
      total_size += 1 + 4;
    }

    // optional float m_fPosY = 4;
    if (has_m_fposy()) {
      total_size += 1 + 4;
    }

    // optional float m_fPosZ = 5;
    if (has_m_fposz()) {
      total_size += 1 + 4;
    }

    // optional float m_fDirX = 6;
    if (has_m_fdirx()) {
      total_size += 1 + 4;
    }

    // optional float m_fDirY = 7;
    if (has_m_fdiry()) {
      total_size += 1 + 4;
    }

    // optional float m_fDirZ = 8;
    if (has_m_fdirz()) {
      total_size += 1 + 4;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCReportUseSkill::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCReportUseSkill* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCReportUseSkill>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCReportUseSkill::MergeFrom(const CGCReportUseSkill& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_un32objid()) {
      set_m_un32objid(from.m_un32objid());
    }
    if (from.has_m_un32skillid()) {
      set_m_un32skillid(from.m_un32skillid());
    }
    if (from.has_m_fposx()) {
      set_m_fposx(from.m_fposx());
    }
    if (from.has_m_fposy()) {
      set_m_fposy(from.m_fposy());
    }
    if (from.has_m_fposz()) {
      set_m_fposz(from.m_fposz());
    }
    if (from.has_m_fdirx()) {
      set_m_fdirx(from.m_fdirx());
    }
    if (from.has_m_fdiry()) {
      set_m_fdiry(from.m_fdiry());
    }
    if (from.has_m_fdirz()) {
      set_m_fdirz(from.m_fdirz());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCReportUseSkill::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCReportUseSkill::CopyFrom(const CGCReportUseSkill& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCReportUseSkill::IsInitialized() const {

  return true;
}

void CGCReportUseSkill::Swap(CGCReportUseSkill* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCReportUseSkill::InternalSwap(CGCReportUseSkill* other) {
  std::swap(m_un32objid_, other->m_un32objid_);
  std::swap(m_un32skillid_, other->m_un32skillid_);
  std::swap(m_fposx_, other->m_fposx_);
  std::swap(m_fposy_, other->m_fposy_);
  std::swap(m_fposz_, other->m_fposz_);
  std::swap(m_fdirx_, other->m_fdirx_);
  std::swap(m_fdiry_, other->m_fdiry_);
  std::swap(m_fdirz_, other->m_fdirz_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCReportUseSkill::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCReportUseSkill_descriptor_;
  metadata.reflection = CGCReportUseSkill_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCReportUseSkill

// optional uint32 m_un32ObjID = 1;
bool CGCReportUseSkill::has_m_un32objid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGCReportUseSkill::set_has_m_un32objid() {
  _has_bits_[0] |= 0x00000001u;
}
void CGCReportUseSkill::clear_has_m_un32objid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGCReportUseSkill::clear_m_un32objid() {
  m_un32objid_ = 0u;
  clear_has_m_un32objid();
}
 ::google::protobuf::uint32 CGCReportUseSkill::m_un32objid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCReportUseSkill.m_un32ObjID)
  return m_un32objid_;
}
 void CGCReportUseSkill::set_m_un32objid(::google::protobuf::uint32 value) {
  set_has_m_un32objid();
  m_un32objid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCReportUseSkill.m_un32ObjID)
}

// optional uint32 m_un32SkillID = 2;
bool CGCReportUseSkill::has_m_un32skillid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CGCReportUseSkill::set_has_m_un32skillid() {
  _has_bits_[0] |= 0x00000002u;
}
void CGCReportUseSkill::clear_has_m_un32skillid() {
  _has_bits_[0] &= ~0x00000002u;
}
void CGCReportUseSkill::clear_m_un32skillid() {
  m_un32skillid_ = 0u;
  clear_has_m_un32skillid();
}
 ::google::protobuf::uint32 CGCReportUseSkill::m_un32skillid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCReportUseSkill.m_un32SkillID)
  return m_un32skillid_;
}
 void CGCReportUseSkill::set_m_un32skillid(::google::protobuf::uint32 value) {
  set_has_m_un32skillid();
  m_un32skillid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCReportUseSkill.m_un32SkillID)
}

// optional float m_fPosX = 3;
bool CGCReportUseSkill::has_m_fposx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CGCReportUseSkill::set_has_m_fposx() {
  _has_bits_[0] |= 0x00000004u;
}
void CGCReportUseSkill::clear_has_m_fposx() {
  _has_bits_[0] &= ~0x00000004u;
}
void CGCReportUseSkill::clear_m_fposx() {
  m_fposx_ = 0;
  clear_has_m_fposx();
}
 float CGCReportUseSkill::m_fposx() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCReportUseSkill.m_fPosX)
  return m_fposx_;
}
 void CGCReportUseSkill::set_m_fposx(float value) {
  set_has_m_fposx();
  m_fposx_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCReportUseSkill.m_fPosX)
}

// optional float m_fPosY = 4;
bool CGCReportUseSkill::has_m_fposy() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CGCReportUseSkill::set_has_m_fposy() {
  _has_bits_[0] |= 0x00000008u;
}
void CGCReportUseSkill::clear_has_m_fposy() {
  _has_bits_[0] &= ~0x00000008u;
}
void CGCReportUseSkill::clear_m_fposy() {
  m_fposy_ = 0;
  clear_has_m_fposy();
}
 float CGCReportUseSkill::m_fposy() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCReportUseSkill.m_fPosY)
  return m_fposy_;
}
 void CGCReportUseSkill::set_m_fposy(float value) {
  set_has_m_fposy();
  m_fposy_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCReportUseSkill.m_fPosY)
}

// optional float m_fPosZ = 5;
bool CGCReportUseSkill::has_m_fposz() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CGCReportUseSkill::set_has_m_fposz() {
  _has_bits_[0] |= 0x00000010u;
}
void CGCReportUseSkill::clear_has_m_fposz() {
  _has_bits_[0] &= ~0x00000010u;
}
void CGCReportUseSkill::clear_m_fposz() {
  m_fposz_ = 0;
  clear_has_m_fposz();
}
 float CGCReportUseSkill::m_fposz() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCReportUseSkill.m_fPosZ)
  return m_fposz_;
}
 void CGCReportUseSkill::set_m_fposz(float value) {
  set_has_m_fposz();
  m_fposz_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCReportUseSkill.m_fPosZ)
}

// optional float m_fDirX = 6;
bool CGCReportUseSkill::has_m_fdirx() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CGCReportUseSkill::set_has_m_fdirx() {
  _has_bits_[0] |= 0x00000020u;
}
void CGCReportUseSkill::clear_has_m_fdirx() {
  _has_bits_[0] &= ~0x00000020u;
}
void CGCReportUseSkill::clear_m_fdirx() {
  m_fdirx_ = 0;
  clear_has_m_fdirx();
}
 float CGCReportUseSkill::m_fdirx() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCReportUseSkill.m_fDirX)
  return m_fdirx_;
}
 void CGCReportUseSkill::set_m_fdirx(float value) {
  set_has_m_fdirx();
  m_fdirx_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCReportUseSkill.m_fDirX)
}

// optional float m_fDirY = 7;
bool CGCReportUseSkill::has_m_fdiry() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CGCReportUseSkill::set_has_m_fdiry() {
  _has_bits_[0] |= 0x00000040u;
}
void CGCReportUseSkill::clear_has_m_fdiry() {
  _has_bits_[0] &= ~0x00000040u;
}
void CGCReportUseSkill::clear_m_fdiry() {
  m_fdiry_ = 0;
  clear_has_m_fdiry();
}
 float CGCReportUseSkill::m_fdiry() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCReportUseSkill.m_fDirY)
  return m_fdiry_;
}
 void CGCReportUseSkill::set_m_fdiry(float value) {
  set_has_m_fdiry();
  m_fdiry_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCReportUseSkill.m_fDirY)
}

// optional float m_fDirZ = 8;
bool CGCReportUseSkill::has_m_fdirz() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CGCReportUseSkill::set_has_m_fdirz() {
  _has_bits_[0] |= 0x00000080u;
}
void CGCReportUseSkill::clear_has_m_fdirz() {
  _has_bits_[0] &= ~0x00000080u;
}
void CGCReportUseSkill::clear_m_fdirz() {
  m_fdirz_ = 0;
  clear_has_m_fdirz();
}
 float CGCReportUseSkill::m_fdirz() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCReportUseSkill.m_fDirZ)
  return m_fdirz_;
}
 void CGCReportUseSkill::set_m_fdirz(float value) {
  set_has_m_fdirz();
  m_fdirz_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCReportUseSkill.m_fDirZ)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGSNotifySkillReleased::kMUn32ObjectIDFieldNumber;
const int CGSNotifySkillReleased::kMUn32SkillIDFieldNumber;
const int CGSNotifySkillReleased::kMFPosXFieldNumber;
const int CGSNotifySkillReleased::kMFPosYFieldNumber;
const int CGSNotifySkillReleased::kMFPosZFieldNumber;
const int CGSNotifySkillReleased::kMFDirXFieldNumber;
const int CGSNotifySkillReleased::kMFDirYFieldNumber;
const int CGSNotifySkillReleased::kMFDirZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGSNotifySkillReleased::CGSNotifySkillReleased()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGSNotifySkillReleased)
}

void CGSNotifySkillReleased::InitAsDefaultInstance() {
}

CGSNotifySkillReleased::CGSNotifySkillReleased(const CGSNotifySkillReleased& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGSNotifySkillReleased)
}

void CGSNotifySkillReleased::SharedCtor() {
  _cached_size_ = 0;
  m_un32objectid_ = 0u;
  m_un32skillid_ = 0u;
  m_fposx_ = 0;
  m_fposy_ = 0;
  m_fposz_ = 0;
  m_fdirx_ = 0;
  m_fdiry_ = 0;
  m_fdirz_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGSNotifySkillReleased::~CGSNotifySkillReleased() {
  // @@protoc_insertion_point(destructor:NetPackage.CGSNotifySkillReleased)
  SharedDtor();
}

void CGSNotifySkillReleased::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGSNotifySkillReleased::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGSNotifySkillReleased::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGSNotifySkillReleased_descriptor_;
}

const CGSNotifySkillReleased& CGSNotifySkillReleased::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGSNotifySkillReleased* CGSNotifySkillReleased::default_instance_ = NULL;

CGSNotifySkillReleased* CGSNotifySkillReleased::New(::google::protobuf::Arena* arena) const {
  CGSNotifySkillReleased* n = new CGSNotifySkillReleased;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGSNotifySkillReleased::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CGSNotifySkillReleased*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(m_un32objectid_, m_fdirz_);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGSNotifySkillReleased::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGSNotifySkillReleased)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 m_un32ObjectID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32objectid_)));
          set_has_m_un32objectid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_m_un32SkillID;
        break;
      }

      // optional uint32 m_un32SkillID = 2;
      case 2: {
        if (tag == 16) {
         parse_m_un32SkillID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32skillid_)));
          set_has_m_un32skillid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_m_fPosX;
        break;
      }

      // optional float m_fPosX = 3;
      case 3: {
        if (tag == 29) {
         parse_m_fPosX:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fposx_)));
          set_has_m_fposx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_m_fPosY;
        break;
      }

      // optional float m_fPosY = 4;
      case 4: {
        if (tag == 37) {
         parse_m_fPosY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fposy_)));
          set_has_m_fposy();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_m_fPosZ;
        break;
      }

      // optional float m_fPosZ = 5;
      case 5: {
        if (tag == 45) {
         parse_m_fPosZ:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fposz_)));
          set_has_m_fposz();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_m_fDirX;
        break;
      }

      // optional float m_fDirX = 6;
      case 6: {
        if (tag == 53) {
         parse_m_fDirX:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fdirx_)));
          set_has_m_fdirx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(61)) goto parse_m_fDirY;
        break;
      }

      // optional float m_fDirY = 7;
      case 7: {
        if (tag == 61) {
         parse_m_fDirY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fdiry_)));
          set_has_m_fdiry();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(69)) goto parse_m_fDirZ;
        break;
      }

      // optional float m_fDirZ = 8;
      case 8: {
        if (tag == 69) {
         parse_m_fDirZ:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fdirz_)));
          set_has_m_fdirz();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGSNotifySkillReleased)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGSNotifySkillReleased)
  return false;
#undef DO_
}

void CGSNotifySkillReleased::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGSNotifySkillReleased)
  // optional uint32 m_un32ObjectID = 1;
  if (has_m_un32objectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->m_un32objectid(), output);
  }

  // optional uint32 m_un32SkillID = 2;
  if (has_m_un32skillid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->m_un32skillid(), output);
  }

  // optional float m_fPosX = 3;
  if (has_m_fposx()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->m_fposx(), output);
  }

  // optional float m_fPosY = 4;
  if (has_m_fposy()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->m_fposy(), output);
  }

  // optional float m_fPosZ = 5;
  if (has_m_fposz()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->m_fposz(), output);
  }

  // optional float m_fDirX = 6;
  if (has_m_fdirx()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->m_fdirx(), output);
  }

  // optional float m_fDirY = 7;
  if (has_m_fdiry()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->m_fdiry(), output);
  }

  // optional float m_fDirZ = 8;
  if (has_m_fdirz()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->m_fdirz(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGSNotifySkillReleased)
}

::google::protobuf::uint8* CGSNotifySkillReleased::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGSNotifySkillReleased)
  // optional uint32 m_un32ObjectID = 1;
  if (has_m_un32objectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->m_un32objectid(), target);
  }

  // optional uint32 m_un32SkillID = 2;
  if (has_m_un32skillid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->m_un32skillid(), target);
  }

  // optional float m_fPosX = 3;
  if (has_m_fposx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->m_fposx(), target);
  }

  // optional float m_fPosY = 4;
  if (has_m_fposy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->m_fposy(), target);
  }

  // optional float m_fPosZ = 5;
  if (has_m_fposz()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->m_fposz(), target);
  }

  // optional float m_fDirX = 6;
  if (has_m_fdirx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->m_fdirx(), target);
  }

  // optional float m_fDirY = 7;
  if (has_m_fdiry()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->m_fdiry(), target);
  }

  // optional float m_fDirZ = 8;
  if (has_m_fdirz()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->m_fdirz(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGSNotifySkillReleased)
  return target;
}

int CGSNotifySkillReleased::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional uint32 m_un32ObjectID = 1;
    if (has_m_un32objectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32objectid());
    }

    // optional uint32 m_un32SkillID = 2;
    if (has_m_un32skillid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32skillid());
    }

    // optional float m_fPosX = 3;
    if (has_m_fposx()) {
      total_size += 1 + 4;
    }

    // optional float m_fPosY = 4;
    if (has_m_fposy()) {
      total_size += 1 + 4;
    }

    // optional float m_fPosZ = 5;
    if (has_m_fposz()) {
      total_size += 1 + 4;
    }

    // optional float m_fDirX = 6;
    if (has_m_fdirx()) {
      total_size += 1 + 4;
    }

    // optional float m_fDirY = 7;
    if (has_m_fdiry()) {
      total_size += 1 + 4;
    }

    // optional float m_fDirZ = 8;
    if (has_m_fdirz()) {
      total_size += 1 + 4;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGSNotifySkillReleased::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGSNotifySkillReleased* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGSNotifySkillReleased>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGSNotifySkillReleased::MergeFrom(const CGSNotifySkillReleased& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_un32objectid()) {
      set_m_un32objectid(from.m_un32objectid());
    }
    if (from.has_m_un32skillid()) {
      set_m_un32skillid(from.m_un32skillid());
    }
    if (from.has_m_fposx()) {
      set_m_fposx(from.m_fposx());
    }
    if (from.has_m_fposy()) {
      set_m_fposy(from.m_fposy());
    }
    if (from.has_m_fposz()) {
      set_m_fposz(from.m_fposz());
    }
    if (from.has_m_fdirx()) {
      set_m_fdirx(from.m_fdirx());
    }
    if (from.has_m_fdiry()) {
      set_m_fdiry(from.m_fdiry());
    }
    if (from.has_m_fdirz()) {
      set_m_fdirz(from.m_fdirz());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGSNotifySkillReleased::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGSNotifySkillReleased::CopyFrom(const CGSNotifySkillReleased& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGSNotifySkillReleased::IsInitialized() const {

  return true;
}

void CGSNotifySkillReleased::Swap(CGSNotifySkillReleased* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGSNotifySkillReleased::InternalSwap(CGSNotifySkillReleased* other) {
  std::swap(m_un32objectid_, other->m_un32objectid_);
  std::swap(m_un32skillid_, other->m_un32skillid_);
  std::swap(m_fposx_, other->m_fposx_);
  std::swap(m_fposy_, other->m_fposy_);
  std::swap(m_fposz_, other->m_fposz_);
  std::swap(m_fdirx_, other->m_fdirx_);
  std::swap(m_fdiry_, other->m_fdiry_);
  std::swap(m_fdirz_, other->m_fdirz_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGSNotifySkillReleased::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGSNotifySkillReleased_descriptor_;
  metadata.reflection = CGSNotifySkillReleased_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGSNotifySkillReleased

// optional uint32 m_un32ObjectID = 1;
bool CGSNotifySkillReleased::has_m_un32objectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGSNotifySkillReleased::set_has_m_un32objectid() {
  _has_bits_[0] |= 0x00000001u;
}
void CGSNotifySkillReleased::clear_has_m_un32objectid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGSNotifySkillReleased::clear_m_un32objectid() {
  m_un32objectid_ = 0u;
  clear_has_m_un32objectid();
}
 ::google::protobuf::uint32 CGSNotifySkillReleased::m_un32objectid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifySkillReleased.m_un32ObjectID)
  return m_un32objectid_;
}
 void CGSNotifySkillReleased::set_m_un32objectid(::google::protobuf::uint32 value) {
  set_has_m_un32objectid();
  m_un32objectid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifySkillReleased.m_un32ObjectID)
}

// optional uint32 m_un32SkillID = 2;
bool CGSNotifySkillReleased::has_m_un32skillid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CGSNotifySkillReleased::set_has_m_un32skillid() {
  _has_bits_[0] |= 0x00000002u;
}
void CGSNotifySkillReleased::clear_has_m_un32skillid() {
  _has_bits_[0] &= ~0x00000002u;
}
void CGSNotifySkillReleased::clear_m_un32skillid() {
  m_un32skillid_ = 0u;
  clear_has_m_un32skillid();
}
 ::google::protobuf::uint32 CGSNotifySkillReleased::m_un32skillid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifySkillReleased.m_un32SkillID)
  return m_un32skillid_;
}
 void CGSNotifySkillReleased::set_m_un32skillid(::google::protobuf::uint32 value) {
  set_has_m_un32skillid();
  m_un32skillid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifySkillReleased.m_un32SkillID)
}

// optional float m_fPosX = 3;
bool CGSNotifySkillReleased::has_m_fposx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CGSNotifySkillReleased::set_has_m_fposx() {
  _has_bits_[0] |= 0x00000004u;
}
void CGSNotifySkillReleased::clear_has_m_fposx() {
  _has_bits_[0] &= ~0x00000004u;
}
void CGSNotifySkillReleased::clear_m_fposx() {
  m_fposx_ = 0;
  clear_has_m_fposx();
}
 float CGSNotifySkillReleased::m_fposx() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifySkillReleased.m_fPosX)
  return m_fposx_;
}
 void CGSNotifySkillReleased::set_m_fposx(float value) {
  set_has_m_fposx();
  m_fposx_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifySkillReleased.m_fPosX)
}

// optional float m_fPosY = 4;
bool CGSNotifySkillReleased::has_m_fposy() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CGSNotifySkillReleased::set_has_m_fposy() {
  _has_bits_[0] |= 0x00000008u;
}
void CGSNotifySkillReleased::clear_has_m_fposy() {
  _has_bits_[0] &= ~0x00000008u;
}
void CGSNotifySkillReleased::clear_m_fposy() {
  m_fposy_ = 0;
  clear_has_m_fposy();
}
 float CGSNotifySkillReleased::m_fposy() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifySkillReleased.m_fPosY)
  return m_fposy_;
}
 void CGSNotifySkillReleased::set_m_fposy(float value) {
  set_has_m_fposy();
  m_fposy_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifySkillReleased.m_fPosY)
}

// optional float m_fPosZ = 5;
bool CGSNotifySkillReleased::has_m_fposz() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CGSNotifySkillReleased::set_has_m_fposz() {
  _has_bits_[0] |= 0x00000010u;
}
void CGSNotifySkillReleased::clear_has_m_fposz() {
  _has_bits_[0] &= ~0x00000010u;
}
void CGSNotifySkillReleased::clear_m_fposz() {
  m_fposz_ = 0;
  clear_has_m_fposz();
}
 float CGSNotifySkillReleased::m_fposz() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifySkillReleased.m_fPosZ)
  return m_fposz_;
}
 void CGSNotifySkillReleased::set_m_fposz(float value) {
  set_has_m_fposz();
  m_fposz_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifySkillReleased.m_fPosZ)
}

// optional float m_fDirX = 6;
bool CGSNotifySkillReleased::has_m_fdirx() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CGSNotifySkillReleased::set_has_m_fdirx() {
  _has_bits_[0] |= 0x00000020u;
}
void CGSNotifySkillReleased::clear_has_m_fdirx() {
  _has_bits_[0] &= ~0x00000020u;
}
void CGSNotifySkillReleased::clear_m_fdirx() {
  m_fdirx_ = 0;
  clear_has_m_fdirx();
}
 float CGSNotifySkillReleased::m_fdirx() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifySkillReleased.m_fDirX)
  return m_fdirx_;
}
 void CGSNotifySkillReleased::set_m_fdirx(float value) {
  set_has_m_fdirx();
  m_fdirx_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifySkillReleased.m_fDirX)
}

// optional float m_fDirY = 7;
bool CGSNotifySkillReleased::has_m_fdiry() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CGSNotifySkillReleased::set_has_m_fdiry() {
  _has_bits_[0] |= 0x00000040u;
}
void CGSNotifySkillReleased::clear_has_m_fdiry() {
  _has_bits_[0] &= ~0x00000040u;
}
void CGSNotifySkillReleased::clear_m_fdiry() {
  m_fdiry_ = 0;
  clear_has_m_fdiry();
}
 float CGSNotifySkillReleased::m_fdiry() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifySkillReleased.m_fDirY)
  return m_fdiry_;
}
 void CGSNotifySkillReleased::set_m_fdiry(float value) {
  set_has_m_fdiry();
  m_fdiry_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifySkillReleased.m_fDirY)
}

// optional float m_fDirZ = 8;
bool CGSNotifySkillReleased::has_m_fdirz() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CGSNotifySkillReleased::set_has_m_fdirz() {
  _has_bits_[0] |= 0x00000080u;
}
void CGSNotifySkillReleased::clear_has_m_fdirz() {
  _has_bits_[0] &= ~0x00000080u;
}
void CGSNotifySkillReleased::clear_m_fdirz() {
  m_fdirz_ = 0;
  clear_has_m_fdirz();
}
 float CGSNotifySkillReleased::m_fdirz() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifySkillReleased.m_fDirZ)
  return m_fdirz_;
}
 void CGSNotifySkillReleased::set_m_fdirz(float value) {
  set_has_m_fdirz();
  m_fdirz_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifySkillReleased.m_fDirZ)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCReportOBjectAppear::kMUn32ObjIDFieldNumber;
const int CGCReportOBjectAppear::kMUn32TempIDFieldNumber;
const int CGCReportOBjectAppear::kMFPosXFieldNumber;
const int CGCReportOBjectAppear::kMFPosYFieldNumber;
const int CGCReportOBjectAppear::kMFPosZFieldNumber;
const int CGCReportOBjectAppear::kMFDirXFieldNumber;
const int CGCReportOBjectAppear::kMFDirYFieldNumber;
const int CGCReportOBjectAppear::kMFDirZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCReportOBjectAppear::CGCReportOBjectAppear()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGCReportOBjectAppear)
}

void CGCReportOBjectAppear::InitAsDefaultInstance() {
}

CGCReportOBjectAppear::CGCReportOBjectAppear(const CGCReportOBjectAppear& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGCReportOBjectAppear)
}

void CGCReportOBjectAppear::SharedCtor() {
  _cached_size_ = 0;
  m_un32objid_ = 0u;
  m_un32tempid_ = 0u;
  m_fposx_ = 0;
  m_fposy_ = 0;
  m_fposz_ = 0;
  m_fdirx_ = 0;
  m_fdiry_ = 0;
  m_fdirz_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCReportOBjectAppear::~CGCReportOBjectAppear() {
  // @@protoc_insertion_point(destructor:NetPackage.CGCReportOBjectAppear)
  SharedDtor();
}

void CGCReportOBjectAppear::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGCReportOBjectAppear::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCReportOBjectAppear::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCReportOBjectAppear_descriptor_;
}

const CGCReportOBjectAppear& CGCReportOBjectAppear::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGCReportOBjectAppear* CGCReportOBjectAppear::default_instance_ = NULL;

CGCReportOBjectAppear* CGCReportOBjectAppear::New(::google::protobuf::Arena* arena) const {
  CGCReportOBjectAppear* n = new CGCReportOBjectAppear;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCReportOBjectAppear::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CGCReportOBjectAppear*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(m_un32objid_, m_fdirz_);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCReportOBjectAppear::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGCReportOBjectAppear)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 m_un32ObjID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32objid_)));
          set_has_m_un32objid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_m_un32TempID;
        break;
      }

      // optional uint32 m_un32TempID = 2;
      case 2: {
        if (tag == 16) {
         parse_m_un32TempID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32tempid_)));
          set_has_m_un32tempid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_m_fPosX;
        break;
      }

      // optional float m_fPosX = 3;
      case 3: {
        if (tag == 29) {
         parse_m_fPosX:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fposx_)));
          set_has_m_fposx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_m_fPosY;
        break;
      }

      // optional float m_fPosY = 4;
      case 4: {
        if (tag == 37) {
         parse_m_fPosY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fposy_)));
          set_has_m_fposy();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_m_fPosZ;
        break;
      }

      // optional float m_fPosZ = 5;
      case 5: {
        if (tag == 45) {
         parse_m_fPosZ:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fposz_)));
          set_has_m_fposz();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_m_fDirX;
        break;
      }

      // optional float m_fDirX = 6;
      case 6: {
        if (tag == 53) {
         parse_m_fDirX:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fdirx_)));
          set_has_m_fdirx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(61)) goto parse_m_fDirY;
        break;
      }

      // optional float m_fDirY = 7;
      case 7: {
        if (tag == 61) {
         parse_m_fDirY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fdiry_)));
          set_has_m_fdiry();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(69)) goto parse_m_fDirZ;
        break;
      }

      // optional float m_fDirZ = 8;
      case 8: {
        if (tag == 69) {
         parse_m_fDirZ:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fdirz_)));
          set_has_m_fdirz();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGCReportOBjectAppear)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGCReportOBjectAppear)
  return false;
#undef DO_
}

void CGCReportOBjectAppear::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGCReportOBjectAppear)
  // optional uint32 m_un32ObjID = 1;
  if (has_m_un32objid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->m_un32objid(), output);
  }

  // optional uint32 m_un32TempID = 2;
  if (has_m_un32tempid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->m_un32tempid(), output);
  }

  // optional float m_fPosX = 3;
  if (has_m_fposx()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->m_fposx(), output);
  }

  // optional float m_fPosY = 4;
  if (has_m_fposy()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->m_fposy(), output);
  }

  // optional float m_fPosZ = 5;
  if (has_m_fposz()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->m_fposz(), output);
  }

  // optional float m_fDirX = 6;
  if (has_m_fdirx()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->m_fdirx(), output);
  }

  // optional float m_fDirY = 7;
  if (has_m_fdiry()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->m_fdiry(), output);
  }

  // optional float m_fDirZ = 8;
  if (has_m_fdirz()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->m_fdirz(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGCReportOBjectAppear)
}

::google::protobuf::uint8* CGCReportOBjectAppear::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGCReportOBjectAppear)
  // optional uint32 m_un32ObjID = 1;
  if (has_m_un32objid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->m_un32objid(), target);
  }

  // optional uint32 m_un32TempID = 2;
  if (has_m_un32tempid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->m_un32tempid(), target);
  }

  // optional float m_fPosX = 3;
  if (has_m_fposx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->m_fposx(), target);
  }

  // optional float m_fPosY = 4;
  if (has_m_fposy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->m_fposy(), target);
  }

  // optional float m_fPosZ = 5;
  if (has_m_fposz()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->m_fposz(), target);
  }

  // optional float m_fDirX = 6;
  if (has_m_fdirx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->m_fdirx(), target);
  }

  // optional float m_fDirY = 7;
  if (has_m_fdiry()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->m_fdiry(), target);
  }

  // optional float m_fDirZ = 8;
  if (has_m_fdirz()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->m_fdirz(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGCReportOBjectAppear)
  return target;
}

int CGCReportOBjectAppear::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional uint32 m_un32ObjID = 1;
    if (has_m_un32objid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32objid());
    }

    // optional uint32 m_un32TempID = 2;
    if (has_m_un32tempid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32tempid());
    }

    // optional float m_fPosX = 3;
    if (has_m_fposx()) {
      total_size += 1 + 4;
    }

    // optional float m_fPosY = 4;
    if (has_m_fposy()) {
      total_size += 1 + 4;
    }

    // optional float m_fPosZ = 5;
    if (has_m_fposz()) {
      total_size += 1 + 4;
    }

    // optional float m_fDirX = 6;
    if (has_m_fdirx()) {
      total_size += 1 + 4;
    }

    // optional float m_fDirY = 7;
    if (has_m_fdiry()) {
      total_size += 1 + 4;
    }

    // optional float m_fDirZ = 8;
    if (has_m_fdirz()) {
      total_size += 1 + 4;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCReportOBjectAppear::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCReportOBjectAppear* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCReportOBjectAppear>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCReportOBjectAppear::MergeFrom(const CGCReportOBjectAppear& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_un32objid()) {
      set_m_un32objid(from.m_un32objid());
    }
    if (from.has_m_un32tempid()) {
      set_m_un32tempid(from.m_un32tempid());
    }
    if (from.has_m_fposx()) {
      set_m_fposx(from.m_fposx());
    }
    if (from.has_m_fposy()) {
      set_m_fposy(from.m_fposy());
    }
    if (from.has_m_fposz()) {
      set_m_fposz(from.m_fposz());
    }
    if (from.has_m_fdirx()) {
      set_m_fdirx(from.m_fdirx());
    }
    if (from.has_m_fdiry()) {
      set_m_fdiry(from.m_fdiry());
    }
    if (from.has_m_fdirz()) {
      set_m_fdirz(from.m_fdirz());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCReportOBjectAppear::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCReportOBjectAppear::CopyFrom(const CGCReportOBjectAppear& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCReportOBjectAppear::IsInitialized() const {

  return true;
}

void CGCReportOBjectAppear::Swap(CGCReportOBjectAppear* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCReportOBjectAppear::InternalSwap(CGCReportOBjectAppear* other) {
  std::swap(m_un32objid_, other->m_un32objid_);
  std::swap(m_un32tempid_, other->m_un32tempid_);
  std::swap(m_fposx_, other->m_fposx_);
  std::swap(m_fposy_, other->m_fposy_);
  std::swap(m_fposz_, other->m_fposz_);
  std::swap(m_fdirx_, other->m_fdirx_);
  std::swap(m_fdiry_, other->m_fdiry_);
  std::swap(m_fdirz_, other->m_fdirz_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCReportOBjectAppear::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCReportOBjectAppear_descriptor_;
  metadata.reflection = CGCReportOBjectAppear_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCReportOBjectAppear

// optional uint32 m_un32ObjID = 1;
bool CGCReportOBjectAppear::has_m_un32objid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGCReportOBjectAppear::set_has_m_un32objid() {
  _has_bits_[0] |= 0x00000001u;
}
void CGCReportOBjectAppear::clear_has_m_un32objid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGCReportOBjectAppear::clear_m_un32objid() {
  m_un32objid_ = 0u;
  clear_has_m_un32objid();
}
 ::google::protobuf::uint32 CGCReportOBjectAppear::m_un32objid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCReportOBjectAppear.m_un32ObjID)
  return m_un32objid_;
}
 void CGCReportOBjectAppear::set_m_un32objid(::google::protobuf::uint32 value) {
  set_has_m_un32objid();
  m_un32objid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCReportOBjectAppear.m_un32ObjID)
}

// optional uint32 m_un32TempID = 2;
bool CGCReportOBjectAppear::has_m_un32tempid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CGCReportOBjectAppear::set_has_m_un32tempid() {
  _has_bits_[0] |= 0x00000002u;
}
void CGCReportOBjectAppear::clear_has_m_un32tempid() {
  _has_bits_[0] &= ~0x00000002u;
}
void CGCReportOBjectAppear::clear_m_un32tempid() {
  m_un32tempid_ = 0u;
  clear_has_m_un32tempid();
}
 ::google::protobuf::uint32 CGCReportOBjectAppear::m_un32tempid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCReportOBjectAppear.m_un32TempID)
  return m_un32tempid_;
}
 void CGCReportOBjectAppear::set_m_un32tempid(::google::protobuf::uint32 value) {
  set_has_m_un32tempid();
  m_un32tempid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCReportOBjectAppear.m_un32TempID)
}

// optional float m_fPosX = 3;
bool CGCReportOBjectAppear::has_m_fposx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CGCReportOBjectAppear::set_has_m_fposx() {
  _has_bits_[0] |= 0x00000004u;
}
void CGCReportOBjectAppear::clear_has_m_fposx() {
  _has_bits_[0] &= ~0x00000004u;
}
void CGCReportOBjectAppear::clear_m_fposx() {
  m_fposx_ = 0;
  clear_has_m_fposx();
}
 float CGCReportOBjectAppear::m_fposx() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCReportOBjectAppear.m_fPosX)
  return m_fposx_;
}
 void CGCReportOBjectAppear::set_m_fposx(float value) {
  set_has_m_fposx();
  m_fposx_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCReportOBjectAppear.m_fPosX)
}

// optional float m_fPosY = 4;
bool CGCReportOBjectAppear::has_m_fposy() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CGCReportOBjectAppear::set_has_m_fposy() {
  _has_bits_[0] |= 0x00000008u;
}
void CGCReportOBjectAppear::clear_has_m_fposy() {
  _has_bits_[0] &= ~0x00000008u;
}
void CGCReportOBjectAppear::clear_m_fposy() {
  m_fposy_ = 0;
  clear_has_m_fposy();
}
 float CGCReportOBjectAppear::m_fposy() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCReportOBjectAppear.m_fPosY)
  return m_fposy_;
}
 void CGCReportOBjectAppear::set_m_fposy(float value) {
  set_has_m_fposy();
  m_fposy_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCReportOBjectAppear.m_fPosY)
}

// optional float m_fPosZ = 5;
bool CGCReportOBjectAppear::has_m_fposz() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CGCReportOBjectAppear::set_has_m_fposz() {
  _has_bits_[0] |= 0x00000010u;
}
void CGCReportOBjectAppear::clear_has_m_fposz() {
  _has_bits_[0] &= ~0x00000010u;
}
void CGCReportOBjectAppear::clear_m_fposz() {
  m_fposz_ = 0;
  clear_has_m_fposz();
}
 float CGCReportOBjectAppear::m_fposz() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCReportOBjectAppear.m_fPosZ)
  return m_fposz_;
}
 void CGCReportOBjectAppear::set_m_fposz(float value) {
  set_has_m_fposz();
  m_fposz_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCReportOBjectAppear.m_fPosZ)
}

// optional float m_fDirX = 6;
bool CGCReportOBjectAppear::has_m_fdirx() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CGCReportOBjectAppear::set_has_m_fdirx() {
  _has_bits_[0] |= 0x00000020u;
}
void CGCReportOBjectAppear::clear_has_m_fdirx() {
  _has_bits_[0] &= ~0x00000020u;
}
void CGCReportOBjectAppear::clear_m_fdirx() {
  m_fdirx_ = 0;
  clear_has_m_fdirx();
}
 float CGCReportOBjectAppear::m_fdirx() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCReportOBjectAppear.m_fDirX)
  return m_fdirx_;
}
 void CGCReportOBjectAppear::set_m_fdirx(float value) {
  set_has_m_fdirx();
  m_fdirx_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCReportOBjectAppear.m_fDirX)
}

// optional float m_fDirY = 7;
bool CGCReportOBjectAppear::has_m_fdiry() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CGCReportOBjectAppear::set_has_m_fdiry() {
  _has_bits_[0] |= 0x00000040u;
}
void CGCReportOBjectAppear::clear_has_m_fdiry() {
  _has_bits_[0] &= ~0x00000040u;
}
void CGCReportOBjectAppear::clear_m_fdiry() {
  m_fdiry_ = 0;
  clear_has_m_fdiry();
}
 float CGCReportOBjectAppear::m_fdiry() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCReportOBjectAppear.m_fDirY)
  return m_fdiry_;
}
 void CGCReportOBjectAppear::set_m_fdiry(float value) {
  set_has_m_fdiry();
  m_fdiry_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCReportOBjectAppear.m_fDirY)
}

// optional float m_fDirZ = 8;
bool CGCReportOBjectAppear::has_m_fdirz() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CGCReportOBjectAppear::set_has_m_fdirz() {
  _has_bits_[0] |= 0x00000080u;
}
void CGCReportOBjectAppear::clear_has_m_fdirz() {
  _has_bits_[0] &= ~0x00000080u;
}
void CGCReportOBjectAppear::clear_m_fdirz() {
  m_fdirz_ = 0;
  clear_has_m_fdirz();
}
 float CGCReportOBjectAppear::m_fdirz() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCReportOBjectAppear.m_fDirZ)
  return m_fdirz_;
}
 void CGCReportOBjectAppear::set_m_fdirz(float value) {
  set_has_m_fdirz();
  m_fdirz_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCReportOBjectAppear.m_fDirZ)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGSNotifyObjectAppear::kMUn32ObjIDFieldNumber;
const int CGSNotifyObjectAppear::kMUn32TempIDFieldNumber;
const int CGSNotifyObjectAppear::kMFPosXFieldNumber;
const int CGSNotifyObjectAppear::kMFPosYFieldNumber;
const int CGSNotifyObjectAppear::kMFPosZFieldNumber;
const int CGSNotifyObjectAppear::kMFDirXFieldNumber;
const int CGSNotifyObjectAppear::kMFDirYFieldNumber;
const int CGSNotifyObjectAppear::kMFDirZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGSNotifyObjectAppear::CGSNotifyObjectAppear()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGSNotifyObjectAppear)
}

void CGSNotifyObjectAppear::InitAsDefaultInstance() {
}

CGSNotifyObjectAppear::CGSNotifyObjectAppear(const CGSNotifyObjectAppear& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGSNotifyObjectAppear)
}

void CGSNotifyObjectAppear::SharedCtor() {
  _cached_size_ = 0;
  m_un32objid_ = 0u;
  m_un32tempid_ = 0u;
  m_fposx_ = 0;
  m_fposy_ = 0;
  m_fposz_ = 0;
  m_fdirx_ = 0;
  m_fdiry_ = 0;
  m_fdirz_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGSNotifyObjectAppear::~CGSNotifyObjectAppear() {
  // @@protoc_insertion_point(destructor:NetPackage.CGSNotifyObjectAppear)
  SharedDtor();
}

void CGSNotifyObjectAppear::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGSNotifyObjectAppear::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGSNotifyObjectAppear::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGSNotifyObjectAppear_descriptor_;
}

const CGSNotifyObjectAppear& CGSNotifyObjectAppear::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGSNotifyObjectAppear* CGSNotifyObjectAppear::default_instance_ = NULL;

CGSNotifyObjectAppear* CGSNotifyObjectAppear::New(::google::protobuf::Arena* arena) const {
  CGSNotifyObjectAppear* n = new CGSNotifyObjectAppear;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGSNotifyObjectAppear::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CGSNotifyObjectAppear*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(m_un32objid_, m_fdirz_);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGSNotifyObjectAppear::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGSNotifyObjectAppear)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 m_un32ObjID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32objid_)));
          set_has_m_un32objid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_m_un32TempID;
        break;
      }

      // optional uint32 m_un32TempID = 2;
      case 2: {
        if (tag == 16) {
         parse_m_un32TempID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32tempid_)));
          set_has_m_un32tempid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_m_fPosX;
        break;
      }

      // optional float m_fPosX = 3;
      case 3: {
        if (tag == 29) {
         parse_m_fPosX:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fposx_)));
          set_has_m_fposx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_m_fPosY;
        break;
      }

      // optional float m_fPosY = 4;
      case 4: {
        if (tag == 37) {
         parse_m_fPosY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fposy_)));
          set_has_m_fposy();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_m_fPosZ;
        break;
      }

      // optional float m_fPosZ = 5;
      case 5: {
        if (tag == 45) {
         parse_m_fPosZ:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fposz_)));
          set_has_m_fposz();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_m_fDirX;
        break;
      }

      // optional float m_fDirX = 6;
      case 6: {
        if (tag == 53) {
         parse_m_fDirX:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fdirx_)));
          set_has_m_fdirx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(61)) goto parse_m_fDirY;
        break;
      }

      // optional float m_fDirY = 7;
      case 7: {
        if (tag == 61) {
         parse_m_fDirY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fdiry_)));
          set_has_m_fdiry();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(69)) goto parse_m_fDirZ;
        break;
      }

      // optional float m_fDirZ = 8;
      case 8: {
        if (tag == 69) {
         parse_m_fDirZ:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fdirz_)));
          set_has_m_fdirz();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGSNotifyObjectAppear)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGSNotifyObjectAppear)
  return false;
#undef DO_
}

void CGSNotifyObjectAppear::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGSNotifyObjectAppear)
  // optional uint32 m_un32ObjID = 1;
  if (has_m_un32objid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->m_un32objid(), output);
  }

  // optional uint32 m_un32TempID = 2;
  if (has_m_un32tempid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->m_un32tempid(), output);
  }

  // optional float m_fPosX = 3;
  if (has_m_fposx()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->m_fposx(), output);
  }

  // optional float m_fPosY = 4;
  if (has_m_fposy()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->m_fposy(), output);
  }

  // optional float m_fPosZ = 5;
  if (has_m_fposz()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->m_fposz(), output);
  }

  // optional float m_fDirX = 6;
  if (has_m_fdirx()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->m_fdirx(), output);
  }

  // optional float m_fDirY = 7;
  if (has_m_fdiry()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->m_fdiry(), output);
  }

  // optional float m_fDirZ = 8;
  if (has_m_fdirz()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->m_fdirz(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGSNotifyObjectAppear)
}

::google::protobuf::uint8* CGSNotifyObjectAppear::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGSNotifyObjectAppear)
  // optional uint32 m_un32ObjID = 1;
  if (has_m_un32objid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->m_un32objid(), target);
  }

  // optional uint32 m_un32TempID = 2;
  if (has_m_un32tempid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->m_un32tempid(), target);
  }

  // optional float m_fPosX = 3;
  if (has_m_fposx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->m_fposx(), target);
  }

  // optional float m_fPosY = 4;
  if (has_m_fposy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->m_fposy(), target);
  }

  // optional float m_fPosZ = 5;
  if (has_m_fposz()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->m_fposz(), target);
  }

  // optional float m_fDirX = 6;
  if (has_m_fdirx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->m_fdirx(), target);
  }

  // optional float m_fDirY = 7;
  if (has_m_fdiry()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->m_fdiry(), target);
  }

  // optional float m_fDirZ = 8;
  if (has_m_fdirz()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->m_fdirz(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGSNotifyObjectAppear)
  return target;
}

int CGSNotifyObjectAppear::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional uint32 m_un32ObjID = 1;
    if (has_m_un32objid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32objid());
    }

    // optional uint32 m_un32TempID = 2;
    if (has_m_un32tempid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32tempid());
    }

    // optional float m_fPosX = 3;
    if (has_m_fposx()) {
      total_size += 1 + 4;
    }

    // optional float m_fPosY = 4;
    if (has_m_fposy()) {
      total_size += 1 + 4;
    }

    // optional float m_fPosZ = 5;
    if (has_m_fposz()) {
      total_size += 1 + 4;
    }

    // optional float m_fDirX = 6;
    if (has_m_fdirx()) {
      total_size += 1 + 4;
    }

    // optional float m_fDirY = 7;
    if (has_m_fdiry()) {
      total_size += 1 + 4;
    }

    // optional float m_fDirZ = 8;
    if (has_m_fdirz()) {
      total_size += 1 + 4;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGSNotifyObjectAppear::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGSNotifyObjectAppear* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGSNotifyObjectAppear>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGSNotifyObjectAppear::MergeFrom(const CGSNotifyObjectAppear& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_un32objid()) {
      set_m_un32objid(from.m_un32objid());
    }
    if (from.has_m_un32tempid()) {
      set_m_un32tempid(from.m_un32tempid());
    }
    if (from.has_m_fposx()) {
      set_m_fposx(from.m_fposx());
    }
    if (from.has_m_fposy()) {
      set_m_fposy(from.m_fposy());
    }
    if (from.has_m_fposz()) {
      set_m_fposz(from.m_fposz());
    }
    if (from.has_m_fdirx()) {
      set_m_fdirx(from.m_fdirx());
    }
    if (from.has_m_fdiry()) {
      set_m_fdiry(from.m_fdiry());
    }
    if (from.has_m_fdirz()) {
      set_m_fdirz(from.m_fdirz());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGSNotifyObjectAppear::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGSNotifyObjectAppear::CopyFrom(const CGSNotifyObjectAppear& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGSNotifyObjectAppear::IsInitialized() const {

  return true;
}

void CGSNotifyObjectAppear::Swap(CGSNotifyObjectAppear* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGSNotifyObjectAppear::InternalSwap(CGSNotifyObjectAppear* other) {
  std::swap(m_un32objid_, other->m_un32objid_);
  std::swap(m_un32tempid_, other->m_un32tempid_);
  std::swap(m_fposx_, other->m_fposx_);
  std::swap(m_fposy_, other->m_fposy_);
  std::swap(m_fposz_, other->m_fposz_);
  std::swap(m_fdirx_, other->m_fdirx_);
  std::swap(m_fdiry_, other->m_fdiry_);
  std::swap(m_fdirz_, other->m_fdirz_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGSNotifyObjectAppear::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGSNotifyObjectAppear_descriptor_;
  metadata.reflection = CGSNotifyObjectAppear_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGSNotifyObjectAppear

// optional uint32 m_un32ObjID = 1;
bool CGSNotifyObjectAppear::has_m_un32objid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGSNotifyObjectAppear::set_has_m_un32objid() {
  _has_bits_[0] |= 0x00000001u;
}
void CGSNotifyObjectAppear::clear_has_m_un32objid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGSNotifyObjectAppear::clear_m_un32objid() {
  m_un32objid_ = 0u;
  clear_has_m_un32objid();
}
 ::google::protobuf::uint32 CGSNotifyObjectAppear::m_un32objid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyObjectAppear.m_un32ObjID)
  return m_un32objid_;
}
 void CGSNotifyObjectAppear::set_m_un32objid(::google::protobuf::uint32 value) {
  set_has_m_un32objid();
  m_un32objid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyObjectAppear.m_un32ObjID)
}

// optional uint32 m_un32TempID = 2;
bool CGSNotifyObjectAppear::has_m_un32tempid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CGSNotifyObjectAppear::set_has_m_un32tempid() {
  _has_bits_[0] |= 0x00000002u;
}
void CGSNotifyObjectAppear::clear_has_m_un32tempid() {
  _has_bits_[0] &= ~0x00000002u;
}
void CGSNotifyObjectAppear::clear_m_un32tempid() {
  m_un32tempid_ = 0u;
  clear_has_m_un32tempid();
}
 ::google::protobuf::uint32 CGSNotifyObjectAppear::m_un32tempid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyObjectAppear.m_un32TempID)
  return m_un32tempid_;
}
 void CGSNotifyObjectAppear::set_m_un32tempid(::google::protobuf::uint32 value) {
  set_has_m_un32tempid();
  m_un32tempid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyObjectAppear.m_un32TempID)
}

// optional float m_fPosX = 3;
bool CGSNotifyObjectAppear::has_m_fposx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CGSNotifyObjectAppear::set_has_m_fposx() {
  _has_bits_[0] |= 0x00000004u;
}
void CGSNotifyObjectAppear::clear_has_m_fposx() {
  _has_bits_[0] &= ~0x00000004u;
}
void CGSNotifyObjectAppear::clear_m_fposx() {
  m_fposx_ = 0;
  clear_has_m_fposx();
}
 float CGSNotifyObjectAppear::m_fposx() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyObjectAppear.m_fPosX)
  return m_fposx_;
}
 void CGSNotifyObjectAppear::set_m_fposx(float value) {
  set_has_m_fposx();
  m_fposx_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyObjectAppear.m_fPosX)
}

// optional float m_fPosY = 4;
bool CGSNotifyObjectAppear::has_m_fposy() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CGSNotifyObjectAppear::set_has_m_fposy() {
  _has_bits_[0] |= 0x00000008u;
}
void CGSNotifyObjectAppear::clear_has_m_fposy() {
  _has_bits_[0] &= ~0x00000008u;
}
void CGSNotifyObjectAppear::clear_m_fposy() {
  m_fposy_ = 0;
  clear_has_m_fposy();
}
 float CGSNotifyObjectAppear::m_fposy() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyObjectAppear.m_fPosY)
  return m_fposy_;
}
 void CGSNotifyObjectAppear::set_m_fposy(float value) {
  set_has_m_fposy();
  m_fposy_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyObjectAppear.m_fPosY)
}

// optional float m_fPosZ = 5;
bool CGSNotifyObjectAppear::has_m_fposz() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CGSNotifyObjectAppear::set_has_m_fposz() {
  _has_bits_[0] |= 0x00000010u;
}
void CGSNotifyObjectAppear::clear_has_m_fposz() {
  _has_bits_[0] &= ~0x00000010u;
}
void CGSNotifyObjectAppear::clear_m_fposz() {
  m_fposz_ = 0;
  clear_has_m_fposz();
}
 float CGSNotifyObjectAppear::m_fposz() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyObjectAppear.m_fPosZ)
  return m_fposz_;
}
 void CGSNotifyObjectAppear::set_m_fposz(float value) {
  set_has_m_fposz();
  m_fposz_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyObjectAppear.m_fPosZ)
}

// optional float m_fDirX = 6;
bool CGSNotifyObjectAppear::has_m_fdirx() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CGSNotifyObjectAppear::set_has_m_fdirx() {
  _has_bits_[0] |= 0x00000020u;
}
void CGSNotifyObjectAppear::clear_has_m_fdirx() {
  _has_bits_[0] &= ~0x00000020u;
}
void CGSNotifyObjectAppear::clear_m_fdirx() {
  m_fdirx_ = 0;
  clear_has_m_fdirx();
}
 float CGSNotifyObjectAppear::m_fdirx() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyObjectAppear.m_fDirX)
  return m_fdirx_;
}
 void CGSNotifyObjectAppear::set_m_fdirx(float value) {
  set_has_m_fdirx();
  m_fdirx_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyObjectAppear.m_fDirX)
}

// optional float m_fDirY = 7;
bool CGSNotifyObjectAppear::has_m_fdiry() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CGSNotifyObjectAppear::set_has_m_fdiry() {
  _has_bits_[0] |= 0x00000040u;
}
void CGSNotifyObjectAppear::clear_has_m_fdiry() {
  _has_bits_[0] &= ~0x00000040u;
}
void CGSNotifyObjectAppear::clear_m_fdiry() {
  m_fdiry_ = 0;
  clear_has_m_fdiry();
}
 float CGSNotifyObjectAppear::m_fdiry() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyObjectAppear.m_fDirY)
  return m_fdiry_;
}
 void CGSNotifyObjectAppear::set_m_fdiry(float value) {
  set_has_m_fdiry();
  m_fdiry_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyObjectAppear.m_fDirY)
}

// optional float m_fDirZ = 8;
bool CGSNotifyObjectAppear::has_m_fdirz() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CGSNotifyObjectAppear::set_has_m_fdirz() {
  _has_bits_[0] |= 0x00000080u;
}
void CGSNotifyObjectAppear::clear_has_m_fdirz() {
  _has_bits_[0] &= ~0x00000080u;
}
void CGSNotifyObjectAppear::clear_m_fdirz() {
  m_fdirz_ = 0;
  clear_has_m_fdirz();
}
 float CGSNotifyObjectAppear::m_fdirz() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyObjectAppear.m_fDirZ)
  return m_fdirz_;
}
 void CGSNotifyObjectAppear::set_m_fdirz(float value) {
  set_has_m_fdirz();
  m_fdirz_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyObjectAppear.m_fDirZ)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCReportOBjectDisappear::kMUn32ObjIDFieldNumber;
const int CGCReportOBjectDisappear::kMN32ReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCReportOBjectDisappear::CGCReportOBjectDisappear()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGCReportOBjectDisappear)
}

void CGCReportOBjectDisappear::InitAsDefaultInstance() {
}

CGCReportOBjectDisappear::CGCReportOBjectDisappear(const CGCReportOBjectDisappear& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGCReportOBjectDisappear)
}

void CGCReportOBjectDisappear::SharedCtor() {
  _cached_size_ = 0;
  m_un32objid_ = 0u;
  m_n32reason_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCReportOBjectDisappear::~CGCReportOBjectDisappear() {
  // @@protoc_insertion_point(destructor:NetPackage.CGCReportOBjectDisappear)
  SharedDtor();
}

void CGCReportOBjectDisappear::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGCReportOBjectDisappear::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCReportOBjectDisappear::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCReportOBjectDisappear_descriptor_;
}

const CGCReportOBjectDisappear& CGCReportOBjectDisappear::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGCReportOBjectDisappear* CGCReportOBjectDisappear::default_instance_ = NULL;

CGCReportOBjectDisappear* CGCReportOBjectDisappear::New(::google::protobuf::Arena* arena) const {
  CGCReportOBjectDisappear* n = new CGCReportOBjectDisappear;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCReportOBjectDisappear::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CGCReportOBjectDisappear*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(m_un32objid_, m_n32reason_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCReportOBjectDisappear::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGCReportOBjectDisappear)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 m_un32ObjID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32objid_)));
          set_has_m_un32objid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_m_n32Reason;
        break;
      }

      // optional int32 m_n32Reason = 2;
      case 2: {
        if (tag == 16) {
         parse_m_n32Reason:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_n32reason_)));
          set_has_m_n32reason();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGCReportOBjectDisappear)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGCReportOBjectDisappear)
  return false;
#undef DO_
}

void CGCReportOBjectDisappear::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGCReportOBjectDisappear)
  // optional uint32 m_un32ObjID = 1;
  if (has_m_un32objid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->m_un32objid(), output);
  }

  // optional int32 m_n32Reason = 2;
  if (has_m_n32reason()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_n32reason(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGCReportOBjectDisappear)
}

::google::protobuf::uint8* CGCReportOBjectDisappear::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGCReportOBjectDisappear)
  // optional uint32 m_un32ObjID = 1;
  if (has_m_un32objid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->m_un32objid(), target);
  }

  // optional int32 m_n32Reason = 2;
  if (has_m_n32reason()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_n32reason(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGCReportOBjectDisappear)
  return target;
}

int CGCReportOBjectDisappear::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 m_un32ObjID = 1;
    if (has_m_un32objid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32objid());
    }

    // optional int32 m_n32Reason = 2;
    if (has_m_n32reason()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_n32reason());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCReportOBjectDisappear::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCReportOBjectDisappear* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCReportOBjectDisappear>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCReportOBjectDisappear::MergeFrom(const CGCReportOBjectDisappear& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_un32objid()) {
      set_m_un32objid(from.m_un32objid());
    }
    if (from.has_m_n32reason()) {
      set_m_n32reason(from.m_n32reason());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCReportOBjectDisappear::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCReportOBjectDisappear::CopyFrom(const CGCReportOBjectDisappear& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCReportOBjectDisappear::IsInitialized() const {

  return true;
}

void CGCReportOBjectDisappear::Swap(CGCReportOBjectDisappear* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCReportOBjectDisappear::InternalSwap(CGCReportOBjectDisappear* other) {
  std::swap(m_un32objid_, other->m_un32objid_);
  std::swap(m_n32reason_, other->m_n32reason_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCReportOBjectDisappear::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCReportOBjectDisappear_descriptor_;
  metadata.reflection = CGCReportOBjectDisappear_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCReportOBjectDisappear

// optional uint32 m_un32ObjID = 1;
bool CGCReportOBjectDisappear::has_m_un32objid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGCReportOBjectDisappear::set_has_m_un32objid() {
  _has_bits_[0] |= 0x00000001u;
}
void CGCReportOBjectDisappear::clear_has_m_un32objid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGCReportOBjectDisappear::clear_m_un32objid() {
  m_un32objid_ = 0u;
  clear_has_m_un32objid();
}
 ::google::protobuf::uint32 CGCReportOBjectDisappear::m_un32objid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCReportOBjectDisappear.m_un32ObjID)
  return m_un32objid_;
}
 void CGCReportOBjectDisappear::set_m_un32objid(::google::protobuf::uint32 value) {
  set_has_m_un32objid();
  m_un32objid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCReportOBjectDisappear.m_un32ObjID)
}

// optional int32 m_n32Reason = 2;
bool CGCReportOBjectDisappear::has_m_n32reason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CGCReportOBjectDisappear::set_has_m_n32reason() {
  _has_bits_[0] |= 0x00000002u;
}
void CGCReportOBjectDisappear::clear_has_m_n32reason() {
  _has_bits_[0] &= ~0x00000002u;
}
void CGCReportOBjectDisappear::clear_m_n32reason() {
  m_n32reason_ = 0;
  clear_has_m_n32reason();
}
 ::google::protobuf::int32 CGCReportOBjectDisappear::m_n32reason() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCReportOBjectDisappear.m_n32Reason)
  return m_n32reason_;
}
 void CGCReportOBjectDisappear::set_m_n32reason(::google::protobuf::int32 value) {
  set_has_m_n32reason();
  m_n32reason_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCReportOBjectDisappear.m_n32Reason)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGSNotifyObjectDisappear::kMUn32ObjIDFieldNumber;
const int CGSNotifyObjectDisappear::kMN32ReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGSNotifyObjectDisappear::CGSNotifyObjectDisappear()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGSNotifyObjectDisappear)
}

void CGSNotifyObjectDisappear::InitAsDefaultInstance() {
}

CGSNotifyObjectDisappear::CGSNotifyObjectDisappear(const CGSNotifyObjectDisappear& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGSNotifyObjectDisappear)
}

void CGSNotifyObjectDisappear::SharedCtor() {
  _cached_size_ = 0;
  m_un32objid_ = 0u;
  m_n32reason_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGSNotifyObjectDisappear::~CGSNotifyObjectDisappear() {
  // @@protoc_insertion_point(destructor:NetPackage.CGSNotifyObjectDisappear)
  SharedDtor();
}

void CGSNotifyObjectDisappear::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGSNotifyObjectDisappear::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGSNotifyObjectDisappear::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGSNotifyObjectDisappear_descriptor_;
}

const CGSNotifyObjectDisappear& CGSNotifyObjectDisappear::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGSNotifyObjectDisappear* CGSNotifyObjectDisappear::default_instance_ = NULL;

CGSNotifyObjectDisappear* CGSNotifyObjectDisappear::New(::google::protobuf::Arena* arena) const {
  CGSNotifyObjectDisappear* n = new CGSNotifyObjectDisappear;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGSNotifyObjectDisappear::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CGSNotifyObjectDisappear*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(m_un32objid_, m_n32reason_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGSNotifyObjectDisappear::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGSNotifyObjectDisappear)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 m_un32ObjID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32objid_)));
          set_has_m_un32objid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_m_n32Reason;
        break;
      }

      // optional int32 m_n32Reason = 2;
      case 2: {
        if (tag == 16) {
         parse_m_n32Reason:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_n32reason_)));
          set_has_m_n32reason();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGSNotifyObjectDisappear)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGSNotifyObjectDisappear)
  return false;
#undef DO_
}

void CGSNotifyObjectDisappear::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGSNotifyObjectDisappear)
  // optional uint32 m_un32ObjID = 1;
  if (has_m_un32objid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->m_un32objid(), output);
  }

  // optional int32 m_n32Reason = 2;
  if (has_m_n32reason()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_n32reason(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGSNotifyObjectDisappear)
}

::google::protobuf::uint8* CGSNotifyObjectDisappear::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGSNotifyObjectDisappear)
  // optional uint32 m_un32ObjID = 1;
  if (has_m_un32objid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->m_un32objid(), target);
  }

  // optional int32 m_n32Reason = 2;
  if (has_m_n32reason()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_n32reason(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGSNotifyObjectDisappear)
  return target;
}

int CGSNotifyObjectDisappear::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 m_un32ObjID = 1;
    if (has_m_un32objid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32objid());
    }

    // optional int32 m_n32Reason = 2;
    if (has_m_n32reason()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_n32reason());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGSNotifyObjectDisappear::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGSNotifyObjectDisappear* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGSNotifyObjectDisappear>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGSNotifyObjectDisappear::MergeFrom(const CGSNotifyObjectDisappear& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_un32objid()) {
      set_m_un32objid(from.m_un32objid());
    }
    if (from.has_m_n32reason()) {
      set_m_n32reason(from.m_n32reason());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGSNotifyObjectDisappear::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGSNotifyObjectDisappear::CopyFrom(const CGSNotifyObjectDisappear& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGSNotifyObjectDisappear::IsInitialized() const {

  return true;
}

void CGSNotifyObjectDisappear::Swap(CGSNotifyObjectDisappear* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGSNotifyObjectDisappear::InternalSwap(CGSNotifyObjectDisappear* other) {
  std::swap(m_un32objid_, other->m_un32objid_);
  std::swap(m_n32reason_, other->m_n32reason_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGSNotifyObjectDisappear::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGSNotifyObjectDisappear_descriptor_;
  metadata.reflection = CGSNotifyObjectDisappear_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGSNotifyObjectDisappear

// optional uint32 m_un32ObjID = 1;
bool CGSNotifyObjectDisappear::has_m_un32objid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGSNotifyObjectDisappear::set_has_m_un32objid() {
  _has_bits_[0] |= 0x00000001u;
}
void CGSNotifyObjectDisappear::clear_has_m_un32objid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGSNotifyObjectDisappear::clear_m_un32objid() {
  m_un32objid_ = 0u;
  clear_has_m_un32objid();
}
 ::google::protobuf::uint32 CGSNotifyObjectDisappear::m_un32objid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyObjectDisappear.m_un32ObjID)
  return m_un32objid_;
}
 void CGSNotifyObjectDisappear::set_m_un32objid(::google::protobuf::uint32 value) {
  set_has_m_un32objid();
  m_un32objid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyObjectDisappear.m_un32ObjID)
}

// optional int32 m_n32Reason = 2;
bool CGSNotifyObjectDisappear::has_m_n32reason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CGSNotifyObjectDisappear::set_has_m_n32reason() {
  _has_bits_[0] |= 0x00000002u;
}
void CGSNotifyObjectDisappear::clear_has_m_n32reason() {
  _has_bits_[0] &= ~0x00000002u;
}
void CGSNotifyObjectDisappear::clear_m_n32reason() {
  m_n32reason_ = 0;
  clear_has_m_n32reason();
}
 ::google::protobuf::int32 CGSNotifyObjectDisappear::m_n32reason() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyObjectDisappear.m_n32Reason)
  return m_n32reason_;
}
 void CGSNotifyObjectDisappear::set_m_n32reason(::google::protobuf::int32 value) {
  set_has_m_n32reason();
  m_n32reason_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyObjectDisappear.m_n32Reason)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCReportObjectAction::kMUn32ObjIDFieldNumber;
const int CGCReportObjectAction::kMN32ActionCateFieldNumber;
const int CGCReportObjectAction::kMFDirXFieldNumber;
const int CGCReportObjectAction::kMFDirYFieldNumber;
const int CGCReportObjectAction::kMFDirZFieldNumber;
const int CGCReportObjectAction::kMFPosXFieldNumber;
const int CGCReportObjectAction::kMFPosYFieldNumber;
const int CGCReportObjectAction::kMFPosZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCReportObjectAction::CGCReportObjectAction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGCReportObjectAction)
}

void CGCReportObjectAction::InitAsDefaultInstance() {
}

CGCReportObjectAction::CGCReportObjectAction(const CGCReportObjectAction& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGCReportObjectAction)
}

void CGCReportObjectAction::SharedCtor() {
  _cached_size_ = 0;
  m_un32objid_ = 0u;
  m_n32actioncate_ = 0;
  m_fdirx_ = 0;
  m_fdiry_ = 0;
  m_fdirz_ = 0;
  m_fposx_ = 0;
  m_fposy_ = 0;
  m_fposz_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCReportObjectAction::~CGCReportObjectAction() {
  // @@protoc_insertion_point(destructor:NetPackage.CGCReportObjectAction)
  SharedDtor();
}

void CGCReportObjectAction::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGCReportObjectAction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCReportObjectAction::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCReportObjectAction_descriptor_;
}

const CGCReportObjectAction& CGCReportObjectAction::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGCReportObjectAction* CGCReportObjectAction::default_instance_ = NULL;

CGCReportObjectAction* CGCReportObjectAction::New(::google::protobuf::Arena* arena) const {
  CGCReportObjectAction* n = new CGCReportObjectAction;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCReportObjectAction::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CGCReportObjectAction*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(m_un32objid_, m_fposz_);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCReportObjectAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGCReportObjectAction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 m_un32ObjID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32objid_)));
          set_has_m_un32objid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_m_n32ActionCate;
        break;
      }

      // optional int32 m_n32ActionCate = 2;
      case 2: {
        if (tag == 16) {
         parse_m_n32ActionCate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_n32actioncate_)));
          set_has_m_n32actioncate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_m_fDirX;
        break;
      }

      // optional float m_fDirX = 3;
      case 3: {
        if (tag == 29) {
         parse_m_fDirX:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fdirx_)));
          set_has_m_fdirx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_m_fDirY;
        break;
      }

      // optional float m_fDirY = 4;
      case 4: {
        if (tag == 37) {
         parse_m_fDirY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fdiry_)));
          set_has_m_fdiry();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_m_fDirZ;
        break;
      }

      // optional float m_fDirZ = 5;
      case 5: {
        if (tag == 45) {
         parse_m_fDirZ:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fdirz_)));
          set_has_m_fdirz();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_m_fPosX;
        break;
      }

      // optional float m_fPosX = 6;
      case 6: {
        if (tag == 53) {
         parse_m_fPosX:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fposx_)));
          set_has_m_fposx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(61)) goto parse_m_fPosY;
        break;
      }

      // optional float m_fPosY = 7;
      case 7: {
        if (tag == 61) {
         parse_m_fPosY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fposy_)));
          set_has_m_fposy();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(69)) goto parse_m_fPosZ;
        break;
      }

      // optional float m_fPosZ = 8;
      case 8: {
        if (tag == 69) {
         parse_m_fPosZ:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fposz_)));
          set_has_m_fposz();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGCReportObjectAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGCReportObjectAction)
  return false;
#undef DO_
}

void CGCReportObjectAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGCReportObjectAction)
  // optional uint32 m_un32ObjID = 1;
  if (has_m_un32objid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->m_un32objid(), output);
  }

  // optional int32 m_n32ActionCate = 2;
  if (has_m_n32actioncate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_n32actioncate(), output);
  }

  // optional float m_fDirX = 3;
  if (has_m_fdirx()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->m_fdirx(), output);
  }

  // optional float m_fDirY = 4;
  if (has_m_fdiry()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->m_fdiry(), output);
  }

  // optional float m_fDirZ = 5;
  if (has_m_fdirz()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->m_fdirz(), output);
  }

  // optional float m_fPosX = 6;
  if (has_m_fposx()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->m_fposx(), output);
  }

  // optional float m_fPosY = 7;
  if (has_m_fposy()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->m_fposy(), output);
  }

  // optional float m_fPosZ = 8;
  if (has_m_fposz()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->m_fposz(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGCReportObjectAction)
}

::google::protobuf::uint8* CGCReportObjectAction::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGCReportObjectAction)
  // optional uint32 m_un32ObjID = 1;
  if (has_m_un32objid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->m_un32objid(), target);
  }

  // optional int32 m_n32ActionCate = 2;
  if (has_m_n32actioncate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_n32actioncate(), target);
  }

  // optional float m_fDirX = 3;
  if (has_m_fdirx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->m_fdirx(), target);
  }

  // optional float m_fDirY = 4;
  if (has_m_fdiry()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->m_fdiry(), target);
  }

  // optional float m_fDirZ = 5;
  if (has_m_fdirz()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->m_fdirz(), target);
  }

  // optional float m_fPosX = 6;
  if (has_m_fposx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->m_fposx(), target);
  }

  // optional float m_fPosY = 7;
  if (has_m_fposy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->m_fposy(), target);
  }

  // optional float m_fPosZ = 8;
  if (has_m_fposz()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->m_fposz(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGCReportObjectAction)
  return target;
}

int CGCReportObjectAction::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional uint32 m_un32ObjID = 1;
    if (has_m_un32objid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32objid());
    }

    // optional int32 m_n32ActionCate = 2;
    if (has_m_n32actioncate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_n32actioncate());
    }

    // optional float m_fDirX = 3;
    if (has_m_fdirx()) {
      total_size += 1 + 4;
    }

    // optional float m_fDirY = 4;
    if (has_m_fdiry()) {
      total_size += 1 + 4;
    }

    // optional float m_fDirZ = 5;
    if (has_m_fdirz()) {
      total_size += 1 + 4;
    }

    // optional float m_fPosX = 6;
    if (has_m_fposx()) {
      total_size += 1 + 4;
    }

    // optional float m_fPosY = 7;
    if (has_m_fposy()) {
      total_size += 1 + 4;
    }

    // optional float m_fPosZ = 8;
    if (has_m_fposz()) {
      total_size += 1 + 4;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCReportObjectAction::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCReportObjectAction* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCReportObjectAction>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCReportObjectAction::MergeFrom(const CGCReportObjectAction& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_un32objid()) {
      set_m_un32objid(from.m_un32objid());
    }
    if (from.has_m_n32actioncate()) {
      set_m_n32actioncate(from.m_n32actioncate());
    }
    if (from.has_m_fdirx()) {
      set_m_fdirx(from.m_fdirx());
    }
    if (from.has_m_fdiry()) {
      set_m_fdiry(from.m_fdiry());
    }
    if (from.has_m_fdirz()) {
      set_m_fdirz(from.m_fdirz());
    }
    if (from.has_m_fposx()) {
      set_m_fposx(from.m_fposx());
    }
    if (from.has_m_fposy()) {
      set_m_fposy(from.m_fposy());
    }
    if (from.has_m_fposz()) {
      set_m_fposz(from.m_fposz());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCReportObjectAction::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCReportObjectAction::CopyFrom(const CGCReportObjectAction& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCReportObjectAction::IsInitialized() const {

  return true;
}

void CGCReportObjectAction::Swap(CGCReportObjectAction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCReportObjectAction::InternalSwap(CGCReportObjectAction* other) {
  std::swap(m_un32objid_, other->m_un32objid_);
  std::swap(m_n32actioncate_, other->m_n32actioncate_);
  std::swap(m_fdirx_, other->m_fdirx_);
  std::swap(m_fdiry_, other->m_fdiry_);
  std::swap(m_fdirz_, other->m_fdirz_);
  std::swap(m_fposx_, other->m_fposx_);
  std::swap(m_fposy_, other->m_fposy_);
  std::swap(m_fposz_, other->m_fposz_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCReportObjectAction::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCReportObjectAction_descriptor_;
  metadata.reflection = CGCReportObjectAction_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCReportObjectAction

// optional uint32 m_un32ObjID = 1;
bool CGCReportObjectAction::has_m_un32objid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGCReportObjectAction::set_has_m_un32objid() {
  _has_bits_[0] |= 0x00000001u;
}
void CGCReportObjectAction::clear_has_m_un32objid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGCReportObjectAction::clear_m_un32objid() {
  m_un32objid_ = 0u;
  clear_has_m_un32objid();
}
 ::google::protobuf::uint32 CGCReportObjectAction::m_un32objid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCReportObjectAction.m_un32ObjID)
  return m_un32objid_;
}
 void CGCReportObjectAction::set_m_un32objid(::google::protobuf::uint32 value) {
  set_has_m_un32objid();
  m_un32objid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCReportObjectAction.m_un32ObjID)
}

// optional int32 m_n32ActionCate = 2;
bool CGCReportObjectAction::has_m_n32actioncate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CGCReportObjectAction::set_has_m_n32actioncate() {
  _has_bits_[0] |= 0x00000002u;
}
void CGCReportObjectAction::clear_has_m_n32actioncate() {
  _has_bits_[0] &= ~0x00000002u;
}
void CGCReportObjectAction::clear_m_n32actioncate() {
  m_n32actioncate_ = 0;
  clear_has_m_n32actioncate();
}
 ::google::protobuf::int32 CGCReportObjectAction::m_n32actioncate() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCReportObjectAction.m_n32ActionCate)
  return m_n32actioncate_;
}
 void CGCReportObjectAction::set_m_n32actioncate(::google::protobuf::int32 value) {
  set_has_m_n32actioncate();
  m_n32actioncate_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCReportObjectAction.m_n32ActionCate)
}

// optional float m_fDirX = 3;
bool CGCReportObjectAction::has_m_fdirx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CGCReportObjectAction::set_has_m_fdirx() {
  _has_bits_[0] |= 0x00000004u;
}
void CGCReportObjectAction::clear_has_m_fdirx() {
  _has_bits_[0] &= ~0x00000004u;
}
void CGCReportObjectAction::clear_m_fdirx() {
  m_fdirx_ = 0;
  clear_has_m_fdirx();
}
 float CGCReportObjectAction::m_fdirx() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCReportObjectAction.m_fDirX)
  return m_fdirx_;
}
 void CGCReportObjectAction::set_m_fdirx(float value) {
  set_has_m_fdirx();
  m_fdirx_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCReportObjectAction.m_fDirX)
}

// optional float m_fDirY = 4;
bool CGCReportObjectAction::has_m_fdiry() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CGCReportObjectAction::set_has_m_fdiry() {
  _has_bits_[0] |= 0x00000008u;
}
void CGCReportObjectAction::clear_has_m_fdiry() {
  _has_bits_[0] &= ~0x00000008u;
}
void CGCReportObjectAction::clear_m_fdiry() {
  m_fdiry_ = 0;
  clear_has_m_fdiry();
}
 float CGCReportObjectAction::m_fdiry() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCReportObjectAction.m_fDirY)
  return m_fdiry_;
}
 void CGCReportObjectAction::set_m_fdiry(float value) {
  set_has_m_fdiry();
  m_fdiry_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCReportObjectAction.m_fDirY)
}

// optional float m_fDirZ = 5;
bool CGCReportObjectAction::has_m_fdirz() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CGCReportObjectAction::set_has_m_fdirz() {
  _has_bits_[0] |= 0x00000010u;
}
void CGCReportObjectAction::clear_has_m_fdirz() {
  _has_bits_[0] &= ~0x00000010u;
}
void CGCReportObjectAction::clear_m_fdirz() {
  m_fdirz_ = 0;
  clear_has_m_fdirz();
}
 float CGCReportObjectAction::m_fdirz() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCReportObjectAction.m_fDirZ)
  return m_fdirz_;
}
 void CGCReportObjectAction::set_m_fdirz(float value) {
  set_has_m_fdirz();
  m_fdirz_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCReportObjectAction.m_fDirZ)
}

// optional float m_fPosX = 6;
bool CGCReportObjectAction::has_m_fposx() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CGCReportObjectAction::set_has_m_fposx() {
  _has_bits_[0] |= 0x00000020u;
}
void CGCReportObjectAction::clear_has_m_fposx() {
  _has_bits_[0] &= ~0x00000020u;
}
void CGCReportObjectAction::clear_m_fposx() {
  m_fposx_ = 0;
  clear_has_m_fposx();
}
 float CGCReportObjectAction::m_fposx() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCReportObjectAction.m_fPosX)
  return m_fposx_;
}
 void CGCReportObjectAction::set_m_fposx(float value) {
  set_has_m_fposx();
  m_fposx_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCReportObjectAction.m_fPosX)
}

// optional float m_fPosY = 7;
bool CGCReportObjectAction::has_m_fposy() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CGCReportObjectAction::set_has_m_fposy() {
  _has_bits_[0] |= 0x00000040u;
}
void CGCReportObjectAction::clear_has_m_fposy() {
  _has_bits_[0] &= ~0x00000040u;
}
void CGCReportObjectAction::clear_m_fposy() {
  m_fposy_ = 0;
  clear_has_m_fposy();
}
 float CGCReportObjectAction::m_fposy() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCReportObjectAction.m_fPosY)
  return m_fposy_;
}
 void CGCReportObjectAction::set_m_fposy(float value) {
  set_has_m_fposy();
  m_fposy_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCReportObjectAction.m_fPosY)
}

// optional float m_fPosZ = 8;
bool CGCReportObjectAction::has_m_fposz() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CGCReportObjectAction::set_has_m_fposz() {
  _has_bits_[0] |= 0x00000080u;
}
void CGCReportObjectAction::clear_has_m_fposz() {
  _has_bits_[0] &= ~0x00000080u;
}
void CGCReportObjectAction::clear_m_fposz() {
  m_fposz_ = 0;
  clear_has_m_fposz();
}
 float CGCReportObjectAction::m_fposz() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCReportObjectAction.m_fPosZ)
  return m_fposz_;
}
 void CGCReportObjectAction::set_m_fposz(float value) {
  set_has_m_fposz();
  m_fposz_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCReportObjectAction.m_fPosZ)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGSNotifyObjectAction::kMUn32ObjIDFieldNumber;
const int CGSNotifyObjectAction::kMN32ActionCateFieldNumber;
const int CGSNotifyObjectAction::kMFDirXFieldNumber;
const int CGSNotifyObjectAction::kMFDirYFieldNumber;
const int CGSNotifyObjectAction::kMFDirZFieldNumber;
const int CGSNotifyObjectAction::kMFPosXFieldNumber;
const int CGSNotifyObjectAction::kMFPosYFieldNumber;
const int CGSNotifyObjectAction::kMFPosZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGSNotifyObjectAction::CGSNotifyObjectAction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGSNotifyObjectAction)
}

void CGSNotifyObjectAction::InitAsDefaultInstance() {
}

CGSNotifyObjectAction::CGSNotifyObjectAction(const CGSNotifyObjectAction& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGSNotifyObjectAction)
}

void CGSNotifyObjectAction::SharedCtor() {
  _cached_size_ = 0;
  m_un32objid_ = 0u;
  m_n32actioncate_ = 0;
  m_fdirx_ = 0;
  m_fdiry_ = 0;
  m_fdirz_ = 0;
  m_fposx_ = 0;
  m_fposy_ = 0;
  m_fposz_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGSNotifyObjectAction::~CGSNotifyObjectAction() {
  // @@protoc_insertion_point(destructor:NetPackage.CGSNotifyObjectAction)
  SharedDtor();
}

void CGSNotifyObjectAction::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGSNotifyObjectAction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGSNotifyObjectAction::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGSNotifyObjectAction_descriptor_;
}

const CGSNotifyObjectAction& CGSNotifyObjectAction::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGSNotifyObjectAction* CGSNotifyObjectAction::default_instance_ = NULL;

CGSNotifyObjectAction* CGSNotifyObjectAction::New(::google::protobuf::Arena* arena) const {
  CGSNotifyObjectAction* n = new CGSNotifyObjectAction;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGSNotifyObjectAction::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CGSNotifyObjectAction*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(m_un32objid_, m_fposz_);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGSNotifyObjectAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGSNotifyObjectAction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 m_un32ObjID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32objid_)));
          set_has_m_un32objid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_m_n32ActionCate;
        break;
      }

      // optional int32 m_n32ActionCate = 2;
      case 2: {
        if (tag == 16) {
         parse_m_n32ActionCate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_n32actioncate_)));
          set_has_m_n32actioncate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_m_fDirX;
        break;
      }

      // optional float m_fDirX = 3;
      case 3: {
        if (tag == 29) {
         parse_m_fDirX:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fdirx_)));
          set_has_m_fdirx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_m_fDirY;
        break;
      }

      // optional float m_fDirY = 4;
      case 4: {
        if (tag == 37) {
         parse_m_fDirY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fdiry_)));
          set_has_m_fdiry();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_m_fDirZ;
        break;
      }

      // optional float m_fDirZ = 5;
      case 5: {
        if (tag == 45) {
         parse_m_fDirZ:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fdirz_)));
          set_has_m_fdirz();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_m_fPosX;
        break;
      }

      // optional float m_fPosX = 6;
      case 6: {
        if (tag == 53) {
         parse_m_fPosX:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fposx_)));
          set_has_m_fposx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(61)) goto parse_m_fPosY;
        break;
      }

      // optional float m_fPosY = 7;
      case 7: {
        if (tag == 61) {
         parse_m_fPosY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fposy_)));
          set_has_m_fposy();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(69)) goto parse_m_fPosZ;
        break;
      }

      // optional float m_fPosZ = 8;
      case 8: {
        if (tag == 69) {
         parse_m_fPosZ:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &m_fposz_)));
          set_has_m_fposz();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGSNotifyObjectAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGSNotifyObjectAction)
  return false;
#undef DO_
}

void CGSNotifyObjectAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGSNotifyObjectAction)
  // optional uint32 m_un32ObjID = 1;
  if (has_m_un32objid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->m_un32objid(), output);
  }

  // optional int32 m_n32ActionCate = 2;
  if (has_m_n32actioncate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_n32actioncate(), output);
  }

  // optional float m_fDirX = 3;
  if (has_m_fdirx()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->m_fdirx(), output);
  }

  // optional float m_fDirY = 4;
  if (has_m_fdiry()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->m_fdiry(), output);
  }

  // optional float m_fDirZ = 5;
  if (has_m_fdirz()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->m_fdirz(), output);
  }

  // optional float m_fPosX = 6;
  if (has_m_fposx()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->m_fposx(), output);
  }

  // optional float m_fPosY = 7;
  if (has_m_fposy()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->m_fposy(), output);
  }

  // optional float m_fPosZ = 8;
  if (has_m_fposz()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->m_fposz(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGSNotifyObjectAction)
}

::google::protobuf::uint8* CGSNotifyObjectAction::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGSNotifyObjectAction)
  // optional uint32 m_un32ObjID = 1;
  if (has_m_un32objid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->m_un32objid(), target);
  }

  // optional int32 m_n32ActionCate = 2;
  if (has_m_n32actioncate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_n32actioncate(), target);
  }

  // optional float m_fDirX = 3;
  if (has_m_fdirx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->m_fdirx(), target);
  }

  // optional float m_fDirY = 4;
  if (has_m_fdiry()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->m_fdiry(), target);
  }

  // optional float m_fDirZ = 5;
  if (has_m_fdirz()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->m_fdirz(), target);
  }

  // optional float m_fPosX = 6;
  if (has_m_fposx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->m_fposx(), target);
  }

  // optional float m_fPosY = 7;
  if (has_m_fposy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->m_fposy(), target);
  }

  // optional float m_fPosZ = 8;
  if (has_m_fposz()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->m_fposz(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGSNotifyObjectAction)
  return target;
}

int CGSNotifyObjectAction::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional uint32 m_un32ObjID = 1;
    if (has_m_un32objid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32objid());
    }

    // optional int32 m_n32ActionCate = 2;
    if (has_m_n32actioncate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_n32actioncate());
    }

    // optional float m_fDirX = 3;
    if (has_m_fdirx()) {
      total_size += 1 + 4;
    }

    // optional float m_fDirY = 4;
    if (has_m_fdiry()) {
      total_size += 1 + 4;
    }

    // optional float m_fDirZ = 5;
    if (has_m_fdirz()) {
      total_size += 1 + 4;
    }

    // optional float m_fPosX = 6;
    if (has_m_fposx()) {
      total_size += 1 + 4;
    }

    // optional float m_fPosY = 7;
    if (has_m_fposy()) {
      total_size += 1 + 4;
    }

    // optional float m_fPosZ = 8;
    if (has_m_fposz()) {
      total_size += 1 + 4;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGSNotifyObjectAction::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGSNotifyObjectAction* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGSNotifyObjectAction>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGSNotifyObjectAction::MergeFrom(const CGSNotifyObjectAction& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_un32objid()) {
      set_m_un32objid(from.m_un32objid());
    }
    if (from.has_m_n32actioncate()) {
      set_m_n32actioncate(from.m_n32actioncate());
    }
    if (from.has_m_fdirx()) {
      set_m_fdirx(from.m_fdirx());
    }
    if (from.has_m_fdiry()) {
      set_m_fdiry(from.m_fdiry());
    }
    if (from.has_m_fdirz()) {
      set_m_fdirz(from.m_fdirz());
    }
    if (from.has_m_fposx()) {
      set_m_fposx(from.m_fposx());
    }
    if (from.has_m_fposy()) {
      set_m_fposy(from.m_fposy());
    }
    if (from.has_m_fposz()) {
      set_m_fposz(from.m_fposz());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGSNotifyObjectAction::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGSNotifyObjectAction::CopyFrom(const CGSNotifyObjectAction& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGSNotifyObjectAction::IsInitialized() const {

  return true;
}

void CGSNotifyObjectAction::Swap(CGSNotifyObjectAction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGSNotifyObjectAction::InternalSwap(CGSNotifyObjectAction* other) {
  std::swap(m_un32objid_, other->m_un32objid_);
  std::swap(m_n32actioncate_, other->m_n32actioncate_);
  std::swap(m_fdirx_, other->m_fdirx_);
  std::swap(m_fdiry_, other->m_fdiry_);
  std::swap(m_fdirz_, other->m_fdirz_);
  std::swap(m_fposx_, other->m_fposx_);
  std::swap(m_fposy_, other->m_fposy_);
  std::swap(m_fposz_, other->m_fposz_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGSNotifyObjectAction::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGSNotifyObjectAction_descriptor_;
  metadata.reflection = CGSNotifyObjectAction_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGSNotifyObjectAction

// optional uint32 m_un32ObjID = 1;
bool CGSNotifyObjectAction::has_m_un32objid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGSNotifyObjectAction::set_has_m_un32objid() {
  _has_bits_[0] |= 0x00000001u;
}
void CGSNotifyObjectAction::clear_has_m_un32objid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGSNotifyObjectAction::clear_m_un32objid() {
  m_un32objid_ = 0u;
  clear_has_m_un32objid();
}
 ::google::protobuf::uint32 CGSNotifyObjectAction::m_un32objid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyObjectAction.m_un32ObjID)
  return m_un32objid_;
}
 void CGSNotifyObjectAction::set_m_un32objid(::google::protobuf::uint32 value) {
  set_has_m_un32objid();
  m_un32objid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyObjectAction.m_un32ObjID)
}

// optional int32 m_n32ActionCate = 2;
bool CGSNotifyObjectAction::has_m_n32actioncate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CGSNotifyObjectAction::set_has_m_n32actioncate() {
  _has_bits_[0] |= 0x00000002u;
}
void CGSNotifyObjectAction::clear_has_m_n32actioncate() {
  _has_bits_[0] &= ~0x00000002u;
}
void CGSNotifyObjectAction::clear_m_n32actioncate() {
  m_n32actioncate_ = 0;
  clear_has_m_n32actioncate();
}
 ::google::protobuf::int32 CGSNotifyObjectAction::m_n32actioncate() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyObjectAction.m_n32ActionCate)
  return m_n32actioncate_;
}
 void CGSNotifyObjectAction::set_m_n32actioncate(::google::protobuf::int32 value) {
  set_has_m_n32actioncate();
  m_n32actioncate_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyObjectAction.m_n32ActionCate)
}

// optional float m_fDirX = 3;
bool CGSNotifyObjectAction::has_m_fdirx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CGSNotifyObjectAction::set_has_m_fdirx() {
  _has_bits_[0] |= 0x00000004u;
}
void CGSNotifyObjectAction::clear_has_m_fdirx() {
  _has_bits_[0] &= ~0x00000004u;
}
void CGSNotifyObjectAction::clear_m_fdirx() {
  m_fdirx_ = 0;
  clear_has_m_fdirx();
}
 float CGSNotifyObjectAction::m_fdirx() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyObjectAction.m_fDirX)
  return m_fdirx_;
}
 void CGSNotifyObjectAction::set_m_fdirx(float value) {
  set_has_m_fdirx();
  m_fdirx_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyObjectAction.m_fDirX)
}

// optional float m_fDirY = 4;
bool CGSNotifyObjectAction::has_m_fdiry() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CGSNotifyObjectAction::set_has_m_fdiry() {
  _has_bits_[0] |= 0x00000008u;
}
void CGSNotifyObjectAction::clear_has_m_fdiry() {
  _has_bits_[0] &= ~0x00000008u;
}
void CGSNotifyObjectAction::clear_m_fdiry() {
  m_fdiry_ = 0;
  clear_has_m_fdiry();
}
 float CGSNotifyObjectAction::m_fdiry() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyObjectAction.m_fDirY)
  return m_fdiry_;
}
 void CGSNotifyObjectAction::set_m_fdiry(float value) {
  set_has_m_fdiry();
  m_fdiry_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyObjectAction.m_fDirY)
}

// optional float m_fDirZ = 5;
bool CGSNotifyObjectAction::has_m_fdirz() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CGSNotifyObjectAction::set_has_m_fdirz() {
  _has_bits_[0] |= 0x00000010u;
}
void CGSNotifyObjectAction::clear_has_m_fdirz() {
  _has_bits_[0] &= ~0x00000010u;
}
void CGSNotifyObjectAction::clear_m_fdirz() {
  m_fdirz_ = 0;
  clear_has_m_fdirz();
}
 float CGSNotifyObjectAction::m_fdirz() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyObjectAction.m_fDirZ)
  return m_fdirz_;
}
 void CGSNotifyObjectAction::set_m_fdirz(float value) {
  set_has_m_fdirz();
  m_fdirz_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyObjectAction.m_fDirZ)
}

// optional float m_fPosX = 6;
bool CGSNotifyObjectAction::has_m_fposx() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CGSNotifyObjectAction::set_has_m_fposx() {
  _has_bits_[0] |= 0x00000020u;
}
void CGSNotifyObjectAction::clear_has_m_fposx() {
  _has_bits_[0] &= ~0x00000020u;
}
void CGSNotifyObjectAction::clear_m_fposx() {
  m_fposx_ = 0;
  clear_has_m_fposx();
}
 float CGSNotifyObjectAction::m_fposx() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyObjectAction.m_fPosX)
  return m_fposx_;
}
 void CGSNotifyObjectAction::set_m_fposx(float value) {
  set_has_m_fposx();
  m_fposx_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyObjectAction.m_fPosX)
}

// optional float m_fPosY = 7;
bool CGSNotifyObjectAction::has_m_fposy() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CGSNotifyObjectAction::set_has_m_fposy() {
  _has_bits_[0] |= 0x00000040u;
}
void CGSNotifyObjectAction::clear_has_m_fposy() {
  _has_bits_[0] &= ~0x00000040u;
}
void CGSNotifyObjectAction::clear_m_fposy() {
  m_fposy_ = 0;
  clear_has_m_fposy();
}
 float CGSNotifyObjectAction::m_fposy() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyObjectAction.m_fPosY)
  return m_fposy_;
}
 void CGSNotifyObjectAction::set_m_fposy(float value) {
  set_has_m_fposy();
  m_fposy_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyObjectAction.m_fPosY)
}

// optional float m_fPosZ = 8;
bool CGSNotifyObjectAction::has_m_fposz() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CGSNotifyObjectAction::set_has_m_fposz() {
  _has_bits_[0] |= 0x00000080u;
}
void CGSNotifyObjectAction::clear_has_m_fposz() {
  _has_bits_[0] &= ~0x00000080u;
}
void CGSNotifyObjectAction::clear_m_fposz() {
  m_fposz_ = 0;
  clear_has_m_fposz();
}
 float CGSNotifyObjectAction::m_fposz() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyObjectAction.m_fPosZ)
  return m_fposz_;
}
 void CGSNotifyObjectAction::set_m_fposz(float value) {
  set_has_m_fposz();
  m_fposz_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyObjectAction.m_fPosZ)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCReportObjectHurm::kMBHostFieldNumber;
const int CGCReportObjectHurm::kMUn32ObjIDFieldNumber;
const int CGCReportObjectHurm::kMN32HPValueFieldNumber;
const int CGCReportObjectHurm::kMN32CurHPFieldNumber;
const int CGCReportObjectHurm::kMN32EffectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCReportObjectHurm::CGCReportObjectHurm()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGCReportObjectHurm)
}

void CGCReportObjectHurm::InitAsDefaultInstance() {
}

CGCReportObjectHurm::CGCReportObjectHurm(const CGCReportObjectHurm& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGCReportObjectHurm)
}

void CGCReportObjectHurm::SharedCtor() {
  _cached_size_ = 0;
  m_bhost_ = false;
  m_un32objid_ = 0u;
  m_n32hpvalue_ = 0;
  m_n32curhp_ = 0;
  m_n32effect_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCReportObjectHurm::~CGCReportObjectHurm() {
  // @@protoc_insertion_point(destructor:NetPackage.CGCReportObjectHurm)
  SharedDtor();
}

void CGCReportObjectHurm::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGCReportObjectHurm::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCReportObjectHurm::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCReportObjectHurm_descriptor_;
}

const CGCReportObjectHurm& CGCReportObjectHurm::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGCReportObjectHurm* CGCReportObjectHurm::default_instance_ = NULL;

CGCReportObjectHurm* CGCReportObjectHurm::New(::google::protobuf::Arena* arena) const {
  CGCReportObjectHurm* n = new CGCReportObjectHurm;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCReportObjectHurm::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CGCReportObjectHurm*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(m_bhost_, m_n32effect_);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCReportObjectHurm::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGCReportObjectHurm)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool m_bHost = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &m_bhost_)));
          set_has_m_bhost();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_m_un32ObjID;
        break;
      }

      // optional uint32 m_un32ObjID = 2;
      case 2: {
        if (tag == 16) {
         parse_m_un32ObjID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32objid_)));
          set_has_m_un32objid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_m_n32HPValue;
        break;
      }

      // optional int32 m_n32HPValue = 3;
      case 3: {
        if (tag == 24) {
         parse_m_n32HPValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_n32hpvalue_)));
          set_has_m_n32hpvalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_m_n32CurHP;
        break;
      }

      // optional int32 m_n32CurHP = 4;
      case 4: {
        if (tag == 32) {
         parse_m_n32CurHP:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_n32curhp_)));
          set_has_m_n32curhp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_m_n32Effect;
        break;
      }

      // optional int32 m_n32Effect = 5;
      case 5: {
        if (tag == 40) {
         parse_m_n32Effect:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_n32effect_)));
          set_has_m_n32effect();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGCReportObjectHurm)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGCReportObjectHurm)
  return false;
#undef DO_
}

void CGCReportObjectHurm::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGCReportObjectHurm)
  // optional bool m_bHost = 1;
  if (has_m_bhost()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->m_bhost(), output);
  }

  // optional uint32 m_un32ObjID = 2;
  if (has_m_un32objid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->m_un32objid(), output);
  }

  // optional int32 m_n32HPValue = 3;
  if (has_m_n32hpvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_n32hpvalue(), output);
  }

  // optional int32 m_n32CurHP = 4;
  if (has_m_n32curhp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_n32curhp(), output);
  }

  // optional int32 m_n32Effect = 5;
  if (has_m_n32effect()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_n32effect(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGCReportObjectHurm)
}

::google::protobuf::uint8* CGCReportObjectHurm::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGCReportObjectHurm)
  // optional bool m_bHost = 1;
  if (has_m_bhost()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->m_bhost(), target);
  }

  // optional uint32 m_un32ObjID = 2;
  if (has_m_un32objid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->m_un32objid(), target);
  }

  // optional int32 m_n32HPValue = 3;
  if (has_m_n32hpvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_n32hpvalue(), target);
  }

  // optional int32 m_n32CurHP = 4;
  if (has_m_n32curhp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_n32curhp(), target);
  }

  // optional int32 m_n32Effect = 5;
  if (has_m_n32effect()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_n32effect(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGCReportObjectHurm)
  return target;
}

int CGCReportObjectHurm::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31u) {
    // optional bool m_bHost = 1;
    if (has_m_bhost()) {
      total_size += 1 + 1;
    }

    // optional uint32 m_un32ObjID = 2;
    if (has_m_un32objid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32objid());
    }

    // optional int32 m_n32HPValue = 3;
    if (has_m_n32hpvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_n32hpvalue());
    }

    // optional int32 m_n32CurHP = 4;
    if (has_m_n32curhp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_n32curhp());
    }

    // optional int32 m_n32Effect = 5;
    if (has_m_n32effect()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_n32effect());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCReportObjectHurm::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCReportObjectHurm* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCReportObjectHurm>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCReportObjectHurm::MergeFrom(const CGCReportObjectHurm& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_bhost()) {
      set_m_bhost(from.m_bhost());
    }
    if (from.has_m_un32objid()) {
      set_m_un32objid(from.m_un32objid());
    }
    if (from.has_m_n32hpvalue()) {
      set_m_n32hpvalue(from.m_n32hpvalue());
    }
    if (from.has_m_n32curhp()) {
      set_m_n32curhp(from.m_n32curhp());
    }
    if (from.has_m_n32effect()) {
      set_m_n32effect(from.m_n32effect());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCReportObjectHurm::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCReportObjectHurm::CopyFrom(const CGCReportObjectHurm& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCReportObjectHurm::IsInitialized() const {

  return true;
}

void CGCReportObjectHurm::Swap(CGCReportObjectHurm* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCReportObjectHurm::InternalSwap(CGCReportObjectHurm* other) {
  std::swap(m_bhost_, other->m_bhost_);
  std::swap(m_un32objid_, other->m_un32objid_);
  std::swap(m_n32hpvalue_, other->m_n32hpvalue_);
  std::swap(m_n32curhp_, other->m_n32curhp_);
  std::swap(m_n32effect_, other->m_n32effect_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCReportObjectHurm::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCReportObjectHurm_descriptor_;
  metadata.reflection = CGCReportObjectHurm_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCReportObjectHurm

// optional bool m_bHost = 1;
bool CGCReportObjectHurm::has_m_bhost() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGCReportObjectHurm::set_has_m_bhost() {
  _has_bits_[0] |= 0x00000001u;
}
void CGCReportObjectHurm::clear_has_m_bhost() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGCReportObjectHurm::clear_m_bhost() {
  m_bhost_ = false;
  clear_has_m_bhost();
}
 bool CGCReportObjectHurm::m_bhost() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCReportObjectHurm.m_bHost)
  return m_bhost_;
}
 void CGCReportObjectHurm::set_m_bhost(bool value) {
  set_has_m_bhost();
  m_bhost_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCReportObjectHurm.m_bHost)
}

// optional uint32 m_un32ObjID = 2;
bool CGCReportObjectHurm::has_m_un32objid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CGCReportObjectHurm::set_has_m_un32objid() {
  _has_bits_[0] |= 0x00000002u;
}
void CGCReportObjectHurm::clear_has_m_un32objid() {
  _has_bits_[0] &= ~0x00000002u;
}
void CGCReportObjectHurm::clear_m_un32objid() {
  m_un32objid_ = 0u;
  clear_has_m_un32objid();
}
 ::google::protobuf::uint32 CGCReportObjectHurm::m_un32objid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCReportObjectHurm.m_un32ObjID)
  return m_un32objid_;
}
 void CGCReportObjectHurm::set_m_un32objid(::google::protobuf::uint32 value) {
  set_has_m_un32objid();
  m_un32objid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCReportObjectHurm.m_un32ObjID)
}

// optional int32 m_n32HPValue = 3;
bool CGCReportObjectHurm::has_m_n32hpvalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CGCReportObjectHurm::set_has_m_n32hpvalue() {
  _has_bits_[0] |= 0x00000004u;
}
void CGCReportObjectHurm::clear_has_m_n32hpvalue() {
  _has_bits_[0] &= ~0x00000004u;
}
void CGCReportObjectHurm::clear_m_n32hpvalue() {
  m_n32hpvalue_ = 0;
  clear_has_m_n32hpvalue();
}
 ::google::protobuf::int32 CGCReportObjectHurm::m_n32hpvalue() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCReportObjectHurm.m_n32HPValue)
  return m_n32hpvalue_;
}
 void CGCReportObjectHurm::set_m_n32hpvalue(::google::protobuf::int32 value) {
  set_has_m_n32hpvalue();
  m_n32hpvalue_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCReportObjectHurm.m_n32HPValue)
}

// optional int32 m_n32CurHP = 4;
bool CGCReportObjectHurm::has_m_n32curhp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CGCReportObjectHurm::set_has_m_n32curhp() {
  _has_bits_[0] |= 0x00000008u;
}
void CGCReportObjectHurm::clear_has_m_n32curhp() {
  _has_bits_[0] &= ~0x00000008u;
}
void CGCReportObjectHurm::clear_m_n32curhp() {
  m_n32curhp_ = 0;
  clear_has_m_n32curhp();
}
 ::google::protobuf::int32 CGCReportObjectHurm::m_n32curhp() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCReportObjectHurm.m_n32CurHP)
  return m_n32curhp_;
}
 void CGCReportObjectHurm::set_m_n32curhp(::google::protobuf::int32 value) {
  set_has_m_n32curhp();
  m_n32curhp_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCReportObjectHurm.m_n32CurHP)
}

// optional int32 m_n32Effect = 5;
bool CGCReportObjectHurm::has_m_n32effect() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CGCReportObjectHurm::set_has_m_n32effect() {
  _has_bits_[0] |= 0x00000010u;
}
void CGCReportObjectHurm::clear_has_m_n32effect() {
  _has_bits_[0] &= ~0x00000010u;
}
void CGCReportObjectHurm::clear_m_n32effect() {
  m_n32effect_ = 0;
  clear_has_m_n32effect();
}
 ::google::protobuf::int32 CGCReportObjectHurm::m_n32effect() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCReportObjectHurm.m_n32Effect)
  return m_n32effect_;
}
 void CGCReportObjectHurm::set_m_n32effect(::google::protobuf::int32 value) {
  set_has_m_n32effect();
  m_n32effect_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCReportObjectHurm.m_n32Effect)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGSNotifyObjectHurm::kMBHostFieldNumber;
const int CGSNotifyObjectHurm::kMUn32ObjIDFieldNumber;
const int CGSNotifyObjectHurm::kMN32HPValueFieldNumber;
const int CGSNotifyObjectHurm::kMN32HPFieldNumber;
const int CGSNotifyObjectHurm::kMN32EffectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGSNotifyObjectHurm::CGSNotifyObjectHurm()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGSNotifyObjectHurm)
}

void CGSNotifyObjectHurm::InitAsDefaultInstance() {
}

CGSNotifyObjectHurm::CGSNotifyObjectHurm(const CGSNotifyObjectHurm& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGSNotifyObjectHurm)
}

void CGSNotifyObjectHurm::SharedCtor() {
  _cached_size_ = 0;
  m_bhost_ = false;
  m_un32objid_ = 0u;
  m_n32hpvalue_ = 0;
  m_n32hp_ = 0;
  m_n32effect_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGSNotifyObjectHurm::~CGSNotifyObjectHurm() {
  // @@protoc_insertion_point(destructor:NetPackage.CGSNotifyObjectHurm)
  SharedDtor();
}

void CGSNotifyObjectHurm::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGSNotifyObjectHurm::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGSNotifyObjectHurm::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGSNotifyObjectHurm_descriptor_;
}

const CGSNotifyObjectHurm& CGSNotifyObjectHurm::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGSNotifyObjectHurm* CGSNotifyObjectHurm::default_instance_ = NULL;

CGSNotifyObjectHurm* CGSNotifyObjectHurm::New(::google::protobuf::Arena* arena) const {
  CGSNotifyObjectHurm* n = new CGSNotifyObjectHurm;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGSNotifyObjectHurm::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CGSNotifyObjectHurm*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(m_bhost_, m_n32effect_);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGSNotifyObjectHurm::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGSNotifyObjectHurm)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool m_bHost = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &m_bhost_)));
          set_has_m_bhost();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_m_un32ObjID;
        break;
      }

      // optional uint32 m_un32ObjID = 2;
      case 2: {
        if (tag == 16) {
         parse_m_un32ObjID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32objid_)));
          set_has_m_un32objid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_m_n32HPValue;
        break;
      }

      // optional int32 m_n32HPValue = 3;
      case 3: {
        if (tag == 24) {
         parse_m_n32HPValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_n32hpvalue_)));
          set_has_m_n32hpvalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_m_n32HP;
        break;
      }

      // optional int32 m_n32HP = 4;
      case 4: {
        if (tag == 32) {
         parse_m_n32HP:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_n32hp_)));
          set_has_m_n32hp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_m_n32Effect;
        break;
      }

      // optional int32 m_n32Effect = 5;
      case 5: {
        if (tag == 40) {
         parse_m_n32Effect:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_n32effect_)));
          set_has_m_n32effect();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGSNotifyObjectHurm)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGSNotifyObjectHurm)
  return false;
#undef DO_
}

void CGSNotifyObjectHurm::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGSNotifyObjectHurm)
  // optional bool m_bHost = 1;
  if (has_m_bhost()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->m_bhost(), output);
  }

  // optional uint32 m_un32ObjID = 2;
  if (has_m_un32objid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->m_un32objid(), output);
  }

  // optional int32 m_n32HPValue = 3;
  if (has_m_n32hpvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_n32hpvalue(), output);
  }

  // optional int32 m_n32HP = 4;
  if (has_m_n32hp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_n32hp(), output);
  }

  // optional int32 m_n32Effect = 5;
  if (has_m_n32effect()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->m_n32effect(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGSNotifyObjectHurm)
}

::google::protobuf::uint8* CGSNotifyObjectHurm::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGSNotifyObjectHurm)
  // optional bool m_bHost = 1;
  if (has_m_bhost()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->m_bhost(), target);
  }

  // optional uint32 m_un32ObjID = 2;
  if (has_m_un32objid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->m_un32objid(), target);
  }

  // optional int32 m_n32HPValue = 3;
  if (has_m_n32hpvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_n32hpvalue(), target);
  }

  // optional int32 m_n32HP = 4;
  if (has_m_n32hp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_n32hp(), target);
  }

  // optional int32 m_n32Effect = 5;
  if (has_m_n32effect()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->m_n32effect(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGSNotifyObjectHurm)
  return target;
}

int CGSNotifyObjectHurm::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31u) {
    // optional bool m_bHost = 1;
    if (has_m_bhost()) {
      total_size += 1 + 1;
    }

    // optional uint32 m_un32ObjID = 2;
    if (has_m_un32objid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32objid());
    }

    // optional int32 m_n32HPValue = 3;
    if (has_m_n32hpvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_n32hpvalue());
    }

    // optional int32 m_n32HP = 4;
    if (has_m_n32hp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_n32hp());
    }

    // optional int32 m_n32Effect = 5;
    if (has_m_n32effect()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_n32effect());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGSNotifyObjectHurm::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGSNotifyObjectHurm* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGSNotifyObjectHurm>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGSNotifyObjectHurm::MergeFrom(const CGSNotifyObjectHurm& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_bhost()) {
      set_m_bhost(from.m_bhost());
    }
    if (from.has_m_un32objid()) {
      set_m_un32objid(from.m_un32objid());
    }
    if (from.has_m_n32hpvalue()) {
      set_m_n32hpvalue(from.m_n32hpvalue());
    }
    if (from.has_m_n32hp()) {
      set_m_n32hp(from.m_n32hp());
    }
    if (from.has_m_n32effect()) {
      set_m_n32effect(from.m_n32effect());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGSNotifyObjectHurm::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGSNotifyObjectHurm::CopyFrom(const CGSNotifyObjectHurm& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGSNotifyObjectHurm::IsInitialized() const {

  return true;
}

void CGSNotifyObjectHurm::Swap(CGSNotifyObjectHurm* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGSNotifyObjectHurm::InternalSwap(CGSNotifyObjectHurm* other) {
  std::swap(m_bhost_, other->m_bhost_);
  std::swap(m_un32objid_, other->m_un32objid_);
  std::swap(m_n32hpvalue_, other->m_n32hpvalue_);
  std::swap(m_n32hp_, other->m_n32hp_);
  std::swap(m_n32effect_, other->m_n32effect_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGSNotifyObjectHurm::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGSNotifyObjectHurm_descriptor_;
  metadata.reflection = CGSNotifyObjectHurm_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGSNotifyObjectHurm

// optional bool m_bHost = 1;
bool CGSNotifyObjectHurm::has_m_bhost() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGSNotifyObjectHurm::set_has_m_bhost() {
  _has_bits_[0] |= 0x00000001u;
}
void CGSNotifyObjectHurm::clear_has_m_bhost() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGSNotifyObjectHurm::clear_m_bhost() {
  m_bhost_ = false;
  clear_has_m_bhost();
}
 bool CGSNotifyObjectHurm::m_bhost() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyObjectHurm.m_bHost)
  return m_bhost_;
}
 void CGSNotifyObjectHurm::set_m_bhost(bool value) {
  set_has_m_bhost();
  m_bhost_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyObjectHurm.m_bHost)
}

// optional uint32 m_un32ObjID = 2;
bool CGSNotifyObjectHurm::has_m_un32objid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CGSNotifyObjectHurm::set_has_m_un32objid() {
  _has_bits_[0] |= 0x00000002u;
}
void CGSNotifyObjectHurm::clear_has_m_un32objid() {
  _has_bits_[0] &= ~0x00000002u;
}
void CGSNotifyObjectHurm::clear_m_un32objid() {
  m_un32objid_ = 0u;
  clear_has_m_un32objid();
}
 ::google::protobuf::uint32 CGSNotifyObjectHurm::m_un32objid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyObjectHurm.m_un32ObjID)
  return m_un32objid_;
}
 void CGSNotifyObjectHurm::set_m_un32objid(::google::protobuf::uint32 value) {
  set_has_m_un32objid();
  m_un32objid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyObjectHurm.m_un32ObjID)
}

// optional int32 m_n32HPValue = 3;
bool CGSNotifyObjectHurm::has_m_n32hpvalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CGSNotifyObjectHurm::set_has_m_n32hpvalue() {
  _has_bits_[0] |= 0x00000004u;
}
void CGSNotifyObjectHurm::clear_has_m_n32hpvalue() {
  _has_bits_[0] &= ~0x00000004u;
}
void CGSNotifyObjectHurm::clear_m_n32hpvalue() {
  m_n32hpvalue_ = 0;
  clear_has_m_n32hpvalue();
}
 ::google::protobuf::int32 CGSNotifyObjectHurm::m_n32hpvalue() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyObjectHurm.m_n32HPValue)
  return m_n32hpvalue_;
}
 void CGSNotifyObjectHurm::set_m_n32hpvalue(::google::protobuf::int32 value) {
  set_has_m_n32hpvalue();
  m_n32hpvalue_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyObjectHurm.m_n32HPValue)
}

// optional int32 m_n32HP = 4;
bool CGSNotifyObjectHurm::has_m_n32hp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CGSNotifyObjectHurm::set_has_m_n32hp() {
  _has_bits_[0] |= 0x00000008u;
}
void CGSNotifyObjectHurm::clear_has_m_n32hp() {
  _has_bits_[0] &= ~0x00000008u;
}
void CGSNotifyObjectHurm::clear_m_n32hp() {
  m_n32hp_ = 0;
  clear_has_m_n32hp();
}
 ::google::protobuf::int32 CGSNotifyObjectHurm::m_n32hp() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyObjectHurm.m_n32HP)
  return m_n32hp_;
}
 void CGSNotifyObjectHurm::set_m_n32hp(::google::protobuf::int32 value) {
  set_has_m_n32hp();
  m_n32hp_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyObjectHurm.m_n32HP)
}

// optional int32 m_n32Effect = 5;
bool CGSNotifyObjectHurm::has_m_n32effect() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CGSNotifyObjectHurm::set_has_m_n32effect() {
  _has_bits_[0] |= 0x00000010u;
}
void CGSNotifyObjectHurm::clear_has_m_n32effect() {
  _has_bits_[0] &= ~0x00000010u;
}
void CGSNotifyObjectHurm::clear_m_n32effect() {
  m_n32effect_ = 0;
  clear_has_m_n32effect();
}
 ::google::protobuf::int32 CGSNotifyObjectHurm::m_n32effect() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyObjectHurm.m_n32Effect)
  return m_n32effect_;
}
 void CGSNotifyObjectHurm::set_m_n32effect(::google::protobuf::int32 value) {
  set_has_m_n32effect();
  m_n32effect_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyObjectHurm.m_n32Effect)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCAskEnterTowerInstance::kMUn32TowerIdFieldNumber;
const int CGCAskEnterTowerInstance::kMBCurWaveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCAskEnterTowerInstance::CGCAskEnterTowerInstance()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGCAskEnterTowerInstance)
}

void CGCAskEnterTowerInstance::InitAsDefaultInstance() {
}

CGCAskEnterTowerInstance::CGCAskEnterTowerInstance(const CGCAskEnterTowerInstance& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGCAskEnterTowerInstance)
}

void CGCAskEnterTowerInstance::SharedCtor() {
  _cached_size_ = 0;
  m_un32towerid_ = 0u;
  m_bcurwave_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCAskEnterTowerInstance::~CGCAskEnterTowerInstance() {
  // @@protoc_insertion_point(destructor:NetPackage.CGCAskEnterTowerInstance)
  SharedDtor();
}

void CGCAskEnterTowerInstance::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGCAskEnterTowerInstance::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCAskEnterTowerInstance::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCAskEnterTowerInstance_descriptor_;
}

const CGCAskEnterTowerInstance& CGCAskEnterTowerInstance::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGCAskEnterTowerInstance* CGCAskEnterTowerInstance::default_instance_ = NULL;

CGCAskEnterTowerInstance* CGCAskEnterTowerInstance::New(::google::protobuf::Arena* arena) const {
  CGCAskEnterTowerInstance* n = new CGCAskEnterTowerInstance;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCAskEnterTowerInstance::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CGCAskEnterTowerInstance*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(m_un32towerid_, m_bcurwave_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCAskEnterTowerInstance::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGCAskEnterTowerInstance)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 m_un32TowerId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32towerid_)));
          set_has_m_un32towerid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_m_bCurWave;
        break;
      }

      // optional bool m_bCurWave = 2;
      case 2: {
        if (tag == 16) {
         parse_m_bCurWave:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &m_bcurwave_)));
          set_has_m_bcurwave();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGCAskEnterTowerInstance)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGCAskEnterTowerInstance)
  return false;
#undef DO_
}

void CGCAskEnterTowerInstance::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGCAskEnterTowerInstance)
  // optional uint32 m_un32TowerId = 1;
  if (has_m_un32towerid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->m_un32towerid(), output);
  }

  // optional bool m_bCurWave = 2;
  if (has_m_bcurwave()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->m_bcurwave(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGCAskEnterTowerInstance)
}

::google::protobuf::uint8* CGCAskEnterTowerInstance::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGCAskEnterTowerInstance)
  // optional uint32 m_un32TowerId = 1;
  if (has_m_un32towerid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->m_un32towerid(), target);
  }

  // optional bool m_bCurWave = 2;
  if (has_m_bcurwave()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->m_bcurwave(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGCAskEnterTowerInstance)
  return target;
}

int CGCAskEnterTowerInstance::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 m_un32TowerId = 1;
    if (has_m_un32towerid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_un32towerid());
    }

    // optional bool m_bCurWave = 2;
    if (has_m_bcurwave()) {
      total_size += 1 + 1;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCAskEnterTowerInstance::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCAskEnterTowerInstance* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCAskEnterTowerInstance>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCAskEnterTowerInstance::MergeFrom(const CGCAskEnterTowerInstance& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_un32towerid()) {
      set_m_un32towerid(from.m_un32towerid());
    }
    if (from.has_m_bcurwave()) {
      set_m_bcurwave(from.m_bcurwave());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCAskEnterTowerInstance::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCAskEnterTowerInstance::CopyFrom(const CGCAskEnterTowerInstance& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCAskEnterTowerInstance::IsInitialized() const {

  return true;
}

void CGCAskEnterTowerInstance::Swap(CGCAskEnterTowerInstance* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCAskEnterTowerInstance::InternalSwap(CGCAskEnterTowerInstance* other) {
  std::swap(m_un32towerid_, other->m_un32towerid_);
  std::swap(m_bcurwave_, other->m_bcurwave_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCAskEnterTowerInstance::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCAskEnterTowerInstance_descriptor_;
  metadata.reflection = CGCAskEnterTowerInstance_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCAskEnterTowerInstance

// optional uint32 m_un32TowerId = 1;
bool CGCAskEnterTowerInstance::has_m_un32towerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGCAskEnterTowerInstance::set_has_m_un32towerid() {
  _has_bits_[0] |= 0x00000001u;
}
void CGCAskEnterTowerInstance::clear_has_m_un32towerid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGCAskEnterTowerInstance::clear_m_un32towerid() {
  m_un32towerid_ = 0u;
  clear_has_m_un32towerid();
}
 ::google::protobuf::uint32 CGCAskEnterTowerInstance::m_un32towerid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCAskEnterTowerInstance.m_un32TowerId)
  return m_un32towerid_;
}
 void CGCAskEnterTowerInstance::set_m_un32towerid(::google::protobuf::uint32 value) {
  set_has_m_un32towerid();
  m_un32towerid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCAskEnterTowerInstance.m_un32TowerId)
}

// optional bool m_bCurWave = 2;
bool CGCAskEnterTowerInstance::has_m_bcurwave() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CGCAskEnterTowerInstance::set_has_m_bcurwave() {
  _has_bits_[0] |= 0x00000002u;
}
void CGCAskEnterTowerInstance::clear_has_m_bcurwave() {
  _has_bits_[0] &= ~0x00000002u;
}
void CGCAskEnterTowerInstance::clear_m_bcurwave() {
  m_bcurwave_ = false;
  clear_has_m_bcurwave();
}
 bool CGCAskEnterTowerInstance::m_bcurwave() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCAskEnterTowerInstance.m_bCurWave)
  return m_bcurwave_;
}
 void CGCAskEnterTowerInstance::set_m_bcurwave(bool value) {
  set_has_m_bcurwave();
  m_bcurwave_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCAskEnterTowerInstance.m_bCurWave)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCReportTowerInstanceScore::kMUn32TowerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCReportTowerInstanceScore::CGCReportTowerInstanceScore()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGCReportTowerInstanceScore)
}

void CGCReportTowerInstanceScore::InitAsDefaultInstance() {
}

CGCReportTowerInstanceScore::CGCReportTowerInstanceScore(const CGCReportTowerInstanceScore& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGCReportTowerInstanceScore)
}

void CGCReportTowerInstanceScore::SharedCtor() {
  _cached_size_ = 0;
  m_un32towerid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCReportTowerInstanceScore::~CGCReportTowerInstanceScore() {
  // @@protoc_insertion_point(destructor:NetPackage.CGCReportTowerInstanceScore)
  SharedDtor();
}

void CGCReportTowerInstanceScore::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGCReportTowerInstanceScore::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCReportTowerInstanceScore::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCReportTowerInstanceScore_descriptor_;
}

const CGCReportTowerInstanceScore& CGCReportTowerInstanceScore::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGCReportTowerInstanceScore* CGCReportTowerInstanceScore::default_instance_ = NULL;

CGCReportTowerInstanceScore* CGCReportTowerInstanceScore::New(::google::protobuf::Arena* arena) const {
  CGCReportTowerInstanceScore* n = new CGCReportTowerInstanceScore;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCReportTowerInstanceScore::Clear() {
  m_un32towerid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCReportTowerInstanceScore::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGCReportTowerInstanceScore)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 m_un32TowerId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32towerid_)));
          set_has_m_un32towerid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGCReportTowerInstanceScore)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGCReportTowerInstanceScore)
  return false;
#undef DO_
}

void CGCReportTowerInstanceScore::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGCReportTowerInstanceScore)
  // optional uint32 m_un32TowerId = 1;
  if (has_m_un32towerid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->m_un32towerid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGCReportTowerInstanceScore)
}

::google::protobuf::uint8* CGCReportTowerInstanceScore::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGCReportTowerInstanceScore)
  // optional uint32 m_un32TowerId = 1;
  if (has_m_un32towerid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->m_un32towerid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGCReportTowerInstanceScore)
  return target;
}

int CGCReportTowerInstanceScore::ByteSize() const {
  int total_size = 0;

  // optional uint32 m_un32TowerId = 1;
  if (has_m_un32towerid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->m_un32towerid());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCReportTowerInstanceScore::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCReportTowerInstanceScore* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCReportTowerInstanceScore>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCReportTowerInstanceScore::MergeFrom(const CGCReportTowerInstanceScore& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_un32towerid()) {
      set_m_un32towerid(from.m_un32towerid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCReportTowerInstanceScore::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCReportTowerInstanceScore::CopyFrom(const CGCReportTowerInstanceScore& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCReportTowerInstanceScore::IsInitialized() const {

  return true;
}

void CGCReportTowerInstanceScore::Swap(CGCReportTowerInstanceScore* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCReportTowerInstanceScore::InternalSwap(CGCReportTowerInstanceScore* other) {
  std::swap(m_un32towerid_, other->m_un32towerid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCReportTowerInstanceScore::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCReportTowerInstanceScore_descriptor_;
  metadata.reflection = CGCReportTowerInstanceScore_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCReportTowerInstanceScore

// optional uint32 m_un32TowerId = 1;
bool CGCReportTowerInstanceScore::has_m_un32towerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGCReportTowerInstanceScore::set_has_m_un32towerid() {
  _has_bits_[0] |= 0x00000001u;
}
void CGCReportTowerInstanceScore::clear_has_m_un32towerid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGCReportTowerInstanceScore::clear_m_un32towerid() {
  m_un32towerid_ = 0u;
  clear_has_m_un32towerid();
}
 ::google::protobuf::uint32 CGCReportTowerInstanceScore::m_un32towerid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCReportTowerInstanceScore.m_un32TowerId)
  return m_un32towerid_;
}
 void CGCReportTowerInstanceScore::set_m_un32towerid(::google::protobuf::uint32 value) {
  set_has_m_un32towerid();
  m_un32towerid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCReportTowerInstanceScore.m_un32TowerId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCAskTowerInstanceRank::kMUn16TypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCAskTowerInstanceRank::CGCAskTowerInstanceRank()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGCAskTowerInstanceRank)
}

void CGCAskTowerInstanceRank::InitAsDefaultInstance() {
}

CGCAskTowerInstanceRank::CGCAskTowerInstanceRank(const CGCAskTowerInstanceRank& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGCAskTowerInstanceRank)
}

void CGCAskTowerInstanceRank::SharedCtor() {
  _cached_size_ = 0;
  m_un16type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCAskTowerInstanceRank::~CGCAskTowerInstanceRank() {
  // @@protoc_insertion_point(destructor:NetPackage.CGCAskTowerInstanceRank)
  SharedDtor();
}

void CGCAskTowerInstanceRank::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGCAskTowerInstanceRank::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCAskTowerInstanceRank::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCAskTowerInstanceRank_descriptor_;
}

const CGCAskTowerInstanceRank& CGCAskTowerInstanceRank::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGCAskTowerInstanceRank* CGCAskTowerInstanceRank::default_instance_ = NULL;

CGCAskTowerInstanceRank* CGCAskTowerInstanceRank::New(::google::protobuf::Arena* arena) const {
  CGCAskTowerInstanceRank* n = new CGCAskTowerInstanceRank;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCAskTowerInstanceRank::Clear() {
  m_un16type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCAskTowerInstanceRank::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGCAskTowerInstanceRank)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_un16Type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_un16type_)));
          set_has_m_un16type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGCAskTowerInstanceRank)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGCAskTowerInstanceRank)
  return false;
#undef DO_
}

void CGCAskTowerInstanceRank::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGCAskTowerInstanceRank)
  // optional int32 m_un16Type = 1;
  if (has_m_un16type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_un16type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGCAskTowerInstanceRank)
}

::google::protobuf::uint8* CGCAskTowerInstanceRank::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGCAskTowerInstanceRank)
  // optional int32 m_un16Type = 1;
  if (has_m_un16type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_un16type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGCAskTowerInstanceRank)
  return target;
}

int CGCAskTowerInstanceRank::ByteSize() const {
  int total_size = 0;

  // optional int32 m_un16Type = 1;
  if (has_m_un16type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->m_un16type());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCAskTowerInstanceRank::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCAskTowerInstanceRank* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCAskTowerInstanceRank>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCAskTowerInstanceRank::MergeFrom(const CGCAskTowerInstanceRank& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_un16type()) {
      set_m_un16type(from.m_un16type());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCAskTowerInstanceRank::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCAskTowerInstanceRank::CopyFrom(const CGCAskTowerInstanceRank& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCAskTowerInstanceRank::IsInitialized() const {

  return true;
}

void CGCAskTowerInstanceRank::Swap(CGCAskTowerInstanceRank* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCAskTowerInstanceRank::InternalSwap(CGCAskTowerInstanceRank* other) {
  std::swap(m_un16type_, other->m_un16type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCAskTowerInstanceRank::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCAskTowerInstanceRank_descriptor_;
  metadata.reflection = CGCAskTowerInstanceRank_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCAskTowerInstanceRank

// optional int32 m_un16Type = 1;
bool CGCAskTowerInstanceRank::has_m_un16type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGCAskTowerInstanceRank::set_has_m_un16type() {
  _has_bits_[0] |= 0x00000001u;
}
void CGCAskTowerInstanceRank::clear_has_m_un16type() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGCAskTowerInstanceRank::clear_m_un16type() {
  m_un16type_ = 0;
  clear_has_m_un16type();
}
 ::google::protobuf::int32 CGCAskTowerInstanceRank::m_un16type() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCAskTowerInstanceRank.m_un16Type)
  return m_un16type_;
}
 void CGCAskTowerInstanceRank::set_m_un16type(::google::protobuf::int32 value) {
  set_has_m_un16type();
  m_un16type_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCAskTowerInstanceRank.m_un16Type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCAskTowerInstanceAward::kMU32TowerIDFieldNumber;
const int CGCAskTowerInstanceAward::kMU16TowerTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCAskTowerInstanceAward::CGCAskTowerInstanceAward()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGCAskTowerInstanceAward)
}

void CGCAskTowerInstanceAward::InitAsDefaultInstance() {
}

CGCAskTowerInstanceAward::CGCAskTowerInstanceAward(const CGCAskTowerInstanceAward& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGCAskTowerInstanceAward)
}

void CGCAskTowerInstanceAward::SharedCtor() {
  _cached_size_ = 0;
  m_u32towerid_ = 0u;
  m_u16towertype_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCAskTowerInstanceAward::~CGCAskTowerInstanceAward() {
  // @@protoc_insertion_point(destructor:NetPackage.CGCAskTowerInstanceAward)
  SharedDtor();
}

void CGCAskTowerInstanceAward::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGCAskTowerInstanceAward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCAskTowerInstanceAward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCAskTowerInstanceAward_descriptor_;
}

const CGCAskTowerInstanceAward& CGCAskTowerInstanceAward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGCAskTowerInstanceAward* CGCAskTowerInstanceAward::default_instance_ = NULL;

CGCAskTowerInstanceAward* CGCAskTowerInstanceAward::New(::google::protobuf::Arena* arena) const {
  CGCAskTowerInstanceAward* n = new CGCAskTowerInstanceAward;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCAskTowerInstanceAward::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CGCAskTowerInstanceAward*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(m_u32towerid_, m_u16towertype_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCAskTowerInstanceAward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGCAskTowerInstanceAward)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 m_u32TowerID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_u32towerid_)));
          set_has_m_u32towerid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_m_u16TowerType;
        break;
      }

      // optional uint32 m_u16TowerType = 2;
      case 2: {
        if (tag == 16) {
         parse_m_u16TowerType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_u16towertype_)));
          set_has_m_u16towertype();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGCAskTowerInstanceAward)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGCAskTowerInstanceAward)
  return false;
#undef DO_
}

void CGCAskTowerInstanceAward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGCAskTowerInstanceAward)
  // optional uint32 m_u32TowerID = 1;
  if (has_m_u32towerid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->m_u32towerid(), output);
  }

  // optional uint32 m_u16TowerType = 2;
  if (has_m_u16towertype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->m_u16towertype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGCAskTowerInstanceAward)
}

::google::protobuf::uint8* CGCAskTowerInstanceAward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGCAskTowerInstanceAward)
  // optional uint32 m_u32TowerID = 1;
  if (has_m_u32towerid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->m_u32towerid(), target);
  }

  // optional uint32 m_u16TowerType = 2;
  if (has_m_u16towertype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->m_u16towertype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGCAskTowerInstanceAward)
  return target;
}

int CGCAskTowerInstanceAward::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 m_u32TowerID = 1;
    if (has_m_u32towerid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_u32towerid());
    }

    // optional uint32 m_u16TowerType = 2;
    if (has_m_u16towertype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_u16towertype());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCAskTowerInstanceAward::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCAskTowerInstanceAward* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCAskTowerInstanceAward>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCAskTowerInstanceAward::MergeFrom(const CGCAskTowerInstanceAward& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_u32towerid()) {
      set_m_u32towerid(from.m_u32towerid());
    }
    if (from.has_m_u16towertype()) {
      set_m_u16towertype(from.m_u16towertype());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCAskTowerInstanceAward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCAskTowerInstanceAward::CopyFrom(const CGCAskTowerInstanceAward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCAskTowerInstanceAward::IsInitialized() const {

  return true;
}

void CGCAskTowerInstanceAward::Swap(CGCAskTowerInstanceAward* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCAskTowerInstanceAward::InternalSwap(CGCAskTowerInstanceAward* other) {
  std::swap(m_u32towerid_, other->m_u32towerid_);
  std::swap(m_u16towertype_, other->m_u16towertype_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCAskTowerInstanceAward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCAskTowerInstanceAward_descriptor_;
  metadata.reflection = CGCAskTowerInstanceAward_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCAskTowerInstanceAward

// optional uint32 m_u32TowerID = 1;
bool CGCAskTowerInstanceAward::has_m_u32towerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGCAskTowerInstanceAward::set_has_m_u32towerid() {
  _has_bits_[0] |= 0x00000001u;
}
void CGCAskTowerInstanceAward::clear_has_m_u32towerid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGCAskTowerInstanceAward::clear_m_u32towerid() {
  m_u32towerid_ = 0u;
  clear_has_m_u32towerid();
}
 ::google::protobuf::uint32 CGCAskTowerInstanceAward::m_u32towerid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCAskTowerInstanceAward.m_u32TowerID)
  return m_u32towerid_;
}
 void CGCAskTowerInstanceAward::set_m_u32towerid(::google::protobuf::uint32 value) {
  set_has_m_u32towerid();
  m_u32towerid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCAskTowerInstanceAward.m_u32TowerID)
}

// optional uint32 m_u16TowerType = 2;
bool CGCAskTowerInstanceAward::has_m_u16towertype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CGCAskTowerInstanceAward::set_has_m_u16towertype() {
  _has_bits_[0] |= 0x00000002u;
}
void CGCAskTowerInstanceAward::clear_has_m_u16towertype() {
  _has_bits_[0] &= ~0x00000002u;
}
void CGCAskTowerInstanceAward::clear_m_u16towertype() {
  m_u16towertype_ = 0u;
  clear_has_m_u16towertype();
}
 ::google::protobuf::uint32 CGCAskTowerInstanceAward::m_u16towertype() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCAskTowerInstanceAward.m_u16TowerType)
  return m_u16towertype_;
}
 void CGCAskTowerInstanceAward::set_m_u16towertype(::google::protobuf::uint32 value) {
  set_has_m_u16towertype();
  m_u16towertype_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCAskTowerInstanceAward.m_u16TowerType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCAskEMailList::CGCAskEMailList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGCAskEMailList)
}

void CGCAskEMailList::InitAsDefaultInstance() {
}

CGCAskEMailList::CGCAskEMailList(const CGCAskEMailList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGCAskEMailList)
}

void CGCAskEMailList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCAskEMailList::~CGCAskEMailList() {
  // @@protoc_insertion_point(destructor:NetPackage.CGCAskEMailList)
  SharedDtor();
}

void CGCAskEMailList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGCAskEMailList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCAskEMailList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCAskEMailList_descriptor_;
}

const CGCAskEMailList& CGCAskEMailList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGCAskEMailList* CGCAskEMailList::default_instance_ = NULL;

CGCAskEMailList* CGCAskEMailList::New(::google::protobuf::Arena* arena) const {
  CGCAskEMailList* n = new CGCAskEMailList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCAskEMailList::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCAskEMailList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGCAskEMailList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGCAskEMailList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGCAskEMailList)
  return false;
#undef DO_
}

void CGCAskEMailList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGCAskEMailList)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGCAskEMailList)
}

::google::protobuf::uint8* CGCAskEMailList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGCAskEMailList)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGCAskEMailList)
  return target;
}

int CGCAskEMailList::ByteSize() const {
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCAskEMailList::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCAskEMailList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCAskEMailList>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCAskEMailList::MergeFrom(const CGCAskEMailList& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCAskEMailList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCAskEMailList::CopyFrom(const CGCAskEMailList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCAskEMailList::IsInitialized() const {

  return true;
}

void CGCAskEMailList::Swap(CGCAskEMailList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCAskEMailList::InternalSwap(CGCAskEMailList* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCAskEMailList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCAskEMailList_descriptor_;
  metadata.reflection = CGCAskEMailList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCAskEMailList

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GCAskReadEMail::kMUn32EMailIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GCAskReadEMail::GCAskReadEMail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.GCAskReadEMail)
}

void GCAskReadEMail::InitAsDefaultInstance() {
}

GCAskReadEMail::GCAskReadEMail(const GCAskReadEMail& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.GCAskReadEMail)
}

void GCAskReadEMail::SharedCtor() {
  _cached_size_ = 0;
  m_un32emailid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GCAskReadEMail::~GCAskReadEMail() {
  // @@protoc_insertion_point(destructor:NetPackage.GCAskReadEMail)
  SharedDtor();
}

void GCAskReadEMail::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GCAskReadEMail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GCAskReadEMail::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GCAskReadEMail_descriptor_;
}

const GCAskReadEMail& GCAskReadEMail::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

GCAskReadEMail* GCAskReadEMail::default_instance_ = NULL;

GCAskReadEMail* GCAskReadEMail::New(::google::protobuf::Arena* arena) const {
  GCAskReadEMail* n = new GCAskReadEMail;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GCAskReadEMail::Clear() {
  m_un32emailid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GCAskReadEMail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.GCAskReadEMail)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 m_un32EMailID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32emailid_)));
          set_has_m_un32emailid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.GCAskReadEMail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.GCAskReadEMail)
  return false;
#undef DO_
}

void GCAskReadEMail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.GCAskReadEMail)
  // optional uint32 m_un32EMailID = 1;
  if (has_m_un32emailid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->m_un32emailid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.GCAskReadEMail)
}

::google::protobuf::uint8* GCAskReadEMail::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.GCAskReadEMail)
  // optional uint32 m_un32EMailID = 1;
  if (has_m_un32emailid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->m_un32emailid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.GCAskReadEMail)
  return target;
}

int GCAskReadEMail::ByteSize() const {
  int total_size = 0;

  // optional uint32 m_un32EMailID = 1;
  if (has_m_un32emailid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->m_un32emailid());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GCAskReadEMail::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GCAskReadEMail* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GCAskReadEMail>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GCAskReadEMail::MergeFrom(const GCAskReadEMail& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_un32emailid()) {
      set_m_un32emailid(from.m_un32emailid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GCAskReadEMail::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GCAskReadEMail::CopyFrom(const GCAskReadEMail& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GCAskReadEMail::IsInitialized() const {

  return true;
}

void GCAskReadEMail::Swap(GCAskReadEMail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GCAskReadEMail::InternalSwap(GCAskReadEMail* other) {
  std::swap(m_un32emailid_, other->m_un32emailid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GCAskReadEMail::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GCAskReadEMail_descriptor_;
  metadata.reflection = GCAskReadEMail_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GCAskReadEMail

// optional uint32 m_un32EMailID = 1;
bool GCAskReadEMail::has_m_un32emailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GCAskReadEMail::set_has_m_un32emailid() {
  _has_bits_[0] |= 0x00000001u;
}
void GCAskReadEMail::clear_has_m_un32emailid() {
  _has_bits_[0] &= ~0x00000001u;
}
void GCAskReadEMail::clear_m_un32emailid() {
  m_un32emailid_ = 0u;
  clear_has_m_un32emailid();
}
 ::google::protobuf::uint32 GCAskReadEMail::m_un32emailid() const {
  // @@protoc_insertion_point(field_get:NetPackage.GCAskReadEMail.m_un32EMailID)
  return m_un32emailid_;
}
 void GCAskReadEMail::set_m_un32emailid(::google::protobuf::uint32 value) {
  set_has_m_un32emailid();
  m_un32emailid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.GCAskReadEMail.m_un32EMailID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCAskGetEMailPrize::kMUn32EMailIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCAskGetEMailPrize::CGCAskGetEMailPrize()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGCAskGetEMailPrize)
}

void CGCAskGetEMailPrize::InitAsDefaultInstance() {
}

CGCAskGetEMailPrize::CGCAskGetEMailPrize(const CGCAskGetEMailPrize& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGCAskGetEMailPrize)
}

void CGCAskGetEMailPrize::SharedCtor() {
  _cached_size_ = 0;
  m_un32emailid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCAskGetEMailPrize::~CGCAskGetEMailPrize() {
  // @@protoc_insertion_point(destructor:NetPackage.CGCAskGetEMailPrize)
  SharedDtor();
}

void CGCAskGetEMailPrize::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGCAskGetEMailPrize::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCAskGetEMailPrize::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCAskGetEMailPrize_descriptor_;
}

const CGCAskGetEMailPrize& CGCAskGetEMailPrize::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGCAskGetEMailPrize* CGCAskGetEMailPrize::default_instance_ = NULL;

CGCAskGetEMailPrize* CGCAskGetEMailPrize::New(::google::protobuf::Arena* arena) const {
  CGCAskGetEMailPrize* n = new CGCAskGetEMailPrize;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCAskGetEMailPrize::Clear() {
  m_un32emailid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCAskGetEMailPrize::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGCAskGetEMailPrize)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 m_un32EMailID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32emailid_)));
          set_has_m_un32emailid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGCAskGetEMailPrize)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGCAskGetEMailPrize)
  return false;
#undef DO_
}

void CGCAskGetEMailPrize::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGCAskGetEMailPrize)
  // optional uint32 m_un32EMailID = 1;
  if (has_m_un32emailid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->m_un32emailid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGCAskGetEMailPrize)
}

::google::protobuf::uint8* CGCAskGetEMailPrize::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGCAskGetEMailPrize)
  // optional uint32 m_un32EMailID = 1;
  if (has_m_un32emailid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->m_un32emailid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGCAskGetEMailPrize)
  return target;
}

int CGCAskGetEMailPrize::ByteSize() const {
  int total_size = 0;

  // optional uint32 m_un32EMailID = 1;
  if (has_m_un32emailid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->m_un32emailid());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCAskGetEMailPrize::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCAskGetEMailPrize* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCAskGetEMailPrize>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCAskGetEMailPrize::MergeFrom(const CGCAskGetEMailPrize& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_un32emailid()) {
      set_m_un32emailid(from.m_un32emailid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCAskGetEMailPrize::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCAskGetEMailPrize::CopyFrom(const CGCAskGetEMailPrize& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCAskGetEMailPrize::IsInitialized() const {

  return true;
}

void CGCAskGetEMailPrize::Swap(CGCAskGetEMailPrize* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCAskGetEMailPrize::InternalSwap(CGCAskGetEMailPrize* other) {
  std::swap(m_un32emailid_, other->m_un32emailid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCAskGetEMailPrize::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCAskGetEMailPrize_descriptor_;
  metadata.reflection = CGCAskGetEMailPrize_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCAskGetEMailPrize

// optional uint32 m_un32EMailID = 1;
bool CGCAskGetEMailPrize::has_m_un32emailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGCAskGetEMailPrize::set_has_m_un32emailid() {
  _has_bits_[0] |= 0x00000001u;
}
void CGCAskGetEMailPrize::clear_has_m_un32emailid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGCAskGetEMailPrize::clear_m_un32emailid() {
  m_un32emailid_ = 0u;
  clear_has_m_un32emailid();
}
 ::google::protobuf::uint32 CGCAskGetEMailPrize::m_un32emailid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCAskGetEMailPrize.m_un32EMailID)
  return m_un32emailid_;
}
 void CGCAskGetEMailPrize::set_m_un32emailid(::google::protobuf::uint32 value) {
  set_has_m_un32emailid();
  m_un32emailid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCAskGetEMailPrize.m_un32EMailID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCAskRemoveEMail::kMUn32EMailIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCAskRemoveEMail::CGCAskRemoveEMail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGCAskRemoveEMail)
}

void CGCAskRemoveEMail::InitAsDefaultInstance() {
}

CGCAskRemoveEMail::CGCAskRemoveEMail(const CGCAskRemoveEMail& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGCAskRemoveEMail)
}

void CGCAskRemoveEMail::SharedCtor() {
  _cached_size_ = 0;
  m_un32emailid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCAskRemoveEMail::~CGCAskRemoveEMail() {
  // @@protoc_insertion_point(destructor:NetPackage.CGCAskRemoveEMail)
  SharedDtor();
}

void CGCAskRemoveEMail::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGCAskRemoveEMail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCAskRemoveEMail::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCAskRemoveEMail_descriptor_;
}

const CGCAskRemoveEMail& CGCAskRemoveEMail::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGCAskRemoveEMail* CGCAskRemoveEMail::default_instance_ = NULL;

CGCAskRemoveEMail* CGCAskRemoveEMail::New(::google::protobuf::Arena* arena) const {
  CGCAskRemoveEMail* n = new CGCAskRemoveEMail;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCAskRemoveEMail::Clear() {
  m_un32emailid_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCAskRemoveEMail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGCAskRemoveEMail)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 m_un32EMailID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32emailid_)));
          set_has_m_un32emailid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGCAskRemoveEMail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGCAskRemoveEMail)
  return false;
#undef DO_
}

void CGCAskRemoveEMail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGCAskRemoveEMail)
  // optional uint32 m_un32EMailID = 1;
  if (has_m_un32emailid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->m_un32emailid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGCAskRemoveEMail)
}

::google::protobuf::uint8* CGCAskRemoveEMail::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGCAskRemoveEMail)
  // optional uint32 m_un32EMailID = 1;
  if (has_m_un32emailid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->m_un32emailid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGCAskRemoveEMail)
  return target;
}

int CGCAskRemoveEMail::ByteSize() const {
  int total_size = 0;

  // optional uint32 m_un32EMailID = 1;
  if (has_m_un32emailid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->m_un32emailid());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCAskRemoveEMail::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCAskRemoveEMail* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCAskRemoveEMail>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCAskRemoveEMail::MergeFrom(const CGCAskRemoveEMail& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_un32emailid()) {
      set_m_un32emailid(from.m_un32emailid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCAskRemoveEMail::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCAskRemoveEMail::CopyFrom(const CGCAskRemoveEMail& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCAskRemoveEMail::IsInitialized() const {

  return true;
}

void CGCAskRemoveEMail::Swap(CGCAskRemoveEMail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCAskRemoveEMail::InternalSwap(CGCAskRemoveEMail* other) {
  std::swap(m_un32emailid_, other->m_un32emailid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCAskRemoveEMail::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCAskRemoveEMail_descriptor_;
  metadata.reflection = CGCAskRemoveEMail_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCAskRemoveEMail

// optional uint32 m_un32EMailID = 1;
bool CGCAskRemoveEMail::has_m_un32emailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGCAskRemoveEMail::set_has_m_un32emailid() {
  _has_bits_[0] |= 0x00000001u;
}
void CGCAskRemoveEMail::clear_has_m_un32emailid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGCAskRemoveEMail::clear_m_un32emailid() {
  m_un32emailid_ = 0u;
  clear_has_m_un32emailid();
}
 ::google::protobuf::uint32 CGCAskRemoveEMail::m_un32emailid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCAskRemoveEMail.m_un32EMailID)
  return m_un32emailid_;
}
 void CGCAskRemoveEMail::set_m_un32emailid(::google::protobuf::uint32 value) {
  set_has_m_un32emailid();
  m_un32emailid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCAskRemoveEMail.m_un32EMailID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGSNotifyRankList::kMN8RankCateFieldNumber;
const int CGSNotifyRankList::kMN32SelfRankFieldNumber;
const int CGSNotifyRankList::kMN32SelfRankValueFieldNumber;
const int CGSNotifyRankList::kMN32RankNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGSNotifyRankList::CGSNotifyRankList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGSNotifyRankList)
}

void CGSNotifyRankList::InitAsDefaultInstance() {
}

CGSNotifyRankList::CGSNotifyRankList(const CGSNotifyRankList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGSNotifyRankList)
}

void CGSNotifyRankList::SharedCtor() {
  _cached_size_ = 0;
  m_n8rankcate_ = 0;
  m_n32selfrank_ = 0;
  m_n32selfrankvalue_ = 0;
  m_n32ranknum_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGSNotifyRankList::~CGSNotifyRankList() {
  // @@protoc_insertion_point(destructor:NetPackage.CGSNotifyRankList)
  SharedDtor();
}

void CGSNotifyRankList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGSNotifyRankList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGSNotifyRankList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGSNotifyRankList_descriptor_;
}

const CGSNotifyRankList& CGSNotifyRankList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGSNotifyRankList* CGSNotifyRankList::default_instance_ = NULL;

CGSNotifyRankList* CGSNotifyRankList::New(::google::protobuf::Arena* arena) const {
  CGSNotifyRankList* n = new CGSNotifyRankList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGSNotifyRankList::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CGSNotifyRankList*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(m_n8rankcate_, m_n32ranknum_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGSNotifyRankList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGSNotifyRankList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_n8RankCate = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_n8rankcate_)));
          set_has_m_n8rankcate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_m_n32SelfRank;
        break;
      }

      // optional int32 m_n32SelfRank = 2;
      case 2: {
        if (tag == 16) {
         parse_m_n32SelfRank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_n32selfrank_)));
          set_has_m_n32selfrank();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_m_n32SelfRankValue;
        break;
      }

      // optional int32 m_n32SelfRankValue = 3;
      case 3: {
        if (tag == 24) {
         parse_m_n32SelfRankValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_n32selfrankvalue_)));
          set_has_m_n32selfrankvalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_m_n32RankNum;
        break;
      }

      // optional int32 m_n32RankNum = 4;
      case 4: {
        if (tag == 32) {
         parse_m_n32RankNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_n32ranknum_)));
          set_has_m_n32ranknum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGSNotifyRankList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGSNotifyRankList)
  return false;
#undef DO_
}

void CGSNotifyRankList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGSNotifyRankList)
  // optional int32 m_n8RankCate = 1;
  if (has_m_n8rankcate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_n8rankcate(), output);
  }

  // optional int32 m_n32SelfRank = 2;
  if (has_m_n32selfrank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->m_n32selfrank(), output);
  }

  // optional int32 m_n32SelfRankValue = 3;
  if (has_m_n32selfrankvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->m_n32selfrankvalue(), output);
  }

  // optional int32 m_n32RankNum = 4;
  if (has_m_n32ranknum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->m_n32ranknum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGSNotifyRankList)
}

::google::protobuf::uint8* CGSNotifyRankList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGSNotifyRankList)
  // optional int32 m_n8RankCate = 1;
  if (has_m_n8rankcate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_n8rankcate(), target);
  }

  // optional int32 m_n32SelfRank = 2;
  if (has_m_n32selfrank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->m_n32selfrank(), target);
  }

  // optional int32 m_n32SelfRankValue = 3;
  if (has_m_n32selfrankvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->m_n32selfrankvalue(), target);
  }

  // optional int32 m_n32RankNum = 4;
  if (has_m_n32ranknum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->m_n32ranknum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGSNotifyRankList)
  return target;
}

int CGSNotifyRankList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 15u) {
    // optional int32 m_n8RankCate = 1;
    if (has_m_n8rankcate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_n8rankcate());
    }

    // optional int32 m_n32SelfRank = 2;
    if (has_m_n32selfrank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_n32selfrank());
    }

    // optional int32 m_n32SelfRankValue = 3;
    if (has_m_n32selfrankvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_n32selfrankvalue());
    }

    // optional int32 m_n32RankNum = 4;
    if (has_m_n32ranknum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_n32ranknum());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGSNotifyRankList::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGSNotifyRankList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGSNotifyRankList>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGSNotifyRankList::MergeFrom(const CGSNotifyRankList& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_n8rankcate()) {
      set_m_n8rankcate(from.m_n8rankcate());
    }
    if (from.has_m_n32selfrank()) {
      set_m_n32selfrank(from.m_n32selfrank());
    }
    if (from.has_m_n32selfrankvalue()) {
      set_m_n32selfrankvalue(from.m_n32selfrankvalue());
    }
    if (from.has_m_n32ranknum()) {
      set_m_n32ranknum(from.m_n32ranknum());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGSNotifyRankList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGSNotifyRankList::CopyFrom(const CGSNotifyRankList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGSNotifyRankList::IsInitialized() const {

  return true;
}

void CGSNotifyRankList::Swap(CGSNotifyRankList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGSNotifyRankList::InternalSwap(CGSNotifyRankList* other) {
  std::swap(m_n8rankcate_, other->m_n8rankcate_);
  std::swap(m_n32selfrank_, other->m_n32selfrank_);
  std::swap(m_n32selfrankvalue_, other->m_n32selfrankvalue_);
  std::swap(m_n32ranknum_, other->m_n32ranknum_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGSNotifyRankList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGSNotifyRankList_descriptor_;
  metadata.reflection = CGSNotifyRankList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGSNotifyRankList

// optional int32 m_n8RankCate = 1;
bool CGSNotifyRankList::has_m_n8rankcate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGSNotifyRankList::set_has_m_n8rankcate() {
  _has_bits_[0] |= 0x00000001u;
}
void CGSNotifyRankList::clear_has_m_n8rankcate() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGSNotifyRankList::clear_m_n8rankcate() {
  m_n8rankcate_ = 0;
  clear_has_m_n8rankcate();
}
 ::google::protobuf::int32 CGSNotifyRankList::m_n8rankcate() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRankList.m_n8RankCate)
  return m_n8rankcate_;
}
 void CGSNotifyRankList::set_m_n8rankcate(::google::protobuf::int32 value) {
  set_has_m_n8rankcate();
  m_n8rankcate_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRankList.m_n8RankCate)
}

// optional int32 m_n32SelfRank = 2;
bool CGSNotifyRankList::has_m_n32selfrank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CGSNotifyRankList::set_has_m_n32selfrank() {
  _has_bits_[0] |= 0x00000002u;
}
void CGSNotifyRankList::clear_has_m_n32selfrank() {
  _has_bits_[0] &= ~0x00000002u;
}
void CGSNotifyRankList::clear_m_n32selfrank() {
  m_n32selfrank_ = 0;
  clear_has_m_n32selfrank();
}
 ::google::protobuf::int32 CGSNotifyRankList::m_n32selfrank() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRankList.m_n32SelfRank)
  return m_n32selfrank_;
}
 void CGSNotifyRankList::set_m_n32selfrank(::google::protobuf::int32 value) {
  set_has_m_n32selfrank();
  m_n32selfrank_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRankList.m_n32SelfRank)
}

// optional int32 m_n32SelfRankValue = 3;
bool CGSNotifyRankList::has_m_n32selfrankvalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CGSNotifyRankList::set_has_m_n32selfrankvalue() {
  _has_bits_[0] |= 0x00000004u;
}
void CGSNotifyRankList::clear_has_m_n32selfrankvalue() {
  _has_bits_[0] &= ~0x00000004u;
}
void CGSNotifyRankList::clear_m_n32selfrankvalue() {
  m_n32selfrankvalue_ = 0;
  clear_has_m_n32selfrankvalue();
}
 ::google::protobuf::int32 CGSNotifyRankList::m_n32selfrankvalue() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRankList.m_n32SelfRankValue)
  return m_n32selfrankvalue_;
}
 void CGSNotifyRankList::set_m_n32selfrankvalue(::google::protobuf::int32 value) {
  set_has_m_n32selfrankvalue();
  m_n32selfrankvalue_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRankList.m_n32SelfRankValue)
}

// optional int32 m_n32RankNum = 4;
bool CGSNotifyRankList::has_m_n32ranknum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CGSNotifyRankList::set_has_m_n32ranknum() {
  _has_bits_[0] |= 0x00000008u;
}
void CGSNotifyRankList::clear_has_m_n32ranknum() {
  _has_bits_[0] &= ~0x00000008u;
}
void CGSNotifyRankList::clear_m_n32ranknum() {
  m_n32ranknum_ = 0;
  clear_has_m_n32ranknum();
}
 ::google::protobuf::int32 CGSNotifyRankList::m_n32ranknum() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyRankList.m_n32RankNum)
  return m_n32ranknum_;
}
 void CGSNotifyRankList::set_m_n32ranknum(::google::protobuf::int32 value) {
  set_has_m_n32ranknum();
  m_n32ranknum_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyRankList.m_n32RankNum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGSNotifyEMailList::kMUn32EMailNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGSNotifyEMailList::CGSNotifyEMailList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGSNotifyEMailList)
}

void CGSNotifyEMailList::InitAsDefaultInstance() {
}

CGSNotifyEMailList::CGSNotifyEMailList(const CGSNotifyEMailList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGSNotifyEMailList)
}

void CGSNotifyEMailList::SharedCtor() {
  _cached_size_ = 0;
  m_un32emailnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGSNotifyEMailList::~CGSNotifyEMailList() {
  // @@protoc_insertion_point(destructor:NetPackage.CGSNotifyEMailList)
  SharedDtor();
}

void CGSNotifyEMailList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGSNotifyEMailList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGSNotifyEMailList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGSNotifyEMailList_descriptor_;
}

const CGSNotifyEMailList& CGSNotifyEMailList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGSNotifyEMailList* CGSNotifyEMailList::default_instance_ = NULL;

CGSNotifyEMailList* CGSNotifyEMailList::New(::google::protobuf::Arena* arena) const {
  CGSNotifyEMailList* n = new CGSNotifyEMailList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGSNotifyEMailList::Clear() {
  m_un32emailnum_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGSNotifyEMailList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGSNotifyEMailList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 m_un32EMailNum = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_un32emailnum_)));
          set_has_m_un32emailnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGSNotifyEMailList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGSNotifyEMailList)
  return false;
#undef DO_
}

void CGSNotifyEMailList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGSNotifyEMailList)
  // optional uint32 m_un32EMailNum = 1;
  if (has_m_un32emailnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->m_un32emailnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGSNotifyEMailList)
}

::google::protobuf::uint8* CGSNotifyEMailList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGSNotifyEMailList)
  // optional uint32 m_un32EMailNum = 1;
  if (has_m_un32emailnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->m_un32emailnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGSNotifyEMailList)
  return target;
}

int CGSNotifyEMailList::ByteSize() const {
  int total_size = 0;

  // optional uint32 m_un32EMailNum = 1;
  if (has_m_un32emailnum()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->m_un32emailnum());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGSNotifyEMailList::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGSNotifyEMailList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGSNotifyEMailList>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGSNotifyEMailList::MergeFrom(const CGSNotifyEMailList& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_un32emailnum()) {
      set_m_un32emailnum(from.m_un32emailnum());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGSNotifyEMailList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGSNotifyEMailList::CopyFrom(const CGSNotifyEMailList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGSNotifyEMailList::IsInitialized() const {

  return true;
}

void CGSNotifyEMailList::Swap(CGSNotifyEMailList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGSNotifyEMailList::InternalSwap(CGSNotifyEMailList* other) {
  std::swap(m_un32emailnum_, other->m_un32emailnum_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGSNotifyEMailList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGSNotifyEMailList_descriptor_;
  metadata.reflection = CGSNotifyEMailList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGSNotifyEMailList

// optional uint32 m_un32EMailNum = 1;
bool CGSNotifyEMailList::has_m_un32emailnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGSNotifyEMailList::set_has_m_un32emailnum() {
  _has_bits_[0] |= 0x00000001u;
}
void CGSNotifyEMailList::clear_has_m_un32emailnum() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGSNotifyEMailList::clear_m_un32emailnum() {
  m_un32emailnum_ = 0u;
  clear_has_m_un32emailnum();
}
 ::google::protobuf::uint32 CGSNotifyEMailList::m_un32emailnum() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGSNotifyEMailList.m_un32EMailNum)
  return m_un32emailnum_;
}
 void CGSNotifyEMailList::set_m_un32emailnum(::google::protobuf::uint32 value) {
  set_has_m_un32emailnum();
  m_un32emailnum_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGSNotifyEMailList.m_un32EMailNum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCSendCreateRole::kU32VocationIDFieldNumber;
const int CGCSendCreateRole::kByteGenderFieldNumber;
const int CGCSendCreateRole::kNickNameFieldNumber;
const int CGCSendCreateRole::kByteVerifyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCSendCreateRole::CGCSendCreateRole()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGCSendCreateRole)
}

void CGCSendCreateRole::InitAsDefaultInstance() {
}

CGCSendCreateRole::CGCSendCreateRole(const CGCSendCreateRole& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGCSendCreateRole)
}

void CGCSendCreateRole::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _u32vocationid_ = 0u;
  _bytegender_ = false;
  _nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _byteverify_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCSendCreateRole::~CGCSendCreateRole() {
  // @@protoc_insertion_point(destructor:NetPackage.CGCSendCreateRole)
  SharedDtor();
}

void CGCSendCreateRole::SharedDtor() {
  _nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CGCSendCreateRole::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCSendCreateRole::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCSendCreateRole_descriptor_;
}

const CGCSendCreateRole& CGCSendCreateRole::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGCSendCreateRole* CGCSendCreateRole::default_instance_ = NULL;

CGCSendCreateRole* CGCSendCreateRole::New(::google::protobuf::Arena* arena) const {
  CGCSendCreateRole* n = new CGCSendCreateRole;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCSendCreateRole::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CGCSendCreateRole*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15u) {
    ZR_(_u32vocationid_, _byteverify_);
    if (has__nickname()) {
      _nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCSendCreateRole::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGCSendCreateRole)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 _u32VocationID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_u32vocationid_)));
          set_has__u32vocationid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse__byteGender;
        break;
      }

      // optional bool _byteGender = 2;
      case 2: {
        if (tag == 16) {
         parse__byteGender:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &_bytegender_)));
          set_has__bytegender();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse__nickName;
        break;
      }

      // optional string _nickName = 3;
      case 3: {
        if (tag == 26) {
         parse__nickName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_nickname().data(), this->_nickname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NetPackage.CGCSendCreateRole._nickName");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse__byteVerify;
        break;
      }

      // optional bool _byteVerify = 4;
      case 4: {
        if (tag == 32) {
         parse__byteVerify:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &_byteverify_)));
          set_has__byteverify();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGCSendCreateRole)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGCSendCreateRole)
  return false;
#undef DO_
}

void CGCSendCreateRole::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGCSendCreateRole)
  // optional uint32 _u32VocationID = 1;
  if (has__u32vocationid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->_u32vocationid(), output);
  }

  // optional bool _byteGender = 2;
  if (has__bytegender()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->_bytegender(), output);
  }

  // optional string _nickName = 3;
  if (has__nickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_nickname().data(), this->_nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NetPackage.CGCSendCreateRole._nickName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->_nickname(), output);
  }

  // optional bool _byteVerify = 4;
  if (has__byteverify()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->_byteverify(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGCSendCreateRole)
}

::google::protobuf::uint8* CGCSendCreateRole::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGCSendCreateRole)
  // optional uint32 _u32VocationID = 1;
  if (has__u32vocationid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->_u32vocationid(), target);
  }

  // optional bool _byteGender = 2;
  if (has__bytegender()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->_bytegender(), target);
  }

  // optional string _nickName = 3;
  if (has__nickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_nickname().data(), this->_nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NetPackage.CGCSendCreateRole._nickName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->_nickname(), target);
  }

  // optional bool _byteVerify = 4;
  if (has__byteverify()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->_byteverify(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGCSendCreateRole)
  return target;
}

int CGCSendCreateRole::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 15u) {
    // optional uint32 _u32VocationID = 1;
    if (has__u32vocationid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_u32vocationid());
    }

    // optional bool _byteGender = 2;
    if (has__bytegender()) {
      total_size += 1 + 1;
    }

    // optional string _nickName = 3;
    if (has__nickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_nickname());
    }

    // optional bool _byteVerify = 4;
    if (has__byteverify()) {
      total_size += 1 + 1;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCSendCreateRole::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCSendCreateRole* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCSendCreateRole>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCSendCreateRole::MergeFrom(const CGCSendCreateRole& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has__u32vocationid()) {
      set__u32vocationid(from._u32vocationid());
    }
    if (from.has__bytegender()) {
      set__bytegender(from._bytegender());
    }
    if (from.has__nickname()) {
      set_has__nickname();
      _nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._nickname_);
    }
    if (from.has__byteverify()) {
      set__byteverify(from._byteverify());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCSendCreateRole::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCSendCreateRole::CopyFrom(const CGCSendCreateRole& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCSendCreateRole::IsInitialized() const {

  return true;
}

void CGCSendCreateRole::Swap(CGCSendCreateRole* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCSendCreateRole::InternalSwap(CGCSendCreateRole* other) {
  std::swap(_u32vocationid_, other->_u32vocationid_);
  std::swap(_bytegender_, other->_bytegender_);
  _nickname_.Swap(&other->_nickname_);
  std::swap(_byteverify_, other->_byteverify_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCSendCreateRole::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCSendCreateRole_descriptor_;
  metadata.reflection = CGCSendCreateRole_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCSendCreateRole

// optional uint32 _u32VocationID = 1;
bool CGCSendCreateRole::has__u32vocationid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGCSendCreateRole::set_has__u32vocationid() {
  _has_bits_[0] |= 0x00000001u;
}
void CGCSendCreateRole::clear_has__u32vocationid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGCSendCreateRole::clear__u32vocationid() {
  _u32vocationid_ = 0u;
  clear_has__u32vocationid();
}
 ::google::protobuf::uint32 CGCSendCreateRole::_u32vocationid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCSendCreateRole._u32VocationID)
  return _u32vocationid_;
}
 void CGCSendCreateRole::set__u32vocationid(::google::protobuf::uint32 value) {
  set_has__u32vocationid();
  _u32vocationid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCSendCreateRole._u32VocationID)
}

// optional bool _byteGender = 2;
bool CGCSendCreateRole::has__bytegender() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CGCSendCreateRole::set_has__bytegender() {
  _has_bits_[0] |= 0x00000002u;
}
void CGCSendCreateRole::clear_has__bytegender() {
  _has_bits_[0] &= ~0x00000002u;
}
void CGCSendCreateRole::clear__bytegender() {
  _bytegender_ = false;
  clear_has__bytegender();
}
 bool CGCSendCreateRole::_bytegender() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCSendCreateRole._byteGender)
  return _bytegender_;
}
 void CGCSendCreateRole::set__bytegender(bool value) {
  set_has__bytegender();
  _bytegender_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCSendCreateRole._byteGender)
}

// optional string _nickName = 3;
bool CGCSendCreateRole::has__nickname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CGCSendCreateRole::set_has__nickname() {
  _has_bits_[0] |= 0x00000004u;
}
void CGCSendCreateRole::clear_has__nickname() {
  _has_bits_[0] &= ~0x00000004u;
}
void CGCSendCreateRole::clear__nickname() {
  _nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__nickname();
}
 const ::std::string& CGCSendCreateRole::_nickname() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCSendCreateRole._nickName)
  return _nickname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CGCSendCreateRole::set__nickname(const ::std::string& value) {
  set_has__nickname();
  _nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetPackage.CGCSendCreateRole._nickName)
}
 void CGCSendCreateRole::set__nickname(const char* value) {
  set_has__nickname();
  _nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetPackage.CGCSendCreateRole._nickName)
}
 void CGCSendCreateRole::set__nickname(const char* value, size_t size) {
  set_has__nickname();
  _nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetPackage.CGCSendCreateRole._nickName)
}
 ::std::string* CGCSendCreateRole::mutable__nickname() {
  set_has__nickname();
  // @@protoc_insertion_point(field_mutable:NetPackage.CGCSendCreateRole._nickName)
  return _nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CGCSendCreateRole::release__nickname() {
  clear_has__nickname();
  return _nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CGCSendCreateRole::set_allocated__nickname(::std::string* _nickname) {
  if (_nickname != NULL) {
    set_has__nickname();
  } else {
    clear_has__nickname();
  }
  _nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _nickname);
  // @@protoc_insertion_point(field_set_allocated:NetPackage.CGCSendCreateRole._nickName)
}

// optional bool _byteVerify = 4;
bool CGCSendCreateRole::has__byteverify() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CGCSendCreateRole::set_has__byteverify() {
  _has_bits_[0] |= 0x00000008u;
}
void CGCSendCreateRole::clear_has__byteverify() {
  _has_bits_[0] &= ~0x00000008u;
}
void CGCSendCreateRole::clear__byteverify() {
  _byteverify_ = false;
  clear_has__byteverify();
}
 bool CGCSendCreateRole::_byteverify() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCSendCreateRole._byteVerify)
  return _byteverify_;
}
 void CGCSendCreateRole::set__byteverify(bool value) {
  set_has__byteverify();
  _byteverify_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCSendCreateRole._byteVerify)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCSendCreateRoleRet::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCSendCreateRoleRet::CGCSendCreateRoleRet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGCSendCreateRoleRet)
}

void CGCSendCreateRoleRet::InitAsDefaultInstance() {
}

CGCSendCreateRoleRet::CGCSendCreateRoleRet(const CGCSendCreateRoleRet& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGCSendCreateRoleRet)
}

void CGCSendCreateRoleRet::SharedCtor() {
  _cached_size_ = 0;
  _result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCSendCreateRoleRet::~CGCSendCreateRoleRet() {
  // @@protoc_insertion_point(destructor:NetPackage.CGCSendCreateRoleRet)
  SharedDtor();
}

void CGCSendCreateRoleRet::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGCSendCreateRoleRet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCSendCreateRoleRet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCSendCreateRoleRet_descriptor_;
}

const CGCSendCreateRoleRet& CGCSendCreateRoleRet::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGCSendCreateRoleRet* CGCSendCreateRoleRet::default_instance_ = NULL;

CGCSendCreateRoleRet* CGCSendCreateRoleRet::New(::google::protobuf::Arena* arena) const {
  CGCSendCreateRoleRet* n = new CGCSendCreateRoleRet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCSendCreateRoleRet::Clear() {
  _result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCSendCreateRoleRet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGCSendCreateRoleRet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 _result = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_result_)));
          set_has__result();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGCSendCreateRoleRet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGCSendCreateRoleRet)
  return false;
#undef DO_
}

void CGCSendCreateRoleRet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGCSendCreateRoleRet)
  // optional int32 _result = 1;
  if (has__result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->_result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGCSendCreateRoleRet)
}

::google::protobuf::uint8* CGCSendCreateRoleRet::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGCSendCreateRoleRet)
  // optional int32 _result = 1;
  if (has__result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->_result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGCSendCreateRoleRet)
  return target;
}

int CGCSendCreateRoleRet::ByteSize() const {
  int total_size = 0;

  // optional int32 _result = 1;
  if (has__result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->_result());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCSendCreateRoleRet::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCSendCreateRoleRet* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCSendCreateRoleRet>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCSendCreateRoleRet::MergeFrom(const CGCSendCreateRoleRet& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has__result()) {
      set__result(from._result());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCSendCreateRoleRet::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCSendCreateRoleRet::CopyFrom(const CGCSendCreateRoleRet& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCSendCreateRoleRet::IsInitialized() const {

  return true;
}

void CGCSendCreateRoleRet::Swap(CGCSendCreateRoleRet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCSendCreateRoleRet::InternalSwap(CGCSendCreateRoleRet* other) {
  std::swap(_result_, other->_result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCSendCreateRoleRet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCSendCreateRoleRet_descriptor_;
  metadata.reflection = CGCSendCreateRoleRet_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCSendCreateRoleRet

// optional int32 _result = 1;
bool CGCSendCreateRoleRet::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGCSendCreateRoleRet::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
void CGCSendCreateRoleRet::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGCSendCreateRoleRet::clear__result() {
  _result_ = 0;
  clear_has__result();
}
 ::google::protobuf::int32 CGCSendCreateRoleRet::_result() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCSendCreateRoleRet._result)
  return _result_;
}
 void CGCSendCreateRoleRet::set__result(::google::protobuf::int32 value) {
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCSendCreateRoleRet._result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCAskRankList::kMN8RankCateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCAskRankList::CGCAskRankList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGCAskRankList)
}

void CGCAskRankList::InitAsDefaultInstance() {
}

CGCAskRankList::CGCAskRankList(const CGCAskRankList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGCAskRankList)
}

void CGCAskRankList::SharedCtor() {
  _cached_size_ = 0;
  m_n8rankcate_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCAskRankList::~CGCAskRankList() {
  // @@protoc_insertion_point(destructor:NetPackage.CGCAskRankList)
  SharedDtor();
}

void CGCAskRankList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGCAskRankList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCAskRankList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCAskRankList_descriptor_;
}

const CGCAskRankList& CGCAskRankList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGCAskRankList* CGCAskRankList::default_instance_ = NULL;

CGCAskRankList* CGCAskRankList::New(::google::protobuf::Arena* arena) const {
  CGCAskRankList* n = new CGCAskRankList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCAskRankList::Clear() {
  m_n8rankcate_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCAskRankList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGCAskRankList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 m_n8RankCate = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_n8rankcate_)));
          set_has_m_n8rankcate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGCAskRankList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGCAskRankList)
  return false;
#undef DO_
}

void CGCAskRankList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGCAskRankList)
  // optional uint32 m_n8RankCate = 1;
  if (has_m_n8rankcate()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->m_n8rankcate(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGCAskRankList)
}

::google::protobuf::uint8* CGCAskRankList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGCAskRankList)
  // optional uint32 m_n8RankCate = 1;
  if (has_m_n8rankcate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->m_n8rankcate(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGCAskRankList)
  return target;
}

int CGCAskRankList::ByteSize() const {
  int total_size = 0;

  // optional uint32 m_n8RankCate = 1;
  if (has_m_n8rankcate()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->m_n8rankcate());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCAskRankList::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCAskRankList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCAskRankList>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCAskRankList::MergeFrom(const CGCAskRankList& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_n8rankcate()) {
      set_m_n8rankcate(from.m_n8rankcate());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCAskRankList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCAskRankList::CopyFrom(const CGCAskRankList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCAskRankList::IsInitialized() const {

  return true;
}

void CGCAskRankList::Swap(CGCAskRankList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCAskRankList::InternalSwap(CGCAskRankList* other) {
  std::swap(m_n8rankcate_, other->m_n8rankcate_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCAskRankList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCAskRankList_descriptor_;
  metadata.reflection = CGCAskRankList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCAskRankList

// optional uint32 m_n8RankCate = 1;
bool CGCAskRankList::has_m_n8rankcate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGCAskRankList::set_has_m_n8rankcate() {
  _has_bits_[0] |= 0x00000001u;
}
void CGCAskRankList::clear_has_m_n8rankcate() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGCAskRankList::clear_m_n8rankcate() {
  m_n8rankcate_ = 0u;
  clear_has_m_n8rankcate();
}
 ::google::protobuf::uint32 CGCAskRankList::m_n8rankcate() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCAskRankList.m_n8RankCate)
  return m_n8rankcate_;
}
 void CGCAskRankList::set_m_n8rankcate(::google::protobuf::uint32 value) {
  set_has_m_n8rankcate();
  m_n8rankcate_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCAskRankList.m_n8RankCate)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCAsChargeIOS::kMBIsDebugFieldNumber;
const int CGCAsChargeIOS::kMStrLenFieldNumber;
const int CGCAsChargeIOS::kMSzAppleReceiptFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCAsChargeIOS::CGCAsChargeIOS()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGCAsChargeIOS)
}

void CGCAsChargeIOS::InitAsDefaultInstance() {
}

CGCAsChargeIOS::CGCAsChargeIOS(const CGCAsChargeIOS& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGCAsChargeIOS)
}

void CGCAsChargeIOS::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  m_bisdebug_ = false;
  m_strlen_ = 0u;
  m_szapplereceipt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCAsChargeIOS::~CGCAsChargeIOS() {
  // @@protoc_insertion_point(destructor:NetPackage.CGCAsChargeIOS)
  SharedDtor();
}

void CGCAsChargeIOS::SharedDtor() {
  m_szapplereceipt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CGCAsChargeIOS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCAsChargeIOS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCAsChargeIOS_descriptor_;
}

const CGCAsChargeIOS& CGCAsChargeIOS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGCAsChargeIOS* CGCAsChargeIOS::default_instance_ = NULL;

CGCAsChargeIOS* CGCAsChargeIOS::New(::google::protobuf::Arena* arena) const {
  CGCAsChargeIOS* n = new CGCAsChargeIOS;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCAsChargeIOS::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CGCAsChargeIOS*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(m_bisdebug_, m_strlen_);
    if (has_m_szapplereceipt()) {
      m_szapplereceipt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCAsChargeIOS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGCAsChargeIOS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool m_bIsDebug = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &m_bisdebug_)));
          set_has_m_bisdebug();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_m_strLen;
        break;
      }

      // optional uint32 m_strLen = 2;
      case 2: {
        if (tag == 16) {
         parse_m_strLen:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_strlen_)));
          set_has_m_strlen();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_m_szAppleReceipt;
        break;
      }

      // optional string m_szAppleReceipt = 3;
      case 3: {
        if (tag == 26) {
         parse_m_szAppleReceipt:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_szapplereceipt()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->m_szapplereceipt().data(), this->m_szapplereceipt().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NetPackage.CGCAsChargeIOS.m_szAppleReceipt");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGCAsChargeIOS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGCAsChargeIOS)
  return false;
#undef DO_
}

void CGCAsChargeIOS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGCAsChargeIOS)
  // optional bool m_bIsDebug = 1;
  if (has_m_bisdebug()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->m_bisdebug(), output);
  }

  // optional uint32 m_strLen = 2;
  if (has_m_strlen()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->m_strlen(), output);
  }

  // optional string m_szAppleReceipt = 3;
  if (has_m_szapplereceipt()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->m_szapplereceipt().data(), this->m_szapplereceipt().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NetPackage.CGCAsChargeIOS.m_szAppleReceipt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->m_szapplereceipt(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGCAsChargeIOS)
}

::google::protobuf::uint8* CGCAsChargeIOS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGCAsChargeIOS)
  // optional bool m_bIsDebug = 1;
  if (has_m_bisdebug()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->m_bisdebug(), target);
  }

  // optional uint32 m_strLen = 2;
  if (has_m_strlen()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->m_strlen(), target);
  }

  // optional string m_szAppleReceipt = 3;
  if (has_m_szapplereceipt()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->m_szapplereceipt().data(), this->m_szapplereceipt().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NetPackage.CGCAsChargeIOS.m_szAppleReceipt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->m_szapplereceipt(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGCAsChargeIOS)
  return target;
}

int CGCAsChargeIOS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional bool m_bIsDebug = 1;
    if (has_m_bisdebug()) {
      total_size += 1 + 1;
    }

    // optional uint32 m_strLen = 2;
    if (has_m_strlen()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_strlen());
    }

    // optional string m_szAppleReceipt = 3;
    if (has_m_szapplereceipt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_szapplereceipt());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCAsChargeIOS::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCAsChargeIOS* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCAsChargeIOS>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCAsChargeIOS::MergeFrom(const CGCAsChargeIOS& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_bisdebug()) {
      set_m_bisdebug(from.m_bisdebug());
    }
    if (from.has_m_strlen()) {
      set_m_strlen(from.m_strlen());
    }
    if (from.has_m_szapplereceipt()) {
      set_has_m_szapplereceipt();
      m_szapplereceipt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.m_szapplereceipt_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCAsChargeIOS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCAsChargeIOS::CopyFrom(const CGCAsChargeIOS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCAsChargeIOS::IsInitialized() const {

  return true;
}

void CGCAsChargeIOS::Swap(CGCAsChargeIOS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCAsChargeIOS::InternalSwap(CGCAsChargeIOS* other) {
  std::swap(m_bisdebug_, other->m_bisdebug_);
  std::swap(m_strlen_, other->m_strlen_);
  m_szapplereceipt_.Swap(&other->m_szapplereceipt_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCAsChargeIOS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCAsChargeIOS_descriptor_;
  metadata.reflection = CGCAsChargeIOS_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCAsChargeIOS

// optional bool m_bIsDebug = 1;
bool CGCAsChargeIOS::has_m_bisdebug() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGCAsChargeIOS::set_has_m_bisdebug() {
  _has_bits_[0] |= 0x00000001u;
}
void CGCAsChargeIOS::clear_has_m_bisdebug() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGCAsChargeIOS::clear_m_bisdebug() {
  m_bisdebug_ = false;
  clear_has_m_bisdebug();
}
 bool CGCAsChargeIOS::m_bisdebug() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCAsChargeIOS.m_bIsDebug)
  return m_bisdebug_;
}
 void CGCAsChargeIOS::set_m_bisdebug(bool value) {
  set_has_m_bisdebug();
  m_bisdebug_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCAsChargeIOS.m_bIsDebug)
}

// optional uint32 m_strLen = 2;
bool CGCAsChargeIOS::has_m_strlen() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CGCAsChargeIOS::set_has_m_strlen() {
  _has_bits_[0] |= 0x00000002u;
}
void CGCAsChargeIOS::clear_has_m_strlen() {
  _has_bits_[0] &= ~0x00000002u;
}
void CGCAsChargeIOS::clear_m_strlen() {
  m_strlen_ = 0u;
  clear_has_m_strlen();
}
 ::google::protobuf::uint32 CGCAsChargeIOS::m_strlen() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCAsChargeIOS.m_strLen)
  return m_strlen_;
}
 void CGCAsChargeIOS::set_m_strlen(::google::protobuf::uint32 value) {
  set_has_m_strlen();
  m_strlen_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCAsChargeIOS.m_strLen)
}

// optional string m_szAppleReceipt = 3;
bool CGCAsChargeIOS::has_m_szapplereceipt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CGCAsChargeIOS::set_has_m_szapplereceipt() {
  _has_bits_[0] |= 0x00000004u;
}
void CGCAsChargeIOS::clear_has_m_szapplereceipt() {
  _has_bits_[0] &= ~0x00000004u;
}
void CGCAsChargeIOS::clear_m_szapplereceipt() {
  m_szapplereceipt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_m_szapplereceipt();
}
 const ::std::string& CGCAsChargeIOS::m_szapplereceipt() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCAsChargeIOS.m_szAppleReceipt)
  return m_szapplereceipt_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CGCAsChargeIOS::set_m_szapplereceipt(const ::std::string& value) {
  set_has_m_szapplereceipt();
  m_szapplereceipt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetPackage.CGCAsChargeIOS.m_szAppleReceipt)
}
 void CGCAsChargeIOS::set_m_szapplereceipt(const char* value) {
  set_has_m_szapplereceipt();
  m_szapplereceipt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetPackage.CGCAsChargeIOS.m_szAppleReceipt)
}
 void CGCAsChargeIOS::set_m_szapplereceipt(const char* value, size_t size) {
  set_has_m_szapplereceipt();
  m_szapplereceipt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetPackage.CGCAsChargeIOS.m_szAppleReceipt)
}
 ::std::string* CGCAsChargeIOS::mutable_m_szapplereceipt() {
  set_has_m_szapplereceipt();
  // @@protoc_insertion_point(field_mutable:NetPackage.CGCAsChargeIOS.m_szAppleReceipt)
  return m_szapplereceipt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CGCAsChargeIOS::release_m_szapplereceipt() {
  clear_has_m_szapplereceipt();
  return m_szapplereceipt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CGCAsChargeIOS::set_allocated_m_szapplereceipt(::std::string* m_szapplereceipt) {
  if (m_szapplereceipt != NULL) {
    set_has_m_szapplereceipt();
  } else {
    clear_has_m_szapplereceipt();
  }
  m_szapplereceipt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), m_szapplereceipt);
  // @@protoc_insertion_point(field_set_allocated:NetPackage.CGCAsChargeIOS.m_szAppleReceipt)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCNotifyChargeIOS::kMNResultFieldNumber;
const int CGCNotifyChargeIOS::kMStrLenFieldNumber;
const int CGCNotifyChargeIOS::kMSzAppleReceiptFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCNotifyChargeIOS::CGCNotifyChargeIOS()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGCNotifyChargeIOS)
}

void CGCNotifyChargeIOS::InitAsDefaultInstance() {
}

CGCNotifyChargeIOS::CGCNotifyChargeIOS(const CGCNotifyChargeIOS& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGCNotifyChargeIOS)
}

void CGCNotifyChargeIOS::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  m_nresult_ = 0;
  m_strlen_ = 0u;
  m_szapplereceipt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCNotifyChargeIOS::~CGCNotifyChargeIOS() {
  // @@protoc_insertion_point(destructor:NetPackage.CGCNotifyChargeIOS)
  SharedDtor();
}

void CGCNotifyChargeIOS::SharedDtor() {
  m_szapplereceipt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CGCNotifyChargeIOS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCNotifyChargeIOS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCNotifyChargeIOS_descriptor_;
}

const CGCNotifyChargeIOS& CGCNotifyChargeIOS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGCNotifyChargeIOS* CGCNotifyChargeIOS::default_instance_ = NULL;

CGCNotifyChargeIOS* CGCNotifyChargeIOS::New(::google::protobuf::Arena* arena) const {
  CGCNotifyChargeIOS* n = new CGCNotifyChargeIOS;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCNotifyChargeIOS::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CGCNotifyChargeIOS*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(m_nresult_, m_strlen_);
    if (has_m_szapplereceipt()) {
      m_szapplereceipt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCNotifyChargeIOS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGCNotifyChargeIOS)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 m_nResult = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &m_nresult_)));
          set_has_m_nresult();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_m_strLen;
        break;
      }

      // optional uint32 m_strLen = 2;
      case 2: {
        if (tag == 16) {
         parse_m_strLen:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &m_strlen_)));
          set_has_m_strlen();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_m_szAppleReceipt;
        break;
      }

      // optional string m_szAppleReceipt = 3;
      case 3: {
        if (tag == 26) {
         parse_m_szAppleReceipt:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_m_szapplereceipt()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->m_szapplereceipt().data(), this->m_szapplereceipt().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NetPackage.CGCNotifyChargeIOS.m_szAppleReceipt");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGCNotifyChargeIOS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGCNotifyChargeIOS)
  return false;
#undef DO_
}

void CGCNotifyChargeIOS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGCNotifyChargeIOS)
  // optional int32 m_nResult = 1;
  if (has_m_nresult()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->m_nresult(), output);
  }

  // optional uint32 m_strLen = 2;
  if (has_m_strlen()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->m_strlen(), output);
  }

  // optional string m_szAppleReceipt = 3;
  if (has_m_szapplereceipt()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->m_szapplereceipt().data(), this->m_szapplereceipt().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NetPackage.CGCNotifyChargeIOS.m_szAppleReceipt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->m_szapplereceipt(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGCNotifyChargeIOS)
}

::google::protobuf::uint8* CGCNotifyChargeIOS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGCNotifyChargeIOS)
  // optional int32 m_nResult = 1;
  if (has_m_nresult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->m_nresult(), target);
  }

  // optional uint32 m_strLen = 2;
  if (has_m_strlen()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->m_strlen(), target);
  }

  // optional string m_szAppleReceipt = 3;
  if (has_m_szapplereceipt()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->m_szapplereceipt().data(), this->m_szapplereceipt().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NetPackage.CGCNotifyChargeIOS.m_szAppleReceipt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->m_szapplereceipt(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGCNotifyChargeIOS)
  return target;
}

int CGCNotifyChargeIOS::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 m_nResult = 1;
    if (has_m_nresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->m_nresult());
    }

    // optional uint32 m_strLen = 2;
    if (has_m_strlen()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->m_strlen());
    }

    // optional string m_szAppleReceipt = 3;
    if (has_m_szapplereceipt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->m_szapplereceipt());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCNotifyChargeIOS::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCNotifyChargeIOS* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCNotifyChargeIOS>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCNotifyChargeIOS::MergeFrom(const CGCNotifyChargeIOS& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_m_nresult()) {
      set_m_nresult(from.m_nresult());
    }
    if (from.has_m_strlen()) {
      set_m_strlen(from.m_strlen());
    }
    if (from.has_m_szapplereceipt()) {
      set_has_m_szapplereceipt();
      m_szapplereceipt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.m_szapplereceipt_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCNotifyChargeIOS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCNotifyChargeIOS::CopyFrom(const CGCNotifyChargeIOS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCNotifyChargeIOS::IsInitialized() const {

  return true;
}

void CGCNotifyChargeIOS::Swap(CGCNotifyChargeIOS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCNotifyChargeIOS::InternalSwap(CGCNotifyChargeIOS* other) {
  std::swap(m_nresult_, other->m_nresult_);
  std::swap(m_strlen_, other->m_strlen_);
  m_szapplereceipt_.Swap(&other->m_szapplereceipt_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCNotifyChargeIOS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCNotifyChargeIOS_descriptor_;
  metadata.reflection = CGCNotifyChargeIOS_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCNotifyChargeIOS

// optional int32 m_nResult = 1;
bool CGCNotifyChargeIOS::has_m_nresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGCNotifyChargeIOS::set_has_m_nresult() {
  _has_bits_[0] |= 0x00000001u;
}
void CGCNotifyChargeIOS::clear_has_m_nresult() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGCNotifyChargeIOS::clear_m_nresult() {
  m_nresult_ = 0;
  clear_has_m_nresult();
}
 ::google::protobuf::int32 CGCNotifyChargeIOS::m_nresult() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCNotifyChargeIOS.m_nResult)
  return m_nresult_;
}
 void CGCNotifyChargeIOS::set_m_nresult(::google::protobuf::int32 value) {
  set_has_m_nresult();
  m_nresult_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCNotifyChargeIOS.m_nResult)
}

// optional uint32 m_strLen = 2;
bool CGCNotifyChargeIOS::has_m_strlen() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CGCNotifyChargeIOS::set_has_m_strlen() {
  _has_bits_[0] |= 0x00000002u;
}
void CGCNotifyChargeIOS::clear_has_m_strlen() {
  _has_bits_[0] &= ~0x00000002u;
}
void CGCNotifyChargeIOS::clear_m_strlen() {
  m_strlen_ = 0u;
  clear_has_m_strlen();
}
 ::google::protobuf::uint32 CGCNotifyChargeIOS::m_strlen() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCNotifyChargeIOS.m_strLen)
  return m_strlen_;
}
 void CGCNotifyChargeIOS::set_m_strlen(::google::protobuf::uint32 value) {
  set_has_m_strlen();
  m_strlen_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCNotifyChargeIOS.m_strLen)
}

// optional string m_szAppleReceipt = 3;
bool CGCNotifyChargeIOS::has_m_szapplereceipt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CGCNotifyChargeIOS::set_has_m_szapplereceipt() {
  _has_bits_[0] |= 0x00000004u;
}
void CGCNotifyChargeIOS::clear_has_m_szapplereceipt() {
  _has_bits_[0] &= ~0x00000004u;
}
void CGCNotifyChargeIOS::clear_m_szapplereceipt() {
  m_szapplereceipt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_m_szapplereceipt();
}
 const ::std::string& CGCNotifyChargeIOS::m_szapplereceipt() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCNotifyChargeIOS.m_szAppleReceipt)
  return m_szapplereceipt_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CGCNotifyChargeIOS::set_m_szapplereceipt(const ::std::string& value) {
  set_has_m_szapplereceipt();
  m_szapplereceipt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetPackage.CGCNotifyChargeIOS.m_szAppleReceipt)
}
 void CGCNotifyChargeIOS::set_m_szapplereceipt(const char* value) {
  set_has_m_szapplereceipt();
  m_szapplereceipt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetPackage.CGCNotifyChargeIOS.m_szAppleReceipt)
}
 void CGCNotifyChargeIOS::set_m_szapplereceipt(const char* value, size_t size) {
  set_has_m_szapplereceipt();
  m_szapplereceipt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetPackage.CGCNotifyChargeIOS.m_szAppleReceipt)
}
 ::std::string* CGCNotifyChargeIOS::mutable_m_szapplereceipt() {
  set_has_m_szapplereceipt();
  // @@protoc_insertion_point(field_mutable:NetPackage.CGCNotifyChargeIOS.m_szAppleReceipt)
  return m_szapplereceipt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CGCNotifyChargeIOS::release_m_szapplereceipt() {
  clear_has_m_szapplereceipt();
  return m_szapplereceipt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CGCNotifyChargeIOS::set_allocated_m_szapplereceipt(::std::string* m_szapplereceipt) {
  if (m_szapplereceipt != NULL) {
    set_has_m_szapplereceipt();
  } else {
    clear_has_m_szapplereceipt();
  }
  m_szapplereceipt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), m_szapplereceipt);
  // @@protoc_insertion_point(field_set_allocated:NetPackage.CGCNotifyChargeIOS.m_szAppleReceipt)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCReportProcuce::kBookIDFieldNumber;
const int CGCReportProcuce::kBUseDiamondFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCReportProcuce::CGCReportProcuce()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGCReportProcuce)
}

void CGCReportProcuce::InitAsDefaultInstance() {
}

CGCReportProcuce::CGCReportProcuce(const CGCReportProcuce& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGCReportProcuce)
}

void CGCReportProcuce::SharedCtor() {
  _cached_size_ = 0;
  _bookid_ = 0u;
  _busediamond_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCReportProcuce::~CGCReportProcuce() {
  // @@protoc_insertion_point(destructor:NetPackage.CGCReportProcuce)
  SharedDtor();
}

void CGCReportProcuce::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGCReportProcuce::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCReportProcuce::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCReportProcuce_descriptor_;
}

const CGCReportProcuce& CGCReportProcuce::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGCReportProcuce* CGCReportProcuce::default_instance_ = NULL;

CGCReportProcuce* CGCReportProcuce::New(::google::protobuf::Arena* arena) const {
  CGCReportProcuce* n = new CGCReportProcuce;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCReportProcuce::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CGCReportProcuce*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(_bookid_, _busediamond_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCReportProcuce::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGCReportProcuce)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 _bookID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_bookid_)));
          set_has__bookid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse__bUseDiamond;
        break;
      }

      // optional bool _bUseDiamond = 2;
      case 2: {
        if (tag == 16) {
         parse__bUseDiamond:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &_busediamond_)));
          set_has__busediamond();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGCReportProcuce)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGCReportProcuce)
  return false;
#undef DO_
}

void CGCReportProcuce::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGCReportProcuce)
  // optional uint32 _bookID = 1;
  if (has__bookid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->_bookid(), output);
  }

  // optional bool _bUseDiamond = 2;
  if (has__busediamond()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->_busediamond(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGCReportProcuce)
}

::google::protobuf::uint8* CGCReportProcuce::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGCReportProcuce)
  // optional uint32 _bookID = 1;
  if (has__bookid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->_bookid(), target);
  }

  // optional bool _bUseDiamond = 2;
  if (has__busediamond()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->_busediamond(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGCReportProcuce)
  return target;
}

int CGCReportProcuce::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 _bookID = 1;
    if (has__bookid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_bookid());
    }

    // optional bool _bUseDiamond = 2;
    if (has__busediamond()) {
      total_size += 1 + 1;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCReportProcuce::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCReportProcuce* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCReportProcuce>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCReportProcuce::MergeFrom(const CGCReportProcuce& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has__bookid()) {
      set__bookid(from._bookid());
    }
    if (from.has__busediamond()) {
      set__busediamond(from._busediamond());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCReportProcuce::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCReportProcuce::CopyFrom(const CGCReportProcuce& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCReportProcuce::IsInitialized() const {

  return true;
}

void CGCReportProcuce::Swap(CGCReportProcuce* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCReportProcuce::InternalSwap(CGCReportProcuce* other) {
  std::swap(_bookid_, other->_bookid_);
  std::swap(_busediamond_, other->_busediamond_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCReportProcuce::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCReportProcuce_descriptor_;
  metadata.reflection = CGCReportProcuce_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCReportProcuce

// optional uint32 _bookID = 1;
bool CGCReportProcuce::has__bookid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGCReportProcuce::set_has__bookid() {
  _has_bits_[0] |= 0x00000001u;
}
void CGCReportProcuce::clear_has__bookid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGCReportProcuce::clear__bookid() {
  _bookid_ = 0u;
  clear_has__bookid();
}
 ::google::protobuf::uint32 CGCReportProcuce::_bookid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCReportProcuce._bookID)
  return _bookid_;
}
 void CGCReportProcuce::set__bookid(::google::protobuf::uint32 value) {
  set_has__bookid();
  _bookid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCReportProcuce._bookID)
}

// optional bool _bUseDiamond = 2;
bool CGCReportProcuce::has__busediamond() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CGCReportProcuce::set_has__busediamond() {
  _has_bits_[0] |= 0x00000002u;
}
void CGCReportProcuce::clear_has__busediamond() {
  _has_bits_[0] &= ~0x00000002u;
}
void CGCReportProcuce::clear__busediamond() {
  _busediamond_ = false;
  clear_has__busediamond();
}
 bool CGCReportProcuce::_busediamond() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCReportProcuce._bUseDiamond)
  return _busediamond_;
}
 void CGCReportProcuce::set__busediamond(bool value) {
  set_has__busediamond();
  _busediamond_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCReportProcuce._bUseDiamond)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCAskChapterAward::kChapterNumFieldNumber;
const int CGCAskChapterAward::kHardChapterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCAskChapterAward::CGCAskChapterAward()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGCAskChapterAward)
}

void CGCAskChapterAward::InitAsDefaultInstance() {
}

CGCAskChapterAward::CGCAskChapterAward(const CGCAskChapterAward& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGCAskChapterAward)
}

void CGCAskChapterAward::SharedCtor() {
  _cached_size_ = 0;
  _chapternum_ = 0;
  _hardchapter_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCAskChapterAward::~CGCAskChapterAward() {
  // @@protoc_insertion_point(destructor:NetPackage.CGCAskChapterAward)
  SharedDtor();
}

void CGCAskChapterAward::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGCAskChapterAward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCAskChapterAward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCAskChapterAward_descriptor_;
}

const CGCAskChapterAward& CGCAskChapterAward::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGCAskChapterAward* CGCAskChapterAward::default_instance_ = NULL;

CGCAskChapterAward* CGCAskChapterAward::New(::google::protobuf::Arena* arena) const {
  CGCAskChapterAward* n = new CGCAskChapterAward;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCAskChapterAward::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CGCAskChapterAward*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(_chapternum_, _hardchapter_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCAskChapterAward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGCAskChapterAward)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 _chapterNum = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_chapternum_)));
          set_has__chapternum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse__hardChapter;
        break;
      }

      // optional bool _hardChapter = 2;
      case 2: {
        if (tag == 16) {
         parse__hardChapter:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &_hardchapter_)));
          set_has__hardchapter();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGCAskChapterAward)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGCAskChapterAward)
  return false;
#undef DO_
}

void CGCAskChapterAward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGCAskChapterAward)
  // optional int32 _chapterNum = 1;
  if (has__chapternum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->_chapternum(), output);
  }

  // optional bool _hardChapter = 2;
  if (has__hardchapter()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->_hardchapter(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGCAskChapterAward)
}

::google::protobuf::uint8* CGCAskChapterAward::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGCAskChapterAward)
  // optional int32 _chapterNum = 1;
  if (has__chapternum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->_chapternum(), target);
  }

  // optional bool _hardChapter = 2;
  if (has__hardchapter()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->_hardchapter(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGCAskChapterAward)
  return target;
}

int CGCAskChapterAward::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 _chapterNum = 1;
    if (has__chapternum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->_chapternum());
    }

    // optional bool _hardChapter = 2;
    if (has__hardchapter()) {
      total_size += 1 + 1;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCAskChapterAward::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCAskChapterAward* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCAskChapterAward>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCAskChapterAward::MergeFrom(const CGCAskChapterAward& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has__chapternum()) {
      set__chapternum(from._chapternum());
    }
    if (from.has__hardchapter()) {
      set__hardchapter(from._hardchapter());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCAskChapterAward::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCAskChapterAward::CopyFrom(const CGCAskChapterAward& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCAskChapterAward::IsInitialized() const {

  return true;
}

void CGCAskChapterAward::Swap(CGCAskChapterAward* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCAskChapterAward::InternalSwap(CGCAskChapterAward* other) {
  std::swap(_chapternum_, other->_chapternum_);
  std::swap(_hardchapter_, other->_hardchapter_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCAskChapterAward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCAskChapterAward_descriptor_;
  metadata.reflection = CGCAskChapterAward_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCAskChapterAward

// optional int32 _chapterNum = 1;
bool CGCAskChapterAward::has__chapternum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGCAskChapterAward::set_has__chapternum() {
  _has_bits_[0] |= 0x00000001u;
}
void CGCAskChapterAward::clear_has__chapternum() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGCAskChapterAward::clear__chapternum() {
  _chapternum_ = 0;
  clear_has__chapternum();
}
 ::google::protobuf::int32 CGCAskChapterAward::_chapternum() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCAskChapterAward._chapterNum)
  return _chapternum_;
}
 void CGCAskChapterAward::set__chapternum(::google::protobuf::int32 value) {
  set_has__chapternum();
  _chapternum_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCAskChapterAward._chapterNum)
}

// optional bool _hardChapter = 2;
bool CGCAskChapterAward::has__hardchapter() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CGCAskChapterAward::set_has__hardchapter() {
  _has_bits_[0] |= 0x00000002u;
}
void CGCAskChapterAward::clear_has__hardchapter() {
  _has_bits_[0] &= ~0x00000002u;
}
void CGCAskChapterAward::clear__hardchapter() {
  _hardchapter_ = false;
  clear_has__hardchapter();
}
 bool CGCAskChapterAward::_hardchapter() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCAskChapterAward._hardChapter)
  return _hardchapter_;
}
 void CGCAskChapterAward::set__hardchapter(bool value) {
  set_has__hardchapter();
  _hardchapter_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCAskChapterAward._hardChapter)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCAskMedalInfo::CGCAskMedalInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGCAskMedalInfo)
}

void CGCAskMedalInfo::InitAsDefaultInstance() {
}

CGCAskMedalInfo::CGCAskMedalInfo(const CGCAskMedalInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGCAskMedalInfo)
}

void CGCAskMedalInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCAskMedalInfo::~CGCAskMedalInfo() {
  // @@protoc_insertion_point(destructor:NetPackage.CGCAskMedalInfo)
  SharedDtor();
}

void CGCAskMedalInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGCAskMedalInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCAskMedalInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCAskMedalInfo_descriptor_;
}

const CGCAskMedalInfo& CGCAskMedalInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGCAskMedalInfo* CGCAskMedalInfo::default_instance_ = NULL;

CGCAskMedalInfo* CGCAskMedalInfo::New(::google::protobuf::Arena* arena) const {
  CGCAskMedalInfo* n = new CGCAskMedalInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCAskMedalInfo::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCAskMedalInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGCAskMedalInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGCAskMedalInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGCAskMedalInfo)
  return false;
#undef DO_
}

void CGCAskMedalInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGCAskMedalInfo)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGCAskMedalInfo)
}

::google::protobuf::uint8* CGCAskMedalInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGCAskMedalInfo)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGCAskMedalInfo)
  return target;
}

int CGCAskMedalInfo::ByteSize() const {
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCAskMedalInfo::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCAskMedalInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCAskMedalInfo>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCAskMedalInfo::MergeFrom(const CGCAskMedalInfo& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCAskMedalInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCAskMedalInfo::CopyFrom(const CGCAskMedalInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCAskMedalInfo::IsInitialized() const {

  return true;
}

void CGCAskMedalInfo::Swap(CGCAskMedalInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCAskMedalInfo::InternalSwap(CGCAskMedalInfo* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCAskMedalInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCAskMedalInfo_descriptor_;
  metadata.reflection = CGCAskMedalInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCAskMedalInfo

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCAskMedalLevelUp::CGCAskMedalLevelUp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGCAskMedalLevelUp)
}

void CGCAskMedalLevelUp::InitAsDefaultInstance() {
}

CGCAskMedalLevelUp::CGCAskMedalLevelUp(const CGCAskMedalLevelUp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGCAskMedalLevelUp)
}

void CGCAskMedalLevelUp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCAskMedalLevelUp::~CGCAskMedalLevelUp() {
  // @@protoc_insertion_point(destructor:NetPackage.CGCAskMedalLevelUp)
  SharedDtor();
}

void CGCAskMedalLevelUp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGCAskMedalLevelUp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCAskMedalLevelUp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCAskMedalLevelUp_descriptor_;
}

const CGCAskMedalLevelUp& CGCAskMedalLevelUp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGCAskMedalLevelUp* CGCAskMedalLevelUp::default_instance_ = NULL;

CGCAskMedalLevelUp* CGCAskMedalLevelUp::New(::google::protobuf::Arena* arena) const {
  CGCAskMedalLevelUp* n = new CGCAskMedalLevelUp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCAskMedalLevelUp::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCAskMedalLevelUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGCAskMedalLevelUp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGCAskMedalLevelUp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGCAskMedalLevelUp)
  return false;
#undef DO_
}

void CGCAskMedalLevelUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGCAskMedalLevelUp)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGCAskMedalLevelUp)
}

::google::protobuf::uint8* CGCAskMedalLevelUp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGCAskMedalLevelUp)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGCAskMedalLevelUp)
  return target;
}

int CGCAskMedalLevelUp::ByteSize() const {
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCAskMedalLevelUp::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCAskMedalLevelUp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCAskMedalLevelUp>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCAskMedalLevelUp::MergeFrom(const CGCAskMedalLevelUp& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCAskMedalLevelUp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCAskMedalLevelUp::CopyFrom(const CGCAskMedalLevelUp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCAskMedalLevelUp::IsInitialized() const {

  return true;
}

void CGCAskMedalLevelUp::Swap(CGCAskMedalLevelUp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCAskMedalLevelUp::InternalSwap(CGCAskMedalLevelUp* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCAskMedalLevelUp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCAskMedalLevelUp_descriptor_;
  metadata.reflection = CGCAskMedalLevelUp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCAskMedalLevelUp

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* CGCAskAddFriend_FriendSendType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCAskAddFriend_FriendSendType_descriptor_;
}
bool CGCAskAddFriend_FriendSendType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CGCAskAddFriend_FriendSendType CGCAskAddFriend::UNKONW;
const CGCAskAddFriend_FriendSendType CGCAskAddFriend::AddFriend;
const CGCAskAddFriend_FriendSendType CGCAskAddFriend::Not;
const CGCAskAddFriend_FriendSendType CGCAskAddFriend::Ok;
const CGCAskAddFriend_FriendSendType CGCAskAddFriend::DeleteFriend;
const CGCAskAddFriend_FriendSendType CGCAskAddFriend::SendAward;
const CGCAskAddFriend_FriendSendType CGCAskAddFriend::ReceiveAward;
const CGCAskAddFriend_FriendSendType CGCAskAddFriend::FriendSendType_MIN;
const CGCAskAddFriend_FriendSendType CGCAskAddFriend::FriendSendType_MAX;
const int CGCAskAddFriend::FriendSendType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCAskAddFriend::kFriendOptFieldNumber;
const int CGCAskAddFriend::kRoleNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCAskAddFriend::CGCAskAddFriend()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGCAskAddFriend)
}

void CGCAskAddFriend::InitAsDefaultInstance() {
}

CGCAskAddFriend::CGCAskAddFriend(const CGCAskAddFriend& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGCAskAddFriend)
}

void CGCAskAddFriend::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _friendopt_ = 0;
  _rolename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCAskAddFriend::~CGCAskAddFriend() {
  // @@protoc_insertion_point(destructor:NetPackage.CGCAskAddFriend)
  SharedDtor();
}

void CGCAskAddFriend::SharedDtor() {
  _rolename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CGCAskAddFriend::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCAskAddFriend::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCAskAddFriend_descriptor_;
}

const CGCAskAddFriend& CGCAskAddFriend::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGCAskAddFriend* CGCAskAddFriend::default_instance_ = NULL;

CGCAskAddFriend* CGCAskAddFriend::New(::google::protobuf::Arena* arena) const {
  CGCAskAddFriend* n = new CGCAskAddFriend;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCAskAddFriend::Clear() {
  if (_has_bits_[0 / 32] & 3u) {
    _friendopt_ = 0;
    if (has__rolename()) {
      _rolename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCAskAddFriend::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGCAskAddFriend)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .NetPackage.CGCAskAddFriend.FriendSendType _FriendOpt = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::NetPackage::CGCAskAddFriend_FriendSendType_IsValid(value)) {
            set__friendopt(static_cast< ::NetPackage::CGCAskAddFriend_FriendSendType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse__roleName;
        break;
      }

      // optional string _roleName = 2;
      case 2: {
        if (tag == 18) {
         parse__roleName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__rolename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_rolename().data(), this->_rolename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NetPackage.CGCAskAddFriend._roleName");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGCAskAddFriend)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGCAskAddFriend)
  return false;
#undef DO_
}

void CGCAskAddFriend::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGCAskAddFriend)
  // optional .NetPackage.CGCAskAddFriend.FriendSendType _FriendOpt = 1;
  if (has__friendopt()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->_friendopt(), output);
  }

  // optional string _roleName = 2;
  if (has__rolename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_rolename().data(), this->_rolename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NetPackage.CGCAskAddFriend._roleName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->_rolename(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGCAskAddFriend)
}

::google::protobuf::uint8* CGCAskAddFriend::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGCAskAddFriend)
  // optional .NetPackage.CGCAskAddFriend.FriendSendType _FriendOpt = 1;
  if (has__friendopt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->_friendopt(), target);
  }

  // optional string _roleName = 2;
  if (has__rolename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_rolename().data(), this->_rolename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NetPackage.CGCAskAddFriend._roleName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->_rolename(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGCAskAddFriend)
  return target;
}

int CGCAskAddFriend::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional .NetPackage.CGCAskAddFriend.FriendSendType _FriendOpt = 1;
    if (has__friendopt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->_friendopt());
    }

    // optional string _roleName = 2;
    if (has__rolename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_rolename());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCAskAddFriend::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCAskAddFriend* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCAskAddFriend>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCAskAddFriend::MergeFrom(const CGCAskAddFriend& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has__friendopt()) {
      set__friendopt(from._friendopt());
    }
    if (from.has__rolename()) {
      set_has__rolename();
      _rolename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._rolename_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCAskAddFriend::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCAskAddFriend::CopyFrom(const CGCAskAddFriend& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCAskAddFriend::IsInitialized() const {

  return true;
}

void CGCAskAddFriend::Swap(CGCAskAddFriend* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCAskAddFriend::InternalSwap(CGCAskAddFriend* other) {
  std::swap(_friendopt_, other->_friendopt_);
  _rolename_.Swap(&other->_rolename_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCAskAddFriend::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCAskAddFriend_descriptor_;
  metadata.reflection = CGCAskAddFriend_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCAskAddFriend

// optional .NetPackage.CGCAskAddFriend.FriendSendType _FriendOpt = 1;
bool CGCAskAddFriend::has__friendopt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGCAskAddFriend::set_has__friendopt() {
  _has_bits_[0] |= 0x00000001u;
}
void CGCAskAddFriend::clear_has__friendopt() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGCAskAddFriend::clear__friendopt() {
  _friendopt_ = 0;
  clear_has__friendopt();
}
 ::NetPackage::CGCAskAddFriend_FriendSendType CGCAskAddFriend::_friendopt() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCAskAddFriend._FriendOpt)
  return static_cast< ::NetPackage::CGCAskAddFriend_FriendSendType >(_friendopt_);
}
 void CGCAskAddFriend::set__friendopt(::NetPackage::CGCAskAddFriend_FriendSendType value) {
  assert(::NetPackage::CGCAskAddFriend_FriendSendType_IsValid(value));
  set_has__friendopt();
  _friendopt_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCAskAddFriend._FriendOpt)
}

// optional string _roleName = 2;
bool CGCAskAddFriend::has__rolename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CGCAskAddFriend::set_has__rolename() {
  _has_bits_[0] |= 0x00000002u;
}
void CGCAskAddFriend::clear_has__rolename() {
  _has_bits_[0] &= ~0x00000002u;
}
void CGCAskAddFriend::clear__rolename() {
  _rolename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__rolename();
}
 const ::std::string& CGCAskAddFriend::_rolename() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCAskAddFriend._roleName)
  return _rolename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CGCAskAddFriend::set__rolename(const ::std::string& value) {
  set_has__rolename();
  _rolename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetPackage.CGCAskAddFriend._roleName)
}
 void CGCAskAddFriend::set__rolename(const char* value) {
  set_has__rolename();
  _rolename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetPackage.CGCAskAddFriend._roleName)
}
 void CGCAskAddFriend::set__rolename(const char* value, size_t size) {
  set_has__rolename();
  _rolename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetPackage.CGCAskAddFriend._roleName)
}
 ::std::string* CGCAskAddFriend::mutable__rolename() {
  set_has__rolename();
  // @@protoc_insertion_point(field_mutable:NetPackage.CGCAskAddFriend._roleName)
  return _rolename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CGCAskAddFriend::release__rolename() {
  clear_has__rolename();
  return _rolename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CGCAskAddFriend::set_allocated__rolename(::std::string* _rolename) {
  if (_rolename != NULL) {
    set_has__rolename();
  } else {
    clear_has__rolename();
  }
  _rolename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _rolename);
  // @@protoc_insertion_point(field_set_allocated:NetPackage.CGCAskAddFriend._roleName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* CGCVipFriend_FriendSendType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCVipFriend_FriendSendType_descriptor_;
}
bool CGCVipFriend_FriendSendType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CGCVipFriend_FriendSendType CGCVipFriend::UNKONW;
const CGCVipFriend_FriendSendType CGCVipFriend::AddFriend;
const CGCVipFriend_FriendSendType CGCVipFriend::Not;
const CGCVipFriend_FriendSendType CGCVipFriend::Ok;
const CGCVipFriend_FriendSendType CGCVipFriend::DeleteFriend;
const CGCVipFriend_FriendSendType CGCVipFriend::SendAward;
const CGCVipFriend_FriendSendType CGCVipFriend::ReceiveAward;
const CGCVipFriend_FriendSendType CGCVipFriend::FriendSendType_MIN;
const CGCVipFriend_FriendSendType CGCVipFriend::FriendSendType_MAX;
const int CGCVipFriend::FriendSendType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCVipFriend::kFriendOptFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCVipFriend::CGCVipFriend()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGCVipFriend)
}

void CGCVipFriend::InitAsDefaultInstance() {
}

CGCVipFriend::CGCVipFriend(const CGCVipFriend& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGCVipFriend)
}

void CGCVipFriend::SharedCtor() {
  _cached_size_ = 0;
  _friendopt_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCVipFriend::~CGCVipFriend() {
  // @@protoc_insertion_point(destructor:NetPackage.CGCVipFriend)
  SharedDtor();
}

void CGCVipFriend::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGCVipFriend::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCVipFriend::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCVipFriend_descriptor_;
}

const CGCVipFriend& CGCVipFriend::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGCVipFriend* CGCVipFriend::default_instance_ = NULL;

CGCVipFriend* CGCVipFriend::New(::google::protobuf::Arena* arena) const {
  CGCVipFriend* n = new CGCVipFriend;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCVipFriend::Clear() {
  _friendopt_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCVipFriend::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGCVipFriend)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .NetPackage.CGCVipFriend.FriendSendType _FriendOpt = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::NetPackage::CGCVipFriend_FriendSendType_IsValid(value)) {
            set__friendopt(static_cast< ::NetPackage::CGCVipFriend_FriendSendType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGCVipFriend)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGCVipFriend)
  return false;
#undef DO_
}

void CGCVipFriend::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGCVipFriend)
  // optional .NetPackage.CGCVipFriend.FriendSendType _FriendOpt = 1;
  if (has__friendopt()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->_friendopt(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGCVipFriend)
}

::google::protobuf::uint8* CGCVipFriend::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGCVipFriend)
  // optional .NetPackage.CGCVipFriend.FriendSendType _FriendOpt = 1;
  if (has__friendopt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->_friendopt(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGCVipFriend)
  return target;
}

int CGCVipFriend::ByteSize() const {
  int total_size = 0;

  // optional .NetPackage.CGCVipFriend.FriendSendType _FriendOpt = 1;
  if (has__friendopt()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->_friendopt());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCVipFriend::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCVipFriend* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCVipFriend>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCVipFriend::MergeFrom(const CGCVipFriend& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has__friendopt()) {
      set__friendopt(from._friendopt());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCVipFriend::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCVipFriend::CopyFrom(const CGCVipFriend& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCVipFriend::IsInitialized() const {

  return true;
}

void CGCVipFriend::Swap(CGCVipFriend* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCVipFriend::InternalSwap(CGCVipFriend* other) {
  std::swap(_friendopt_, other->_friendopt_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCVipFriend::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCVipFriend_descriptor_;
  metadata.reflection = CGCVipFriend_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCVipFriend

// optional .NetPackage.CGCVipFriend.FriendSendType _FriendOpt = 1;
bool CGCVipFriend::has__friendopt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGCVipFriend::set_has__friendopt() {
  _has_bits_[0] |= 0x00000001u;
}
void CGCVipFriend::clear_has__friendopt() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGCVipFriend::clear__friendopt() {
  _friendopt_ = 0;
  clear_has__friendopt();
}
 ::NetPackage::CGCVipFriend_FriendSendType CGCVipFriend::_friendopt() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCVipFriend._FriendOpt)
  return static_cast< ::NetPackage::CGCVipFriend_FriendSendType >(_friendopt_);
}
 void CGCVipFriend::set__friendopt(::NetPackage::CGCVipFriend_FriendSendType value) {
  assert(::NetPackage::CGCVipFriend_FriendSendType_IsValid(value));
  set_has__friendopt();
  _friendopt_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCVipFriend._FriendOpt)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCAskFriendRecord::CGCAskFriendRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGCAskFriendRecord)
}

void CGCAskFriendRecord::InitAsDefaultInstance() {
}

CGCAskFriendRecord::CGCAskFriendRecord(const CGCAskFriendRecord& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGCAskFriendRecord)
}

void CGCAskFriendRecord::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCAskFriendRecord::~CGCAskFriendRecord() {
  // @@protoc_insertion_point(destructor:NetPackage.CGCAskFriendRecord)
  SharedDtor();
}

void CGCAskFriendRecord::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGCAskFriendRecord::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCAskFriendRecord::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCAskFriendRecord_descriptor_;
}

const CGCAskFriendRecord& CGCAskFriendRecord::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGCAskFriendRecord* CGCAskFriendRecord::default_instance_ = NULL;

CGCAskFriendRecord* CGCAskFriendRecord::New(::google::protobuf::Arena* arena) const {
  CGCAskFriendRecord* n = new CGCAskFriendRecord;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCAskFriendRecord::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCAskFriendRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGCAskFriendRecord)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGCAskFriendRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGCAskFriendRecord)
  return false;
#undef DO_
}

void CGCAskFriendRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGCAskFriendRecord)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGCAskFriendRecord)
}

::google::protobuf::uint8* CGCAskFriendRecord::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGCAskFriendRecord)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGCAskFriendRecord)
  return target;
}

int CGCAskFriendRecord::ByteSize() const {
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCAskFriendRecord::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCAskFriendRecord* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCAskFriendRecord>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCAskFriendRecord::MergeFrom(const CGCAskFriendRecord& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCAskFriendRecord::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCAskFriendRecord::CopyFrom(const CGCAskFriendRecord& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCAskFriendRecord::IsInitialized() const {

  return true;
}

void CGCAskFriendRecord::Swap(CGCAskFriendRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCAskFriendRecord::InternalSwap(CGCAskFriendRecord* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCAskFriendRecord::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCAskFriendRecord_descriptor_;
  metadata.reflection = CGCAskFriendRecord_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCAskFriendRecord

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCAskSelectPlayer::kByteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCAskSelectPlayer::CGCAskSelectPlayer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGCAskSelectPlayer)
}

void CGCAskSelectPlayer::InitAsDefaultInstance() {
}

CGCAskSelectPlayer::CGCAskSelectPlayer(const CGCAskSelectPlayer& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGCAskSelectPlayer)
}

void CGCAskSelectPlayer::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _byte_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCAskSelectPlayer::~CGCAskSelectPlayer() {
  // @@protoc_insertion_point(destructor:NetPackage.CGCAskSelectPlayer)
  SharedDtor();
}

void CGCAskSelectPlayer::SharedDtor() {
  _byte_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CGCAskSelectPlayer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCAskSelectPlayer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCAskSelectPlayer_descriptor_;
}

const CGCAskSelectPlayer& CGCAskSelectPlayer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGCAskSelectPlayer* CGCAskSelectPlayer::default_instance_ = NULL;

CGCAskSelectPlayer* CGCAskSelectPlayer::New(::google::protobuf::Arena* arena) const {
  CGCAskSelectPlayer* n = new CGCAskSelectPlayer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCAskSelectPlayer::Clear() {
  if (has__byte()) {
    _byte_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCAskSelectPlayer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGCAskSelectPlayer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string _byte = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__byte()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_byte().data(), this->_byte().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "NetPackage.CGCAskSelectPlayer._byte");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGCAskSelectPlayer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGCAskSelectPlayer)
  return false;
#undef DO_
}

void CGCAskSelectPlayer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGCAskSelectPlayer)
  // optional string _byte = 1;
  if (has__byte()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_byte().data(), this->_byte().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NetPackage.CGCAskSelectPlayer._byte");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->_byte(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGCAskSelectPlayer)
}

::google::protobuf::uint8* CGCAskSelectPlayer::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGCAskSelectPlayer)
  // optional string _byte = 1;
  if (has__byte()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_byte().data(), this->_byte().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "NetPackage.CGCAskSelectPlayer._byte");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->_byte(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGCAskSelectPlayer)
  return target;
}

int CGCAskSelectPlayer::ByteSize() const {
  int total_size = 0;

  // optional string _byte = 1;
  if (has__byte()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->_byte());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCAskSelectPlayer::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCAskSelectPlayer* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCAskSelectPlayer>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCAskSelectPlayer::MergeFrom(const CGCAskSelectPlayer& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has__byte()) {
      set_has__byte();
      _byte_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._byte_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCAskSelectPlayer::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCAskSelectPlayer::CopyFrom(const CGCAskSelectPlayer& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCAskSelectPlayer::IsInitialized() const {

  return true;
}

void CGCAskSelectPlayer::Swap(CGCAskSelectPlayer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCAskSelectPlayer::InternalSwap(CGCAskSelectPlayer* other) {
  _byte_.Swap(&other->_byte_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCAskSelectPlayer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCAskSelectPlayer_descriptor_;
  metadata.reflection = CGCAskSelectPlayer_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCAskSelectPlayer

// optional string _byte = 1;
bool CGCAskSelectPlayer::has__byte() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGCAskSelectPlayer::set_has__byte() {
  _has_bits_[0] |= 0x00000001u;
}
void CGCAskSelectPlayer::clear_has__byte() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGCAskSelectPlayer::clear__byte() {
  _byte_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__byte();
}
 const ::std::string& CGCAskSelectPlayer::_byte() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCAskSelectPlayer._byte)
  return _byte_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CGCAskSelectPlayer::set__byte(const ::std::string& value) {
  set_has__byte();
  _byte_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetPackage.CGCAskSelectPlayer._byte)
}
 void CGCAskSelectPlayer::set__byte(const char* value) {
  set_has__byte();
  _byte_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetPackage.CGCAskSelectPlayer._byte)
}
 void CGCAskSelectPlayer::set__byte(const char* value, size_t size) {
  set_has__byte();
  _byte_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetPackage.CGCAskSelectPlayer._byte)
}
 ::std::string* CGCAskSelectPlayer::mutable__byte() {
  set_has__byte();
  // @@protoc_insertion_point(field_mutable:NetPackage.CGCAskSelectPlayer._byte)
  return _byte_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CGCAskSelectPlayer::release__byte() {
  clear_has__byte();
  return _byte_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CGCAskSelectPlayer::set_allocated__byte(::std::string* _byte) {
  if (_byte != NULL) {
    set_has__byte();
  } else {
    clear_has__byte();
  }
  _byte_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _byte);
  // @@protoc_insertion_point(field_set_allocated:NetPackage.CGCAskSelectPlayer._byte)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCAskGuideComplate::kGroupIdFieldNumber;
const int CGCAskGuideComplate::kU8FinishFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCAskGuideComplate::CGCAskGuideComplate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetPackage.CGCAskGuideComplate)
}

void CGCAskGuideComplate::InitAsDefaultInstance() {
}

CGCAskGuideComplate::CGCAskGuideComplate(const CGCAskGuideComplate& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NetPackage.CGCAskGuideComplate)
}

void CGCAskGuideComplate::SharedCtor() {
  _cached_size_ = 0;
  groupid_ = 0u;
  u8finish_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CGCAskGuideComplate::~CGCAskGuideComplate() {
  // @@protoc_insertion_point(destructor:NetPackage.CGCAskGuideComplate)
  SharedDtor();
}

void CGCAskGuideComplate::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CGCAskGuideComplate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCAskGuideComplate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CGCAskGuideComplate_descriptor_;
}

const CGCAskGuideComplate& CGCAskGuideComplate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NetMessage_2eproto();
  return *default_instance_;
}

CGCAskGuideComplate* CGCAskGuideComplate::default_instance_ = NULL;

CGCAskGuideComplate* CGCAskGuideComplate::New(::google::protobuf::Arena* arena) const {
  CGCAskGuideComplate* n = new CGCAskGuideComplate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCAskGuideComplate::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CGCAskGuideComplate*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(groupid_, u8finish_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CGCAskGuideComplate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetPackage.CGCAskGuideComplate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 GroupId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &groupid_)));
          set_has_groupid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_u8Finish;
        break;
      }

      // optional bool u8Finish = 2;
      case 2: {
        if (tag == 16) {
         parse_u8Finish:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &u8finish_)));
          set_has_u8finish();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetPackage.CGCAskGuideComplate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetPackage.CGCAskGuideComplate)
  return false;
#undef DO_
}

void CGCAskGuideComplate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetPackage.CGCAskGuideComplate)
  // optional uint32 GroupId = 1;
  if (has_groupid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->groupid(), output);
  }

  // optional bool u8Finish = 2;
  if (has_u8finish()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->u8finish(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NetPackage.CGCAskGuideComplate)
}

::google::protobuf::uint8* CGCAskGuideComplate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetPackage.CGCAskGuideComplate)
  // optional uint32 GroupId = 1;
  if (has_groupid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->groupid(), target);
  }

  // optional bool u8Finish = 2;
  if (has_u8finish()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->u8finish(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetPackage.CGCAskGuideComplate)
  return target;
}

int CGCAskGuideComplate::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 GroupId = 1;
    if (has_groupid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->groupid());
    }

    // optional bool u8Finish = 2;
    if (has_u8finish()) {
      total_size += 1 + 1;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCAskGuideComplate::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CGCAskGuideComplate* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCAskGuideComplate>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CGCAskGuideComplate::MergeFrom(const CGCAskGuideComplate& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_groupid()) {
      set_groupid(from.groupid());
    }
    if (from.has_u8finish()) {
      set_u8finish(from.u8finish());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CGCAskGuideComplate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCAskGuideComplate::CopyFrom(const CGCAskGuideComplate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCAskGuideComplate::IsInitialized() const {

  return true;
}

void CGCAskGuideComplate::Swap(CGCAskGuideComplate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCAskGuideComplate::InternalSwap(CGCAskGuideComplate* other) {
  std::swap(groupid_, other->groupid_);
  std::swap(u8finish_, other->u8finish_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCAskGuideComplate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CGCAskGuideComplate_descriptor_;
  metadata.reflection = CGCAskGuideComplate_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCAskGuideComplate

// optional uint32 GroupId = 1;
bool CGCAskGuideComplate::has_groupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGCAskGuideComplate::set_has_groupid() {
  _has_bits_[0] |= 0x00000001u;
}
void CGCAskGuideComplate::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGCAskGuideComplate::clear_groupid() {
  groupid_ = 0u;
  clear_has_groupid();
}
 ::google::protobuf::uint32 CGCAskGuideComplate::groupid() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCAskGuideComplate.GroupId)
  return groupid_;
}
 void CGCAskGuideComplate::set_groupid(::google::protobuf::uint32 value) {
  set_has_groupid();
  groupid_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCAskGuideComplate.GroupId)
}

// optional bool u8Finish = 2;
bool CGCAskGuideComplate::has_u8finish() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CGCAskGuideComplate::set_has_u8finish() {
  _has_bits_[0] |= 0x00000002u;
}
void CGCAskGuideComplate::clear_has_u8finish() {
  _has_bits_[0] &= ~0x00000002u;
}
void CGCAskGuideComplate::clear_u8finish() {
  u8finish_ = false;
  clear_has_u8finish();
}
 bool CGCAskGuideComplate::u8finish() const {
  // @@protoc_insertion_point(field_get:NetPackage.CGCAskGuideComplate.u8Finish)
  return u8finish_;
}
 void CGCAskGuideComplate::set_u8finish(bool value) {
  set_has_u8finish();
  u8finish_ = value;
  // @@protoc_insertion_point(field_set:NetPackage.CGCAskGuideComplate.u8Finish)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace NetPackage

// @@protoc_insertion_point(global_scope)
